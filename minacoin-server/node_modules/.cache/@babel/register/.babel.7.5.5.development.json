{
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar LOG_TAG = 'IDX'; //configure IOC container\n\nvar ioc = require('./util/iocContainer');\n\nioc.service('loggerFactory', function (c) {\n  return require('./util/winstonLogger');\n});\nioc.service('ehFactory', function (c) {\n  return require('./util/exceptionHandler');\n});\nioc.service('p2pServerFactory', function (c) {\n  return require('./lib/p2p/classes/SwarmP2PServer').factory;\n});\nioc.service('database', function (c) {\n  return require('./lib/database/classes/LocalJsonDb');\n});\n\nvar Server = require('./server');\n\nvar server = new Server();\nserver.run();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkxPR19UQUciLCJpb2MiLCJyZXF1aXJlIiwic2VydmljZSIsImMiLCJmYWN0b3J5IiwiU2VydmVyIiwic2VydmVyIiwicnVuIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxPQUFPLEdBQUcsS0FBaEIsQyxDQUVBOztBQUNBLElBQU1DLEdBQUcsR0FBR0MsT0FBTyxDQUFDLHFCQUFELENBQW5COztBQUNBRCxHQUFHLENBQUNFLE9BQUosQ0FBWSxlQUFaLEVBQTZCLFVBQUFDLENBQUM7QUFBQSxTQUFJRixPQUFPLENBQUMsc0JBQUQsQ0FBWDtBQUFBLENBQTlCO0FBQ0FELEdBQUcsQ0FBQ0UsT0FBSixDQUFZLFdBQVosRUFBeUIsVUFBQUMsQ0FBQztBQUFBLFNBQUlGLE9BQU8sQ0FBQyx5QkFBRCxDQUFYO0FBQUEsQ0FBMUI7QUFDQUQsR0FBRyxDQUFDRSxPQUFKLENBQVksa0JBQVosRUFBZ0MsVUFBQUMsQ0FBQztBQUFBLFNBQUdGLE9BQU8sQ0FBQyxrQ0FBRCxDQUFQLENBQTRDRyxPQUEvQztBQUFBLENBQWpDO0FBQ0FKLEdBQUcsQ0FBQ0UsT0FBSixDQUFZLFVBQVosRUFBd0IsVUFBQUMsQ0FBQztBQUFBLFNBQUdGLE9BQU8sQ0FBQyxvQ0FBRCxDQUFWO0FBQUEsQ0FBekI7O0FBRUEsSUFBTUksTUFBTSxHQUFHSixPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFFQSxJQUFNSyxNQUFNLEdBQUcsSUFBSUQsTUFBSixFQUFmO0FBQ0FDLE1BQU0sQ0FBQ0MsR0FBUCIsInNvdXJjZVJvb3QiOiIvaG9tZS9hY2VyL0Rlc2t0b3AvbWluYWNvaW4vbWluYWNvaW4vbWluYWNvaW4tc2VydmVyL3NyYyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgTE9HX1RBRyA9ICdJRFgnO1xuXG4vL2NvbmZpZ3VyZSBJT0MgY29udGFpbmVyXG5jb25zdCBpb2MgPSByZXF1aXJlKCcuL3V0aWwvaW9jQ29udGFpbmVyJyk7XG5pb2Muc2VydmljZSgnbG9nZ2VyRmFjdG9yeScsIGMgPT4gcmVxdWlyZSgnLi91dGlsL3dpbnN0b25Mb2dnZXInKSk7XG5pb2Muc2VydmljZSgnZWhGYWN0b3J5JywgYyA9PiByZXF1aXJlKCcuL3V0aWwvZXhjZXB0aW9uSGFuZGxlcicpKTtcbmlvYy5zZXJ2aWNlKCdwMnBTZXJ2ZXJGYWN0b3J5JywgYz0+IHJlcXVpcmUoJy4vbGliL3AycC9jbGFzc2VzL1N3YXJtUDJQU2VydmVyJykuZmFjdG9yeSk7XG5pb2Muc2VydmljZSgnZGF0YWJhc2UnLCBjPT4gcmVxdWlyZSgnLi9saWIvZGF0YWJhc2UvY2xhc3Nlcy9Mb2NhbEpzb25EYicpKTtcblxuY29uc3QgU2VydmVyID0gcmVxdWlyZSgnLi9zZXJ2ZXInKTtcblxuY29uc3Qgc2VydmVyID0gbmV3IFNlcnZlcigpOyBcbnNlcnZlci5ydW4oKTsgXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "LOG_TAG",
        "ioc",
        "require",
        "service",
        "c",
        "factory",
        "Server",
        "server",
        "run"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,OAAO,GAAG,KAAhB,C,CAEA;;AACA,IAAMC,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAnB;;AACAD,GAAG,CAACE,OAAJ,CAAY,eAAZ,EAA6B,UAAAC,CAAC;AAAA,SAAIF,OAAO,CAAC,sBAAD,CAAX;AAAA,CAA9B;AACAD,GAAG,CAACE,OAAJ,CAAY,WAAZ,EAAyB,UAAAC,CAAC;AAAA,SAAIF,OAAO,CAAC,yBAAD,CAAX;AAAA,CAA1B;AACAD,GAAG,CAACE,OAAJ,CAAY,kBAAZ,EAAgC,UAAAC,CAAC;AAAA,SAAGF,OAAO,CAAC,kCAAD,CAAP,CAA4CG,OAA/C;AAAA,CAAjC;AACAJ,GAAG,CAACE,OAAJ,CAAY,UAAZ,EAAwB,UAAAC,CAAC;AAAA,SAAGF,OAAO,CAAC,oCAAD,CAAV;AAAA,CAAzB;;AAEA,IAAMI,MAAM,GAAGJ,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAMK,MAAM,GAAG,IAAID,MAAJ,EAAf;AACAC,MAAM,CAACC,GAAP",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'IDX';\n\n//configure IOC container\nconst ioc = require('./util/iocContainer');\nioc.service('loggerFactory', c => require('./util/winstonLogger'));\nioc.service('ehFactory', c => require('./util/exceptionHandler'));\nioc.service('p2pServerFactory', c=> require('./lib/p2p/classes/SwarmP2PServer').factory);\nioc.service('database', c=> require('./lib/database/classes/LocalJsonDb'));\n\nconst Server = require('./server');\n\nconst server = new Server(); \nserver.run(); \n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567756681157
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/iocContainer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/iocContainer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/iocContainer.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/iocContainer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
        "sourceFileName": "iocContainer.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n/**\n * ------------------------\n * simple homemade IOC container to serve our purposes.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Container =\n/*#__PURE__*/\nfunction () {\n  function Container() {\n    _classCallCheck(this, Container);\n\n    this.services = {};\n  }\n  /**\n   * register a service by name, with the IOC container\n   *\n   * @param {string} serviceName\n   * @param {fn} callback\n   */\n\n\n  _createClass(Container, [{\n    key: \"service\",\n    value: function service(serviceName, callback) {\n      var _this = this;\n\n      Object.defineProperty(this, serviceName, {\n        get: function get() {\n          if (!_this.services.hasOwnProperty(serviceName)) {\n            _this.services[serviceName] = callback(_this);\n          }\n\n          return _this.services[serviceName];\n        },\n        configurable: true,\n        enumerable: true\n      });\n      return this;\n    }\n  }]);\n\n  return Container;\n}(); //export singleton instance\n\n\nvar container = new Container();\nmodule.exports = container;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlvY0NvbnRhaW5lci5qcyJdLCJuYW1lcyI6WyJDb250YWluZXIiLCJzZXJ2aWNlcyIsInNlcnZpY2VOYW1lIiwiY2FsbGJhY2siLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldCIsImhhc093blByb3BlcnR5IiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImNvbnRhaW5lciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBO0FBRUE7Ozs7Ozs7Ozs7Ozs7O0lBT01BLFM7OztBQUNGLHVCQUFjO0FBQUE7O0FBQ1YsU0FBS0MsUUFBTCxHQUFnQixFQUFoQjtBQUNIO0FBRUQ7Ozs7Ozs7Ozs7NEJBTVFDLFcsRUFBYUMsUSxFQUFVO0FBQUE7O0FBQzNCQyxNQUFBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0IsSUFBdEIsRUFBNEJILFdBQTVCLEVBQXlDO0FBQ3JDSSxRQUFBQSxHQUFHLEVBQUUsZUFBTTtBQUNQLGNBQUksQ0FBQyxLQUFJLENBQUNMLFFBQUwsQ0FBY00sY0FBZCxDQUE2QkwsV0FBN0IsQ0FBTCxFQUFnRDtBQUM1QyxZQUFBLEtBQUksQ0FBQ0QsUUFBTCxDQUFjQyxXQUFkLElBQTZCQyxRQUFRLENBQUMsS0FBRCxDQUFyQztBQUNIOztBQUNELGlCQUFPLEtBQUksQ0FBQ0YsUUFBTCxDQUFjQyxXQUFkLENBQVA7QUFDSCxTQU5vQztBQU9yQ00sUUFBQUEsWUFBWSxFQUFFLElBUHVCO0FBUXJDQyxRQUFBQSxVQUFVLEVBQUU7QUFSeUIsT0FBekM7QUFXQSxhQUFPLElBQVA7QUFDSDs7OztLQUdMOzs7QUFDQSxJQUFNQyxTQUFTLEdBQUcsSUFBSVYsU0FBSixFQUFsQjtBQUNBVyxNQUFNLENBQUNDLE9BQVAsR0FBaUJGLFNBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FjZXIvRGVza3RvcC9taW5hY29pbi9taW5hY29pbi9taW5hY29pbi1zZXJ2ZXIvc3JjL3V0aWwiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBzaW1wbGUgaG9tZW1hZGUgSU9DIGNvbnRhaW5lciB0byBzZXJ2ZSBvdXIgcHVycG9zZXMuXG4gKlxuICogQXV0aG9yOiBKb2huIFIuIEtvc2luc2tpXG4gKiBEYXRlOiAyNyBBdWcgMjAxOVxuICovXG5jbGFzcyBDb250YWluZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnNlcnZpY2VzID0ge307XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogcmVnaXN0ZXIgYSBzZXJ2aWNlIGJ5IG5hbWUsIHdpdGggdGhlIElPQyBjb250YWluZXJcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzZXJ2aWNlTmFtZVxuICAgICAqIEBwYXJhbSB7Zm59IGNhbGxiYWNrXG4gICAgICovXG4gICAgc2VydmljZShzZXJ2aWNlTmFtZSwgY2FsbGJhY2spIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIHNlcnZpY2VOYW1lLCB7XG4gICAgICAgICAgICBnZXQ6ICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuc2VydmljZXMuaGFzT3duUHJvcGVydHkoc2VydmljZU5hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VydmljZXNbc2VydmljZU5hbWVdID0gY2FsbGJhY2sodGhpcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnNlcnZpY2VzW3NlcnZpY2VOYW1lXTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbn1cblxuLy9leHBvcnQgc2luZ2xldG9uIGluc3RhbmNlXG5jb25zdCBjb250YWluZXIgPSBuZXcgQ29udGFpbmVyKCk7XG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRhaW5lcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "iocContainer.js"
      ],
      "names": [
        "Container",
        "services",
        "serviceName",
        "callback",
        "Object",
        "defineProperty",
        "get",
        "hasOwnProperty",
        "configurable",
        "enumerable",
        "container",
        "module",
        "exports"
      ],
      "mappings": "AAAA;AAEA;;;;;;;;;;;;;;IAOMA,S;;;AACF,uBAAc;AAAA;;AACV,SAAKC,QAAL,GAAgB,EAAhB;AACH;AAED;;;;;;;;;;4BAMQC,W,EAAaC,Q,EAAU;AAAA;;AAC3BC,MAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4BH,WAA5B,EAAyC;AACrCI,QAAAA,GAAG,EAAE,eAAM;AACP,cAAI,CAAC,KAAI,CAACL,QAAL,CAAcM,cAAd,CAA6BL,WAA7B,CAAL,EAAgD;AAC5C,YAAA,KAAI,CAACD,QAAL,CAAcC,WAAd,IAA6BC,QAAQ,CAAC,KAAD,CAArC;AACH;;AACD,iBAAO,KAAI,CAACF,QAAL,CAAcC,WAAd,CAAP;AACH,SANoC;AAOrCM,QAAAA,YAAY,EAAE,IAPuB;AAQrCC,QAAAA,UAAU,EAAE;AARyB,OAAzC;AAWA,aAAO,IAAP;AACH;;;;KAGL;;;AACA,IAAMC,SAAS,GAAG,IAAIV,SAAJ,EAAlB;AACAW,MAAM,CAACC,OAAP,GAAiBF,SAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "sourcesContent": [
        "'use strict';\n\n/**\n * ------------------------\n * simple homemade IOC container to serve our purposes.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\nclass Container {\n    constructor() {\n        this.services = {};\n    }\n\n    /**\n     * register a service by name, with the IOC container\n     *\n     * @param {string} serviceName\n     * @param {fn} callback\n     */\n    service(serviceName, callback) {\n        Object.defineProperty(this, serviceName, {\n            get: () => {\n                if (!this.services.hasOwnProperty(serviceName)) {\n                    this.services[serviceName] = callback(this);\n                }\n                return this.services[serviceName];\n            },\n            configurable: true,\n            enumerable: true\n        });\n\n        return this;\n    }\n}\n\n//export singleton instance\nconst container = new Container();\nmodule.exports = container;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567608948870
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/server.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'SRV';\n\nvar ioc = require('./util/iocContainer'); //imports\n\n\nvar _require = require('./lib/miner'),\n    Miner = _require.Miner;\n\nvar _require2 = require('./lib/blockchain'),\n    Blockchain = _require2.Blockchain;\n\nvar _require3 = require('./lib/wallet'),\n    Wallet = _require3.Wallet,\n    TransactionPool = _require3.TransactionPool;\n\nvar _require4 = require('./httpServer'),\n    HttpServer = _require4.HttpServer;\n\nvar config = require('./config');\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n\nvar Server =\n/*#__PURE__*/\nfunction () {\n  function Server() {\n    _classCallCheck(this, Server);\n  }\n\n  _createClass(Server, [{\n    key: \"run\",\n    value: function () {\n      var _run = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return initializeBlockchain();\n\n              case 2:\n                this.blockchain = _context.sent;\n                //on blockchain changes, save to database\n                this.blockchain.on('update', function () {\n                  ioc.database.saveBlockchain(_this.blockchain);\n                }); //create instance of wallet\n\n                _context.next = 6;\n                return initializeWallet();\n\n              case 6:\n                this.wallet = _context.sent;\n                //on wallet changes, save to database\n                this.wallet.on('update replace', function () {\n                  ioc.database.saveWallet(_this.wallet);\n                }); //create transaction pool\n\n                this.txPool = new TransactionPool(); //create instance of P2P server\n\n                this.p2pServer = ioc.p2pServerFactory.createInstance(this.blockchain, this.txPool, this.wallet); //create a miner\n\n                this.miner = new Miner(this.blockchain, this.txPool, this.wallet, this.p2pServer); //create and start server\n\n                this.httpServer = new HttpServer(this.blockchain, this.wallet, this.p2pServer, this.txPool, this.miner);\n                this.httpServer.start(); //createTestChain(); \n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function run() {\n        return _run.apply(this, arguments);\n      }\n\n      return run;\n    }()\n  }]);\n\n  return Server;\n}();\n\nfunction initializeBlockchain() {\n  return _initializeBlockchain.apply(this, arguments);\n}\n\nfunction _initializeBlockchain() {\n  _initializeBlockchain = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3() {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return exception.tryAsync(\n            /*#__PURE__*/\n            _asyncToGenerator(\n            /*#__PURE__*/\n            regeneratorRuntime.mark(function _callee2() {\n              var blockchain, blockchainData;\n              return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      logger.info('initializing blockchain...');\n                      blockchain = null;\n\n                      if (!config.USE_DATABASE) {\n                        _context2.next = 7;\n                        break;\n                      }\n\n                      _context2.next = 5;\n                      return ioc.database.getBlockchain();\n\n                    case 5:\n                      blockchainData = _context2.sent;\n\n                      if (blockchainData) {\n                        blockchain = Blockchain.fromJson(blockchainData);\n                      }\n\n                    case 7:\n                      if (!blockchain) {\n                        logger.info('no blockchain found in DB; creating new one...');\n                        blockchain = new Blockchain();\n                        ioc.database.saveBlockchain(blockchain);\n                      }\n\n                      return _context2.abrupt(\"return\", blockchain);\n\n                    case 9:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            })));\n\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _initializeBlockchain.apply(this, arguments);\n}\n\nfunction initializeWallet() {\n  return _initializeWallet.apply(this, arguments);\n} //TODO: convert these to unit tests \n\n\nfunction _initializeWallet() {\n  _initializeWallet = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5() {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return exception.tryAsync(\n            /*#__PURE__*/\n            _asyncToGenerator(\n            /*#__PURE__*/\n            regeneratorRuntime.mark(function _callee4() {\n              var wallet, walletData;\n              return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      logger.info('initializing wallet...');\n                      wallet = null;\n\n                      if (!config.USE_DATABASE) {\n                        _context4.next = 7;\n                        break;\n                      }\n\n                      _context4.next = 5;\n                      return ioc.database.getWallet();\n\n                    case 5:\n                      walletData = _context4.sent;\n\n                      if (walletData) {\n                        wallet = Wallet.fromJson(walletData);\n                      }\n\n                    case 7:\n                      if (!wallet) {\n                        logger.info('no wallet found in DB; creating new one...');\n                        wallet = new Wallet();\n                        ioc.database.saveWallet(wallet);\n                      }\n\n                      return _context4.abrupt(\"return\", wallet);\n\n                    case 9:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, _callee4);\n            })));\n\n          case 2:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _initializeWallet.apply(this, arguments);\n}\n\nfunction createTestChain() {\n  return _createTestChain.apply(this, arguments);\n}\n\nfunction _createTestChain() {\n  _createTestChain = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6() {\n    var wallet1, wallet2, wallet3, blockchain, txPool, miner1, miner2, miner3, bc;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            wallet1 = new Wallet();\n            wallet2 = new Wallet();\n            wallet3 = new Wallet();\n            blockchain = new Blockchain();\n            txPool = new TransactionPool();\n            miner1 = new Miner(blockchain, txPool, wallet1);\n            miner2 = new Miner(blockchain, txPool, wallet2);\n            miner3 = new Miner(blockchain, txPool, wallet3);\n            wallet1.createTransaction(wallet2.publicKey, 10, blockchain, txPool);\n            wallet1.createTransaction(wallet3.publicKey, 10, blockchain, txPool);\n            wallet3.createTransaction(wallet2.publicKey, 100, blockchain, txPool);\n            miner1.mine();\n            wallet1.updateBalance(blockchain);\n            wallet2.updateBalance(blockchain);\n            wallet3.updateBalance(blockchain);\n            console.log('wallet 1 balance: ' + wallet1.balance);\n            console.log('wallet 2 balance: ' + wallet2.balance);\n            console.log('wallet 3 balance: ' + wallet3.balance);\n            ioc.database.saveBlockchain(blockchain);\n            _context6.t0 = Blockchain;\n            _context6.next = 22;\n            return ioc.database.getBlockchain();\n\n          case 22:\n            _context6.t1 = _context6.sent;\n            bc = _context6.t0.fromJson.call(_context6.t0, _context6.t1);\n            wallet2.createTransaction(wallet1.publicKey, 10, blockchain, txPool);\n            wallet3.createTransaction(wallet1.publicKey, 10, blockchain, txPool);\n            wallet2.createTransaction(wallet3.publicKey, 100, blockchain, txPool);\n            miner3.mine();\n            wallet1.updateBalance(blockchain);\n            wallet2.updateBalance(blockchain);\n            wallet3.updateBalance(blockchain);\n            console.log('wallet 1 balance: ' + wallet1.balance);\n            console.log('wallet 2 balance: ' + wallet2.balance);\n            console.log('wallet 3 balance: ' + wallet3.balance);\n\n          case 34:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _createTestChain.apply(this, arguments);\n}\n\nmodule.exports = Server;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "LOG_TAG",
        "ioc",
        "require",
        "Miner",
        "Blockchain",
        "Wallet",
        "TransactionPool",
        "HttpServer",
        "config",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Server",
        "initializeBlockchain",
        "blockchain",
        "on",
        "database",
        "saveBlockchain",
        "initializeWallet",
        "wallet",
        "saveWallet",
        "txPool",
        "p2pServer",
        "p2pServerFactory",
        "createInstance",
        "miner",
        "httpServer",
        "start",
        "tryAsync",
        "info",
        "USE_DATABASE",
        "getBlockchain",
        "blockchainData",
        "fromJson",
        "getWallet",
        "walletData",
        "createTestChain",
        "wallet1",
        "wallet2",
        "wallet3",
        "miner1",
        "miner2",
        "miner3",
        "createTransaction",
        "publicKey",
        "mine",
        "updateBalance",
        "console",
        "log",
        "balance",
        "bc",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,KAAhB;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAnB,C,CAEA;;;eACkBA,OAAO,CAAC,aAAD,C;IAAjBC,K,YAAAA,K;;gBACeD,OAAO,CAAC,kBAAD,C;IAAtBE,U,aAAAA,U;;gBAC4BF,OAAO,CAAC,cAAD,C;IAAnCG,M,aAAAA,M;IAAQC,e,aAAAA,e;;gBACOJ,OAAO,CAAC,cAAD,C;IAAtBK,U,aAAAA,U;;AACR,IAAMC,MAAM,GAAGN,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAMO,MAAM,GAAGR,GAAG,CAACS,aAAJ,CAAkBC,YAAlB,CAA+BX,OAA/B,CAAf;AACA,IAAMY,SAAS,GAAGX,GAAG,CAACY,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;;IAEMM,M;;;;;;;;;;;;;;;;;;;;uBAG0BC,oBAAoB,E;;;AAA5C,qBAAKC,U;AAEL;AACA,qBAAKA,UAAL,CAAgBC,EAAhB,CAAmB,QAAnB,EAA6B,YAAM;AAC/BjB,kBAAAA,GAAG,CAACkB,QAAJ,CAAaC,cAAb,CAA4B,KAAI,CAACH,UAAjC;AACH,iBAFD,E,CAIA;;;uBACoBI,gBAAgB,E;;;AAApC,qBAAKC,M;AAEL;AACA,qBAAKA,MAAL,CAAYJ,EAAZ,CAAe,gBAAf,EAAiC,YAAM;AACnCjB,kBAAAA,GAAG,CAACkB,QAAJ,CAAaI,UAAb,CAAwB,KAAI,CAACD,MAA7B;AACH,iBAFD,E,CAIA;;AACA,qBAAKE,MAAL,GAAc,IAAIlB,eAAJ,EAAd,C,CAEA;;AACA,qBAAKmB,SAAL,GAAiBxB,GAAG,CAACyB,gBAAJ,CAAqBC,cAArB,CAAoC,KAAKV,UAAzC,EAAqD,KAAKO,MAA1D,EAAkE,KAAKF,MAAvE,CAAjB,C,CAEA;;AACA,qBAAKM,KAAL,GAAa,IAAIzB,KAAJ,CAAU,KAAKc,UAAf,EAA2B,KAAKO,MAAhC,EAAwC,KAAKF,MAA7C,EAAqD,KAAKG,SAA1D,CAAb,C,CAEA;;AACA,qBAAKI,UAAL,GAAkB,IAAItB,UAAJ,CAAe,KAAKU,UAApB,EAAgC,KAAKK,MAArC,EAA6C,KAAKG,SAAlD,EAA6D,KAAKD,MAAlE,EAA0E,KAAKI,KAA/E,CAAlB;AACA,qBAAKC,UAAL,CAAgBC,KAAhB,G,CAEA;;;;;;;;;;;;;;;;;;;;;SAKOd,oB;;;;;;;0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACiBJ,SAAS,CAACmB,QAAV;AAAA;AAAA;AAAA;AAAA,oCAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BtB,sBAAAA,MAAM,CAACuB,IAAP,CAAY,4BAAZ;AAEIf,sBAAAA,UAHwB,GAGX,IAHW;;AAAA,2BAKxBT,MAAM,CAACyB,YALiB;AAAA;AAAA;AAAA;;AAAA;AAAA,6BAMGhC,GAAG,CAACkB,QAAJ,CAAae,aAAb,EANH;;AAAA;AAMpBC,sBAAAA,cANoB;;AAOxB,0BAAIA,cAAJ,EAAoB;AAChBlB,wBAAAA,UAAU,GAAGb,UAAU,CAACgC,QAAX,CAAoBD,cAApB,CAAb;AACH;;AATuB;AAY5B,0BAAI,CAAClB,UAAL,EAAiB;AACbR,wBAAAA,MAAM,CAACuB,IAAP,CAAY,gDAAZ;AACAf,wBAAAA,UAAU,GAAG,IAAIb,UAAJ,EAAb;AACAH,wBAAAA,GAAG,CAACkB,QAAJ,CAAaC,cAAb,CAA4BH,UAA5B;AACH;;AAhB2B,wDAkBrBA,UAlBqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAnB,GADjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAuBeI,gB;;EAuBf;;;;;;0BAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACiBT,SAAS,CAACmB,QAAV;AAAA;AAAA;AAAA;AAAA,oCAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BtB,sBAAAA,MAAM,CAACuB,IAAP,CAAY,wBAAZ;AAEIV,sBAAAA,MAHwB,GAGf,IAHe;;AAAA,2BAKxBd,MAAM,CAACyB,YALiB;AAAA;AAAA;AAAA;;AAAA;AAAA,6BAMDhC,GAAG,CAACkB,QAAJ,CAAakB,SAAb,EANC;;AAAA;AAMpBC,sBAAAA,UANoB;;AAOxB,0BAAIA,UAAJ,EAAgB;AACZhB,wBAAAA,MAAM,GAAGjB,MAAM,CAAC+B,QAAP,CAAgBE,UAAhB,CAAT;AACH;;AATuB;AAY5B,0BAAI,CAAChB,MAAL,EAAa;AACTb,wBAAAA,MAAM,CAACuB,IAAP,CAAY,4CAAZ;AACAV,wBAAAA,MAAM,GAAG,IAAIjB,MAAJ,EAAT;AACAJ,wBAAAA,GAAG,CAACkB,QAAJ,CAAaI,UAAb,CAAwBD,MAAxB;AACH;;AAhB2B,wDAkBrBA,MAlBqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAnB,GADjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAwBeiB,e;;;;;;;0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,YAAAA,OADV,GACoB,IAAInC,MAAJ,EADpB;AAEUoC,YAAAA,OAFV,GAEoB,IAAIpC,MAAJ,EAFpB;AAGUqC,YAAAA,OAHV,GAGoB,IAAIrC,MAAJ,EAHpB;AAKUY,YAAAA,UALV,GAKuB,IAAIb,UAAJ,EALvB;AAMUoB,YAAAA,MANV,GAMmB,IAAIlB,eAAJ,EANnB;AAQUqC,YAAAA,MARV,GAQmB,IAAIxC,KAAJ,CAAUc,UAAV,EAAsBO,MAAtB,EAA8BgB,OAA9B,CARnB;AASUI,YAAAA,MATV,GASmB,IAAIzC,KAAJ,CAAUc,UAAV,EAAsBO,MAAtB,EAA8BiB,OAA9B,CATnB;AAUUI,YAAAA,MAVV,GAUmB,IAAI1C,KAAJ,CAAUc,UAAV,EAAsBO,MAAtB,EAA8BkB,OAA9B,CAVnB;AAYIF,YAAAA,OAAO,CAACM,iBAAR,CAA0BL,OAAO,CAACM,SAAlC,EAA6C,EAA7C,EAAiD9B,UAAjD,EAA6DO,MAA7D;AACAgB,YAAAA,OAAO,CAACM,iBAAR,CAA0BJ,OAAO,CAACK,SAAlC,EAA6C,EAA7C,EAAiD9B,UAAjD,EAA6DO,MAA7D;AACAkB,YAAAA,OAAO,CAACI,iBAAR,CAA0BL,OAAO,CAACM,SAAlC,EAA6C,GAA7C,EAAkD9B,UAAlD,EAA8DO,MAA9D;AAEAmB,YAAAA,MAAM,CAACK,IAAP;AAEAR,YAAAA,OAAO,CAACS,aAAR,CAAsBhC,UAAtB;AACAwB,YAAAA,OAAO,CAACQ,aAAR,CAAsBhC,UAAtB;AACAyB,YAAAA,OAAO,CAACO,aAAR,CAAsBhC,UAAtB;AAEAiC,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBX,OAAO,CAACY,OAA3C;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBV,OAAO,CAACW,OAA3C;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBT,OAAO,CAACU,OAA3C;AAEAnD,YAAAA,GAAG,CAACkB,QAAJ,CAAaC,cAAb,CAA4BH,UAA5B;AA1BJ,2BA2Beb,UA3Bf;AAAA;AAAA,mBA2ByCH,GAAG,CAACkB,QAAJ,CAAae,aAAb,EA3BzC;;AAAA;AAAA;AA2BUmB,YAAAA,EA3BV,gBA2B0BjB,QA3B1B;AA6BIK,YAAAA,OAAO,CAACK,iBAAR,CAA0BN,OAAO,CAACO,SAAlC,EAA6C,EAA7C,EAAiD9B,UAAjD,EAA6DO,MAA7D;AACAkB,YAAAA,OAAO,CAACI,iBAAR,CAA0BN,OAAO,CAACO,SAAlC,EAA6C,EAA7C,EAAiD9B,UAAjD,EAA6DO,MAA7D;AACAiB,YAAAA,OAAO,CAACK,iBAAR,CAA0BJ,OAAO,CAACK,SAAlC,EAA6C,GAA7C,EAAkD9B,UAAlD,EAA8DO,MAA9D;AAEAqB,YAAAA,MAAM,CAACG,IAAP;AAEAR,YAAAA,OAAO,CAACS,aAAR,CAAsBhC,UAAtB;AACAwB,YAAAA,OAAO,CAACQ,aAAR,CAAsBhC,UAAtB;AACAyB,YAAAA,OAAO,CAACO,aAAR,CAAsBhC,UAAtB;AAEAiC,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBX,OAAO,CAACY,OAA3C;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBV,OAAO,CAACW,OAA3C;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBT,OAAO,CAACU,OAA3C;;AAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA6CAE,MAAM,CAACC,OAAP,GAAiBxC,MAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'SRV';\n\nconst ioc = require('./util/iocContainer');\n\n//imports\nconst { Miner } = require('./lib/miner');\nconst { Blockchain } = require('./lib/blockchain');\nconst { Wallet, TransactionPool } = require('./lib/wallet');\nconst { HttpServer } = require('./httpServer');\nconst config = require('./config');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\nclass Server {\n    async run() {\n        //create instance of blockchain\n        this.blockchain = await initializeBlockchain();\n    \n        //on blockchain changes, save to database\n        this.blockchain.on('update', () => {\n            ioc.database.saveBlockchain(this.blockchain);\n        });\n    \n        //create instance of wallet\n        this.wallet = await initializeWallet();\n    \n        //on wallet changes, save to database\n        this.wallet.on('update replace', () => {\n            ioc.database.saveWallet(this.wallet);\n        });\n    \n        //create transaction pool\n        this.txPool = new TransactionPool();\n    \n        //create instance of P2P server\n        this.p2pServer = ioc.p2pServerFactory.createInstance(this.blockchain, this.txPool, this.wallet);\n    \n        //create a miner\n        this.miner = new Miner(this.blockchain, this.txPool, this.wallet, this.p2pServer);\n    \n        //create and start server\n        this.httpServer = new HttpServer(this.blockchain, this.wallet, this.p2pServer, this.txPool, this.miner);\n        this.httpServer.start();\n        \n        //createTestChain(); \n    }\n}\n\n\nasync function initializeBlockchain() {\n    return await exception.tryAsync(async () => {\n        logger.info('initializing blockchain...');\n\n        let blockchain = null;\n\n        if (config.USE_DATABASE) {\n            let blockchainData = await ioc.database.getBlockchain();\n            if (blockchainData) {\n                blockchain = Blockchain.fromJson(blockchainData);\n            }\n        }\n\n        if (!blockchain) {\n            logger.info('no blockchain found in DB; creating new one...')\n            blockchain = new Blockchain();\n            ioc.database.saveBlockchain(blockchain);\n        }\n\n        return blockchain;\n    });\n}\n\nasync function initializeWallet() {\n    return await exception.tryAsync(async () => {\n        logger.info('initializing wallet...');\n\n        let wallet = null;\n\n        if (config.USE_DATABASE) {\n            let walletData = await ioc.database.getWallet();\n            if (walletData) {\n                wallet = Wallet.fromJson(walletData);\n            }\n        }\n\n        if (!wallet) {\n            logger.info('no wallet found in DB; creating new one...')\n            wallet = new Wallet();\n            ioc.database.saveWallet(wallet);\n        }\n\n        return wallet;\n    });\n}\n\n//TODO: convert these to unit tests \nasync function createTestChain() {\n    const wallet1 = new Wallet(); \n    const wallet2 = new Wallet(); \n    const wallet3 = new Wallet(); \n    \n    const blockchain = new Blockchain(); \n    const txPool = new TransactionPool(); \n\n    const miner1 = new Miner(blockchain, txPool, wallet1); \n    const miner2 = new Miner(blockchain, txPool, wallet2); \n    const miner3 = new Miner(blockchain, txPool, wallet3); \n    \n    wallet1.createTransaction(wallet2.publicKey, 10, blockchain, txPool); \n    wallet1.createTransaction(wallet3.publicKey, 10, blockchain, txPool); \n    wallet3.createTransaction(wallet2.publicKey, 100, blockchain, txPool);     \n    \n    miner1.mine(); \n    \n    wallet1.updateBalance(blockchain);\n    wallet2.updateBalance(blockchain);\n    wallet3.updateBalance(blockchain);\n    \n    console.log('wallet 1 balance: ' + wallet1.balance);\n    console.log('wallet 2 balance: ' + wallet2.balance);\n    console.log('wallet 3 balance: ' + wallet3.balance);\n    \n    ioc.database.saveBlockchain(blockchain); \n    const bc = Blockchain.fromJson(await ioc.database.getBlockchain()); \n    \n    wallet2.createTransaction(wallet1.publicKey, 10, blockchain, txPool); \n    wallet3.createTransaction(wallet1.publicKey, 10, blockchain, txPool); \n    wallet2.createTransaction(wallet3.publicKey, 100, blockchain, txPool);     \n    \n    miner3.mine();\n    \n    wallet1.updateBalance(blockchain);\n    wallet2.updateBalance(blockchain);\n    wallet3.updateBalance(blockchain);\n    \n    console.log('wallet 1 balance: ' + wallet1.balance);\n    console.log('wallet 2 balance: ' + wallet2.balance);\n    console.log('wallet 3 balance: ' + wallet3.balance);\n}\n\n\nmodule.exports = Server;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567756666452
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar Miner = require('./classes/Miner');\n\nmodule.exports = {\n  Miner: Miner\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIk1pbmVyIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLGlCQUFELENBQXJCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkgsRUFBQUEsS0FBSyxFQUFMQTtBQURhLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FjZXIvRGVza3RvcC9taW5hY29pbi9taW5hY29pbi9taW5hY29pbi1zZXJ2ZXIvc3JjL2xpYi9taW5lciIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgTWluZXIgPSByZXF1aXJlKCcuL2NsYXNzZXMvTWluZXInKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgTWluZXJcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Miner",
        "require",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,iBAAD,CAArB;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACbH,EAAAA,KAAK,EAALA;AADa,CAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner",
      "sourcesContent": [
        "'use strict';\n\nconst Miner = require('./classes/Miner');\n\nmodule.exports = {\n    Miner\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1567354906401
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes/Miner.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes/Miner.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes/Miner.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes/Miner.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes",
        "sourceFileName": "Miner.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'MNR';\n\nvar ioc = require('../../../util/iocContainer');\n\nvar _require = require('../../wallet'),\n    Transaction = _require.Transaction,\n    Wallet = _require.Wallet;\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: Miner\n * ---------------\n * handles mining new coins \n *\n * author: John R. Kosinski\n */\n\nvar Miner =\n/*#__PURE__*/\nfunction () {\n  _createClass(Miner, [{\n    key: \"blockchain\",\n    get: function get() {\n      return this._blockchain;\n    }\n  }, {\n    key: \"transactionPool\",\n    get: function get() {\n      return this._transactionPool;\n    }\n  }, {\n    key: \"wallet\",\n    get: function get() {\n      return this._wallet;\n    }\n  }, {\n    key: \"p2pServer\",\n    get: function get() {\n      return this._p2pServer;\n    }\n    /**\n     * constructor \n     * @param {Blockchain} blockchain \n     * @param {TransactionPool} transactionPool \n     * @param {Wallet} wallet \n     * @param {IP2PServer} p2pServer \n     */\n\n  }]);\n\n  function Miner(blockchain, transactionPool, wallet, p2pServer) {\n    _classCallCheck(this, Miner);\n\n    this._blockchain = blockchain;\n    this._transactionPool = transactionPool;\n    this._wallet = wallet;\n    this._p2pServer = p2pServer;\n  }\n  /**\n   * selects transactions from the transaction pool to add to a new block, creates \n   * & adds the new block to the blockchain, and returns the new block. \n   * @returns {Block}\n   */\n\n  /*Block*/\n\n\n  _createClass(Miner, [{\n    key: \"mine\",\n    value: function mine() {\n      var _this = this;\n\n      return exception[\"try\"](function () {\n        //get transactions from transaction pool\n        var validTransactions = _this.transactionPool.validTransactions();\n\n        if (validTransactions && validTransactions.length > 0) {\n          //add a reward for self\n          validTransactions.push(Transaction.rewardTransaction(_this.wallet, Wallet.blockchainWallet())); //add them into a block\n\n          var block = _this.blockchain.addBlock(validTransactions);\n\n          if (block) {\n            //sync the chain\n            if (_this.p2pServer) {\n              _this.p2pServer.syncChain();\n            } //clear the transaction pool\n\n\n            _this.transactionPool.clear(); //broadcast directive to clear transaction pool\n\n\n            if (_this.p2pServer) {\n              _this.p2pServer.broadcastClearTransactions();\n            }\n          } else {\n            //clear the transaction pool; maybe we have an old or corrupt pool\n            _this.transactionPool.clear();\n          }\n\n          return block;\n        } else {\n          logger.info('no valid transactions available to mine');\n          return null;\n        }\n      });\n    }\n  }]);\n\n  return Miner;\n}();\n\nmodule.exports = Miner;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1pbmVyLmpzIl0sIm5hbWVzIjpbIkxPR19UQUciLCJpb2MiLCJyZXF1aXJlIiwiVHJhbnNhY3Rpb24iLCJXYWxsZXQiLCJsb2dnZXIiLCJsb2dnZXJGYWN0b3J5IiwiY3JlYXRlTG9nZ2VyIiwiZXhjZXB0aW9uIiwiZWhGYWN0b3J5IiwiY3JlYXRlSGFuZGxlciIsIk1pbmVyIiwiX2Jsb2NrY2hhaW4iLCJfdHJhbnNhY3Rpb25Qb29sIiwiX3dhbGxldCIsIl9wMnBTZXJ2ZXIiLCJibG9ja2NoYWluIiwidHJhbnNhY3Rpb25Qb29sIiwid2FsbGV0IiwicDJwU2VydmVyIiwidmFsaWRUcmFuc2FjdGlvbnMiLCJsZW5ndGgiLCJwdXNoIiwicmV3YXJkVHJhbnNhY3Rpb24iLCJibG9ja2NoYWluV2FsbGV0IiwiYmxvY2siLCJhZGRCbG9jayIsInN5bmNDaGFpbiIsImNsZWFyIiwiYnJvYWRjYXN0Q2xlYXJUcmFuc2FjdGlvbnMiLCJpbmZvIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBRUEsSUFBTUEsT0FBTyxHQUFHLEtBQWhCOztBQUVBLElBQU1DLEdBQUcsR0FBR0MsT0FBTyxDQUFDLDRCQUFELENBQW5COztlQUNnQ0EsT0FBTyxDQUFDLGNBQUQsQztJQUEvQkMsVyxZQUFBQSxXO0lBQWFDLE0sWUFBQUEsTTs7QUFFckIsSUFBTUMsTUFBTSxHQUFHSixHQUFHLENBQUNLLGFBQUosQ0FBa0JDLFlBQWxCLENBQStCUCxPQUEvQixDQUFmO0FBQ0EsSUFBTVEsU0FBUyxHQUFHUCxHQUFHLENBQUNRLFNBQUosQ0FBY0MsYUFBZCxDQUE0QkwsTUFBNUIsQ0FBbEI7QUFFQTs7Ozs7Ozs7SUFPTU0sSzs7Ozs7d0JBQ2U7QUFBRSxhQUFPLEtBQUtDLFdBQVo7QUFBMEI7Ozt3QkFDdkI7QUFBRSxhQUFPLEtBQUtDLGdCQUFaO0FBQStCOzs7d0JBQzFDO0FBQUUsYUFBTyxLQUFLQyxPQUFaO0FBQXNCOzs7d0JBQ3JCO0FBQUUsYUFBTyxLQUFLQyxVQUFaO0FBQXlCO0FBRTNDOzs7Ozs7Ozs7O0FBT0EsaUJBQVlDLFVBQVosRUFBd0JDLGVBQXhCLEVBQXlDQyxNQUF6QyxFQUFpREMsU0FBakQsRUFBNEQ7QUFBQTs7QUFDeEQsU0FBS1AsV0FBTCxHQUFtQkksVUFBbkI7QUFDQSxTQUFLSCxnQkFBTCxHQUF3QkksZUFBeEI7QUFDQSxTQUFLSCxPQUFMLEdBQWVJLE1BQWY7QUFDQSxTQUFLSCxVQUFMLEdBQWtCSSxTQUFsQjtBQUNIO0FBRUQ7Ozs7OztBQUtBOzs7OzsyQkFBaUI7QUFBQTs7QUFDYixhQUFPWCxTQUFTLE9BQVQsQ0FBYyxZQUFNO0FBQ3ZCO0FBQ0EsWUFBTVksaUJBQWlCLEdBQUcsS0FBSSxDQUFDSCxlQUFMLENBQXFCRyxpQkFBckIsRUFBMUI7O0FBRUEsWUFBSUEsaUJBQWlCLElBQUlBLGlCQUFpQixDQUFDQyxNQUFsQixHQUEyQixDQUFwRCxFQUF3RDtBQUNwRDtBQUNBRCxVQUFBQSxpQkFBaUIsQ0FBQ0UsSUFBbEIsQ0FBdUJuQixXQUFXLENBQUNvQixpQkFBWixDQUE4QixLQUFJLENBQUNMLE1BQW5DLEVBQTJDZCxNQUFNLENBQUNvQixnQkFBUCxFQUEzQyxDQUF2QixFQUZvRCxDQUlwRDs7QUFDQSxjQUFNQyxLQUFLLEdBQUcsS0FBSSxDQUFDVCxVQUFMLENBQWdCVSxRQUFoQixDQUF5Qk4saUJBQXpCLENBQWQ7O0FBRUEsY0FBSUssS0FBSixFQUFXO0FBQ1A7QUFDQSxnQkFBSSxLQUFJLENBQUNOLFNBQVQsRUFBb0I7QUFDaEIsY0FBQSxLQUFJLENBQUNBLFNBQUwsQ0FBZVEsU0FBZjtBQUNILGFBSk0sQ0FNUDs7O0FBQ0EsWUFBQSxLQUFJLENBQUNWLGVBQUwsQ0FBcUJXLEtBQXJCLEdBUE8sQ0FTUDs7O0FBQ0EsZ0JBQUksS0FBSSxDQUFDVCxTQUFULEVBQW9CO0FBQ2hCLGNBQUEsS0FBSSxDQUFDQSxTQUFMLENBQWVVLDBCQUFmO0FBQ0g7QUFDSixXQWJELE1BY0s7QUFDRDtBQUNBLFlBQUEsS0FBSSxDQUFDWixlQUFMLENBQXFCVyxLQUFyQjtBQUNIOztBQUVELGlCQUFPSCxLQUFQO0FBQ0gsU0EzQkQsTUE0Qks7QUFDRHBCLFVBQUFBLE1BQU0sQ0FBQ3lCLElBQVAsQ0FBWSx5Q0FBWjtBQUNBLGlCQUFPLElBQVA7QUFDSDtBQUNKLE9BcENNLENBQVA7QUFxQ0g7Ozs7OztBQUdMQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJyQixLQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9hY2VyL0Rlc2t0b3AvbWluYWNvaW4vbWluYWNvaW4vbWluYWNvaW4tc2VydmVyL3NyYy9saWIvbWluZXIvY2xhc3NlcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgTE9HX1RBRyA9ICdNTlInO1xuXG5jb25zdCBpb2MgPSByZXF1aXJlKCcuLi8uLi8uLi91dGlsL2lvY0NvbnRhaW5lcicpO1xuY29uc3QgeyBUcmFuc2FjdGlvbiwgV2FsbGV0IH0gPSByZXF1aXJlKCcuLi8uLi93YWxsZXQnKTtcblxuY29uc3QgbG9nZ2VyID0gaW9jLmxvZ2dlckZhY3RvcnkuY3JlYXRlTG9nZ2VyKExPR19UQUcpO1xuY29uc3QgZXhjZXB0aW9uID0gaW9jLmVoRmFjdG9yeS5jcmVhdGVIYW5kbGVyKGxvZ2dlcik7XG5cbi8qKlxuICogbWluYWNvaW46IE1pbmVyXG4gKiAtLS0tLS0tLS0tLS0tLS1cbiAqIGhhbmRsZXMgbWluaW5nIG5ldyBjb2lucyBcbiAqXG4gKiBhdXRob3I6IEpvaG4gUi4gS29zaW5za2lcbiAqL1xuY2xhc3MgTWluZXIge1xuICAgIGdldCBibG9ja2NoYWluKCkgeyByZXR1cm4gdGhpcy5fYmxvY2tjaGFpbjsgfVxuICAgIGdldCB0cmFuc2FjdGlvblBvb2woKSB7IHJldHVybiB0aGlzLl90cmFuc2FjdGlvblBvb2w7IH1cbiAgICBnZXQgd2FsbGV0KCkgeyByZXR1cm4gdGhpcy5fd2FsbGV0OyB9XG4gICAgZ2V0IHAycFNlcnZlcigpIHsgcmV0dXJuIHRoaXMuX3AycFNlcnZlcjsgfVxuXG4gICAgLyoqXG4gICAgICogY29uc3RydWN0b3IgXG4gICAgICogQHBhcmFtIHtCbG9ja2NoYWlufSBibG9ja2NoYWluIFxuICAgICAqIEBwYXJhbSB7VHJhbnNhY3Rpb25Qb29sfSB0cmFuc2FjdGlvblBvb2wgXG4gICAgICogQHBhcmFtIHtXYWxsZXR9IHdhbGxldCBcbiAgICAgKiBAcGFyYW0ge0lQMlBTZXJ2ZXJ9IHAycFNlcnZlciBcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihibG9ja2NoYWluLCB0cmFuc2FjdGlvblBvb2wsIHdhbGxldCwgcDJwU2VydmVyKSB7XG4gICAgICAgIHRoaXMuX2Jsb2NrY2hhaW4gPSBibG9ja2NoYWluO1xuICAgICAgICB0aGlzLl90cmFuc2FjdGlvblBvb2wgPSB0cmFuc2FjdGlvblBvb2w7XG4gICAgICAgIHRoaXMuX3dhbGxldCA9IHdhbGxldDtcbiAgICAgICAgdGhpcy5fcDJwU2VydmVyID0gcDJwU2VydmVyO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHNlbGVjdHMgdHJhbnNhY3Rpb25zIGZyb20gdGhlIHRyYW5zYWN0aW9uIHBvb2wgdG8gYWRkIHRvIGEgbmV3IGJsb2NrLCBjcmVhdGVzIFxuICAgICAqICYgYWRkcyB0aGUgbmV3IGJsb2NrIHRvIHRoZSBibG9ja2NoYWluLCBhbmQgcmV0dXJucyB0aGUgbmV3IGJsb2NrLiBcbiAgICAgKiBAcmV0dXJucyB7QmxvY2t9XG4gICAgICovXG4gICAgLypCbG9jayovIG1pbmUoKSB7XG4gICAgICAgIHJldHVybiBleGNlcHRpb24udHJ5KCgpID0+IHtcbiAgICAgICAgICAgIC8vZ2V0IHRyYW5zYWN0aW9ucyBmcm9tIHRyYW5zYWN0aW9uIHBvb2xcbiAgICAgICAgICAgIGNvbnN0IHZhbGlkVHJhbnNhY3Rpb25zID0gdGhpcy50cmFuc2FjdGlvblBvb2wudmFsaWRUcmFuc2FjdGlvbnMoKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKHZhbGlkVHJhbnNhY3Rpb25zICYmIHZhbGlkVHJhbnNhY3Rpb25zLmxlbmd0aCA+IDApICB7XG4gICAgICAgICAgICAgICAgLy9hZGQgYSByZXdhcmQgZm9yIHNlbGZcbiAgICAgICAgICAgICAgICB2YWxpZFRyYW5zYWN0aW9ucy5wdXNoKFRyYW5zYWN0aW9uLnJld2FyZFRyYW5zYWN0aW9uKHRoaXMud2FsbGV0LCBXYWxsZXQuYmxvY2tjaGFpbldhbGxldCgpKSk7XG4gICAgXG4gICAgICAgICAgICAgICAgLy9hZGQgdGhlbSBpbnRvIGEgYmxvY2tcbiAgICAgICAgICAgICAgICBjb25zdCBibG9jayA9IHRoaXMuYmxvY2tjaGFpbi5hZGRCbG9jayh2YWxpZFRyYW5zYWN0aW9ucyk7XG4gICAgXG4gICAgICAgICAgICAgICAgaWYgKGJsb2NrKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vc3luYyB0aGUgY2hhaW5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMucDJwU2VydmVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnAycFNlcnZlci5zeW5jQ2hhaW4oKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLy9jbGVhciB0aGUgdHJhbnNhY3Rpb24gcG9vbFxuICAgICAgICAgICAgICAgICAgICB0aGlzLnRyYW5zYWN0aW9uUG9vbC5jbGVhcigpO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLy9icm9hZGNhc3QgZGlyZWN0aXZlIHRvIGNsZWFyIHRyYW5zYWN0aW9uIHBvb2xcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMucDJwU2VydmVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnAycFNlcnZlci5icm9hZGNhc3RDbGVhclRyYW5zYWN0aW9ucygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvL2NsZWFyIHRoZSB0cmFuc2FjdGlvbiBwb29sOyBtYXliZSB3ZSBoYXZlIGFuIG9sZCBvciBjb3JydXB0IHBvb2xcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50cmFuc2FjdGlvblBvb2wuY2xlYXIoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICAgICAgcmV0dXJuIGJsb2NrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbG9nZ2VyLmluZm8oJ25vIHZhbGlkIHRyYW5zYWN0aW9ucyBhdmFpbGFibGUgdG8gbWluZScpOyBcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsgXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBNaW5lcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Miner.js"
      ],
      "names": [
        "LOG_TAG",
        "ioc",
        "require",
        "Transaction",
        "Wallet",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Miner",
        "_blockchain",
        "_transactionPool",
        "_wallet",
        "_p2pServer",
        "blockchain",
        "transactionPool",
        "wallet",
        "p2pServer",
        "validTransactions",
        "length",
        "push",
        "rewardTransaction",
        "blockchainWallet",
        "block",
        "addBlock",
        "syncChain",
        "clear",
        "broadcastClearTransactions",
        "info",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAG,KAAhB;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,4BAAD,CAAnB;;eACgCA,OAAO,CAAC,cAAD,C;IAA/BC,W,YAAAA,W;IAAaC,M,YAAAA,M;;AAErB,IAAMC,MAAM,GAAGJ,GAAG,CAACK,aAAJ,CAAkBC,YAAlB,CAA+BP,OAA/B,CAAf;AACA,IAAMQ,SAAS,GAAGP,GAAG,CAACQ,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;IAOMM,K;;;;;wBACe;AAAE,aAAO,KAAKC,WAAZ;AAA0B;;;wBACvB;AAAE,aAAO,KAAKC,gBAAZ;AAA+B;;;wBAC1C;AAAE,aAAO,KAAKC,OAAZ;AAAsB;;;wBACrB;AAAE,aAAO,KAAKC,UAAZ;AAAyB;AAE3C;;;;;;;;;;AAOA,iBAAYC,UAAZ,EAAwBC,eAAxB,EAAyCC,MAAzC,EAAiDC,SAAjD,EAA4D;AAAA;;AACxD,SAAKP,WAAL,GAAmBI,UAAnB;AACA,SAAKH,gBAAL,GAAwBI,eAAxB;AACA,SAAKH,OAAL,GAAeI,MAAf;AACA,SAAKH,UAAL,GAAkBI,SAAlB;AACH;AAED;;;;;;AAKA;;;;;2BAAiB;AAAA;;AACb,aAAOX,SAAS,OAAT,CAAc,YAAM;AACvB;AACA,YAAMY,iBAAiB,GAAG,KAAI,CAACH,eAAL,CAAqBG,iBAArB,EAA1B;;AAEA,YAAIA,iBAAiB,IAAIA,iBAAiB,CAACC,MAAlB,GAA2B,CAApD,EAAwD;AACpD;AACAD,UAAAA,iBAAiB,CAACE,IAAlB,CAAuBnB,WAAW,CAACoB,iBAAZ,CAA8B,KAAI,CAACL,MAAnC,EAA2Cd,MAAM,CAACoB,gBAAP,EAA3C,CAAvB,EAFoD,CAIpD;;AACA,cAAMC,KAAK,GAAG,KAAI,CAACT,UAAL,CAAgBU,QAAhB,CAAyBN,iBAAzB,CAAd;;AAEA,cAAIK,KAAJ,EAAW;AACP;AACA,gBAAI,KAAI,CAACN,SAAT,EAAoB;AAChB,cAAA,KAAI,CAACA,SAAL,CAAeQ,SAAf;AACH,aAJM,CAMP;;;AACA,YAAA,KAAI,CAACV,eAAL,CAAqBW,KAArB,GAPO,CASP;;;AACA,gBAAI,KAAI,CAACT,SAAT,EAAoB;AAChB,cAAA,KAAI,CAACA,SAAL,CAAeU,0BAAf;AACH;AACJ,WAbD,MAcK;AACD;AACA,YAAA,KAAI,CAACZ,eAAL,CAAqBW,KAArB;AACH;;AAED,iBAAOH,KAAP;AACH,SA3BD,MA4BK;AACDpB,UAAAA,MAAM,CAACyB,IAAP,CAAY,yCAAZ;AACA,iBAAO,IAAP;AACH;AACJ,OApCM,CAAP;AAqCH;;;;;;AAGLC,MAAM,CAACC,OAAP,GAAiBrB,KAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'MNR';\n\nconst ioc = require('../../../util/iocContainer');\nconst { Transaction, Wallet } = require('../../wallet');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: Miner\n * ---------------\n * handles mining new coins \n *\n * author: John R. Kosinski\n */\nclass Miner {\n    get blockchain() { return this._blockchain; }\n    get transactionPool() { return this._transactionPool; }\n    get wallet() { return this._wallet; }\n    get p2pServer() { return this._p2pServer; }\n\n    /**\n     * constructor \n     * @param {Blockchain} blockchain \n     * @param {TransactionPool} transactionPool \n     * @param {Wallet} wallet \n     * @param {IP2PServer} p2pServer \n     */\n    constructor(blockchain, transactionPool, wallet, p2pServer) {\n        this._blockchain = blockchain;\n        this._transactionPool = transactionPool;\n        this._wallet = wallet;\n        this._p2pServer = p2pServer;\n    }\n\n    /**\n     * selects transactions from the transaction pool to add to a new block, creates \n     * & adds the new block to the blockchain, and returns the new block. \n     * @returns {Block}\n     */\n    /*Block*/ mine() {\n        return exception.try(() => {\n            //get transactions from transaction pool\n            const validTransactions = this.transactionPool.validTransactions();\n            \n            if (validTransactions && validTransactions.length > 0)  {\n                //add a reward for self\n                validTransactions.push(Transaction.rewardTransaction(this.wallet, Wallet.blockchainWallet()));\n    \n                //add them into a block\n                const block = this.blockchain.addBlock(validTransactions);\n    \n                if (block) {\n                    //sync the chain\n                    if (this.p2pServer) {\n                        this.p2pServer.syncChain();\n                    }\n        \n                    //clear the transaction pool\n                    this.transactionPool.clear();\n        \n                    //broadcast directive to clear transaction pool\n                    if (this.p2pServer) {\n                        this.p2pServer.broadcastClearTransactions();\n                    }\n                }\n                else {\n                    //clear the transaction pool; maybe we have an old or corrupt pool\n                    this.transactionPool.clear();\n                }\n    \n                return block;\n            }\n            else {\n                logger.info('no valid transactions available to mine'); \n                return null; \n            }\n        });\n    }\n}\n\nmodule.exports = Miner;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567678203299
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar Transaction = require('./classes/Transaction');\n\nvar TransactionPool = require('./classes/TransactionPool');\n\nvar Wallet = require('./classes/Wallet');\n\nmodule.exports = {\n  Transaction: Transaction,\n  TransactionPool: TransactionPool,\n  Wallet: Wallet\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlRyYW5zYWN0aW9uIiwicmVxdWlyZSIsIlRyYW5zYWN0aW9uUG9vbCIsIldhbGxldCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLFdBQVcsR0FBR0MsT0FBTyxDQUFDLHVCQUFELENBQTNCOztBQUNBLElBQU1DLGVBQWUsR0FBR0QsT0FBTyxDQUFDLDJCQUFELENBQS9COztBQUNBLElBQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLGtCQUFELENBQXRCOztBQUVBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkwsRUFBQUEsV0FBVyxFQUFYQSxXQURhO0FBRWJFLEVBQUFBLGVBQWUsRUFBZkEsZUFGYTtBQUdiQyxFQUFBQSxNQUFNLEVBQU5BO0FBSGEsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21pbmFjb2luL21pbmFjb2luLXNlcnZlci9zcmMvbGliL3dhbGxldCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgVHJhbnNhY3Rpb24gPSByZXF1aXJlKCcuL2NsYXNzZXMvVHJhbnNhY3Rpb24nKTtcbmNvbnN0IFRyYW5zYWN0aW9uUG9vbCA9IHJlcXVpcmUoJy4vY2xhc3Nlcy9UcmFuc2FjdGlvblBvb2wnKTtcbmNvbnN0IFdhbGxldCA9IHJlcXVpcmUoJy4vY2xhc3Nlcy9XYWxsZXQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgVHJhbnNhY3Rpb24sXG4gICAgVHJhbnNhY3Rpb25Qb29sLFxuICAgIFdhbGxldFxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Transaction",
        "require",
        "TransactionPool",
        "Wallet",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,WAAW,GAAGC,OAAO,CAAC,uBAAD,CAA3B;;AACA,IAAMC,eAAe,GAAGD,OAAO,CAAC,2BAAD,CAA/B;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,kBAAD,CAAtB;;AAEAG,MAAM,CAACC,OAAP,GAAiB;AACbL,EAAAA,WAAW,EAAXA,WADa;AAEbE,EAAAA,eAAe,EAAfA,eAFa;AAGbC,EAAAA,MAAM,EAANA;AAHa,CAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet",
      "sourcesContent": [
        "'use strict';\n\nconst Transaction = require('./classes/Transaction');\nconst TransactionPool = require('./classes/TransactionPool');\nconst Wallet = require('./classes/Wallet');\n\nmodule.exports = {\n    Transaction,\n    TransactionPool,\n    Wallet\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1567269278063
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Transaction.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Transaction.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Transaction.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Transaction.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
        "sourceFileName": "Transaction.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'TRNS';\n\nvar cryptoUtil = require('../../../util/cryptoUtil');\n\nvar ioc = require('../../../util/iocContainer');\n\nvar _require = require('../../../config'),\n    MINING_REWARD = _require.MINING_REWARD;\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: Transaction\n * ---------------------\n * a transaction consists of one input and two outputs. The first output goes to the\n * recipient; the second output sends the change back to the sender. The sender's entire\n * wallet balance is the input to the transaction, the actual sent amount is the first\n * output (to the recipient), and the remainder is in the second output back to the sender.\n * \n * Input format: {\n *      timestamp: <int>,  //datetime in ms\n *      amount: <float>,   //full amount of sender's wallet\n *      address: <string>, //public key of sender wallet\n *      signature: <EC.Signature> //cryptographic signature of transaction \n * }\n * \n * Output format: {\n *      amount: <float>,   //amount to send to address\n *      address: <string>, //public key of recipient wallet\n * }\n *\n * author: John R. Kosinski\n */\n\nvar Transaction =\n/*#__PURE__*/\nfunction () {\n  /**\n   * constructor\n   */\n  function Transaction() {\n    _classCallCheck(this, Transaction);\n\n    this.id = cryptoUtil.id();\n    this.input = null;\n    this.outputs = [];\n    logger.info(\"created new transaction \".concat(this.id));\n  }\n  /*Transaction*/\n\n\n  _createClass(Transaction, [{\n    key: \"update\",\n    value: function update(senderWallet, recipient, amount) {\n      var _this = this;\n\n      return exception[\"try\"](function () {\n        logger.info(\"updating transaction \".concat(_this.id, \"...\"));\n\n        var senderOutput = _this.outputs.find(function (output) {\n          return output.address === senderWallet.publicKey;\n        });\n\n        if (amount > senderWallet.amount) {\n          logger.warn(\"amount \".concat(amount, \" exceeds balance\"));\n          return null;\n        }\n\n        senderOutput.amount = senderOutput.amount - amount;\n\n        _this.outputs.push({\n          amount: amount,\n          address: recipient\n        });\n\n        Transaction.signTransaction(_this, senderWallet);\n        return _this;\n      });\n    }\n    /**\n     * returns a json representation\n     */\n\n    /*json*/\n\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      return {\n        id: this.id,\n        input: serializeTxInput(this.input),\n        outputs: this.outputs\n      };\n    }\n    /**\n     * returns a json representation converted to string\n     */\n\n    /*string*/\n\n  }, {\n    key: \"toJsonString\",\n    value: function toJsonString() {\n      return JSON.stringify(this.toJson());\n    }\n  }], [{\n    key: \"signTransaction\",\n    value: function signTransaction(transaction, senderWallet) {\n      return exception[\"try\"](function () {\n        logger.info(\"signing transaction \".concat(transaction.id));\n        transaction.input = {\n          timestamp: Date.now(),\n          amount: senderWallet.balance,\n          address: senderWallet.publicKey,\n          signature: senderWallet.sign(cryptoUtil.hash(transaction.outputs))\n        };\n        return transaction;\n      });\n    }\n  }, {\n    key: \"newTransaction\",\n    value: function newTransaction(senderWallet, recipient, amount) {\n      return exception[\"try\"](function () {\n        if (amount > senderWallet.balance) {\n          logger.warn(\"amount \".concat(amount, \" exceeds balance\"));\n          return;\n        }\n\n        return Transaction.transactionWithOutputs(senderWallet, [{\n          amount: senderWallet.balance - amount,\n          address: senderWallet.publicKey\n        }, {\n          amount: amount,\n          address: recipient\n        }]);\n      });\n    }\n    /**\n     * cryptographically verifies the validity of the given Transaction \n     * @param {Transaction} transaction \n     * @returns {bool}\n     */\n\n  }, {\n    key: \"verifyTransaction\",\n    value: function verifyTransaction(transaction) {\n      return exception[\"try\"](function () {\n        var output = cryptoUtil.verifySignature(transaction.input.address, transaction.input.signature, cryptoUtil.hash(transaction.outputs));\n\n        if (!output) {\n          logger.warn(\"transaction \".concat(transaction.id, \" failed verification\"));\n        }\n\n        return output;\n      });\n    }\n    /**\n     * awards a small reward to the miner's wallet for mining a new block \n     * \n     * @param {Wallet} minerWallet the miner's wallet \n     * @param {Wallet} blockchainWallet a wallet to stand in as the wallet of the sender\n     * of the reward\n     * @returns {Transaction}\n     */\n\n  }, {\n    key: \"rewardTransaction\",\n    value: function rewardTransaction(minerWallet, blockchainWallet) {\n      return exception[\"try\"](function () {\n        return Transaction.transactionWithOutputs(blockchainWallet, [{\n          amount: MINING_REWARD,\n          address: minerWallet.publicKey\n        }]);\n      });\n    }\n    /**\n     * creates & signs a new Transaction instance with the given outputs\n     * @param {Wallet} senderWallet \n     * @param {Output[]} outputs \n     * @returns {Transaction}\n     */\n\n  }, {\n    key: \"transactionWithOutputs\",\n    value: function transactionWithOutputs(senderWallet, outputs) {\n      var _this2 = this;\n\n      return exception[\"try\"](function () {\n        var _transaction$outputs;\n\n        var transaction = new _this2();\n\n        (_transaction$outputs = transaction.outputs).push.apply(_transaction$outputs, _toConsumableArray(outputs));\n\n        Transaction.signTransaction(transaction, senderWallet);\n        return transaction;\n      });\n    }\n    /**\n     * deserializes a Transaction instance from JSON data\n     * @returns {Transaction}\n     * @param {json} json\n     */\n\n  }, {\n    key: \"fromJson\",\n    value: function fromJson(json) {\n      var _this3 = this;\n\n      return exception[\"try\"](function () {\n        var output = new _this3();\n        output.id = json.id;\n        output.input = deserializeTxInput(json.input);\n        output.outputs = json.outputs;\n        return output;\n      });\n    }\n  }, {\n    key: \"arrayToJson\",\n    value: function arrayToJson(array) {\n      return exception[\"try\"](function () {\n        var output = [];\n        array.forEach(function (t) {\n          output.push(t.toJson ? t.toJson() : t);\n        });\n        return output;\n      });\n    }\n  }]);\n\n  return Transaction;\n}();\n\nfunction serializeTxInput(txInput) {\n  return exception[\"try\"](function () {\n    var output = {\n      address: txInput.address,\n      amount: txInput.amount,\n      timestamp: txInput.timestamp\n    };\n\n    if (txInput.signature) {\n      output.signature = cryptoUtil.serializeSignature(txInput.signature);\n    }\n\n    return output;\n  });\n}\n\nfunction deserializeTxInput(txInput) {\n  return exception[\"try\"](function () {\n    var output = {\n      address: txInput.address,\n      amount: txInput.amount,\n      timestamp: txInput.timestamp\n    };\n\n    if (txInput.signature) {\n      output.signature = cryptoUtil.deserializeSignature(txInput.signature);\n    }\n\n    return output;\n  });\n}\n\nmodule.exports = Transaction;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Transaction.js"
      ],
      "names": [
        "LOG_TAG",
        "cryptoUtil",
        "require",
        "ioc",
        "MINING_REWARD",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Transaction",
        "id",
        "input",
        "outputs",
        "info",
        "senderWallet",
        "recipient",
        "amount",
        "senderOutput",
        "find",
        "output",
        "address",
        "publicKey",
        "warn",
        "push",
        "signTransaction",
        "serializeTxInput",
        "JSON",
        "stringify",
        "toJson",
        "transaction",
        "timestamp",
        "Date",
        "now",
        "balance",
        "signature",
        "sign",
        "hash",
        "transactionWithOutputs",
        "verifySignature",
        "minerWallet",
        "blockchainWallet",
        "json",
        "deserializeTxInput",
        "array",
        "forEach",
        "t",
        "txInput",
        "serializeSignature",
        "deserializeSignature",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,MAAhB;;AAEA,IAAMC,UAAU,GAAGC,OAAO,CAAC,0BAAD,CAA1B;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,4BAAD,CAAnB;;eAC2BA,OAAO,CAAC,iBAAD,C;IAA1BE,a,YAAAA,a;;AAER,IAAMC,MAAM,GAAGF,GAAG,CAACG,aAAJ,CAAkBC,YAAlB,CAA+BP,OAA/B,CAAf;AACA,IAAMQ,SAAS,GAAGL,GAAG,CAACM,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;;;;;;;;;;;;;;;;IAsBMM,W;;;AAEF;;;AAGA,yBAAa;AAAA;;AACT,SAAKC,EAAL,GAAUX,UAAU,CAACW,EAAX,EAAV;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,OAAL,GAAe,EAAf;AAEAT,IAAAA,MAAM,CAACU,IAAP,mCAAuC,KAAKH,EAA5C;AACH;AAED;;;;;2BAAuBI,Y,EAAcC,S,EAAWC,M,EAAQ;AAAA;;AACpD,aAAOV,SAAS,OAAT,CAAc,YAAM;AACvBH,QAAAA,MAAM,CAACU,IAAP,gCAAoC,KAAI,CAACH,EAAzC;;AACA,YAAMO,YAAY,GAAG,KAAI,CAACL,OAAL,CAAaM,IAAb,CAAkB,UAAAC,MAAM;AAAA,iBAAIA,MAAM,CAACC,OAAP,KAAmBN,YAAY,CAACO,SAApC;AAAA,SAAxB,CAArB;;AAEA,YAAIL,MAAM,GAAGF,YAAY,CAACE,MAA1B,EAAiC;AAC7Bb,UAAAA,MAAM,CAACmB,IAAP,kBAAsBN,MAAtB;AACA,iBAAO,IAAP;AACH;;AAEDC,QAAAA,YAAY,CAACD,MAAb,GAAuBC,YAAY,CAACD,MAAb,GAAsBA,MAA7C;;AACA,QAAA,KAAI,CAACJ,OAAL,CAAaW,IAAb,CAAkB;AAACP,UAAAA,MAAM,EAAEA,MAAT;AAAgBI,UAAAA,OAAO,EAAEL;AAAzB,SAAlB;;AACAN,QAAAA,WAAW,CAACe,eAAZ,CAA4B,KAA5B,EAAiCV,YAAjC;AAEA,eAAO,KAAP;AACH,OAdM,CAAP;AAeH;AAED;;;;AAGA;;;;6BAAkB;AACd,aAAO;AACHJ,QAAAA,EAAE,EAAE,KAAKA,EADN;AAEHC,QAAAA,KAAK,EAAEc,gBAAgB,CAAC,KAAKd,KAAN,CAFpB;AAGHC,QAAAA,OAAO,EAAE,KAAKA;AAHX,OAAP;AAKH;AAED;;;;AAGA;;;;mCAA0B;AACtB,aAAOc,IAAI,CAACC,SAAL,CAAe,KAAKC,MAAL,EAAf,CAAP;AACH;;;oCAEsCC,W,EAAaf,Y,EAAc;AAC9D,aAAOR,SAAS,OAAT,CAAc,YAAM;AACvBH,QAAAA,MAAM,CAACU,IAAP,+BAAmCgB,WAAW,CAACnB,EAA/C;AACAmB,QAAAA,WAAW,CAAClB,KAAZ,GAAoB;AAChBmB,UAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EADK;AAEhBhB,UAAAA,MAAM,EAAEF,YAAY,CAACmB,OAFL;AAGhBb,UAAAA,OAAO,EAAEN,YAAY,CAACO,SAHN;AAIhBa,UAAAA,SAAS,EAAEpB,YAAY,CAACqB,IAAb,CAAkBpC,UAAU,CAACqC,IAAX,CAAgBP,WAAW,CAACjB,OAA5B,CAAlB;AAJK,SAApB;AAMA,eAAOiB,WAAP;AACH,OATM,CAAP;AAUH;;;mCAEqCf,Y,EAAcC,S,EAAWC,M,EAAQ;AACnE,aAAOV,SAAS,OAAT,CAAc,YAAM;AACvB,YAAIU,MAAM,GAAGF,YAAY,CAACmB,OAA1B,EAAmC;AAC/B9B,UAAAA,MAAM,CAACmB,IAAP,kBAAsBN,MAAtB;AACA;AACH;;AAED,eAAOP,WAAW,CAAC4B,sBAAZ,CAAmCvB,YAAnC,EAAiD,CAAC;AACjDE,UAAAA,MAAM,EAAGF,YAAY,CAACmB,OAAb,GAAsBjB,MADkB;AAEjDI,UAAAA,OAAO,EAAEN,YAAY,CAACO;AAF2B,SAAD,EAGhD;AACAL,UAAAA,MAAM,EAAGA,MADT;AAEAI,UAAAA,OAAO,EAAEL;AAFT,SAHgD,CAAjD,CAAP;AAQH,OAdM,CAAP;AAeH;AAED;;;;;;;;sCAKkCc,W,EAAa;AAC3C,aAAOvB,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMa,MAAM,GAAGpB,UAAU,CAACuC,eAAX,CACXT,WAAW,CAAClB,KAAZ,CAAkBS,OADP,EAEXS,WAAW,CAAClB,KAAZ,CAAkBuB,SAFP,EAGXnC,UAAU,CAACqC,IAAX,CAAgBP,WAAW,CAACjB,OAA5B,CAHW,CAAf;;AAMA,YAAI,CAACO,MAAL,EAAa;AACThB,UAAAA,MAAM,CAACmB,IAAP,uBAA2BO,WAAW,CAACnB,EAAvC;AACH;;AAED,eAAOS,MAAP;AACH,OAZM,CAAP;AAaH;AAED;;;;;;;;;;;sCAQyCoB,W,EAAaC,gB,EAAkB;AACpE,aAAOlC,SAAS,OAAT,CAAc,YAAM;AACvB,eAAOG,WAAW,CAAC4B,sBAAZ,CAAmCG,gBAAnC,EAAqD,CAAC;AACrDxB,UAAAA,MAAM,EAAEd,aAD6C;AAErDkB,UAAAA,OAAO,EAAEmB,WAAW,CAAClB;AAFgC,SAAD,CAArD,CAAP;AAKH,OANM,CAAP;AAOH;AAED;;;;;;;;;2CAM8CP,Y,EAAcF,O,EAAS;AAAA;;AACjE,aAAON,SAAS,OAAT,CAAc,YAAM;AAAA;;AACvB,YAAMuB,WAAW,GAAG,IAAI,MAAJ,EAApB;;AACA,gCAAAA,WAAW,CAACjB,OAAZ,EAAoBW,IAApB,gDAA4BX,OAA5B;;AACAH,QAAAA,WAAW,CAACe,eAAZ,CAA4BK,WAA5B,EAAyCf,YAAzC;AACA,eAAOe,WAAP;AACH,OALM,CAAP;AAMH;AAED;;;;;;;;6BAKgCY,I,EAAM;AAAA;;AAClC,aAAOnC,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMa,MAAM,GAAG,IAAI,MAAJ,EAAf;AACAA,QAAAA,MAAM,CAACT,EAAP,GAAY+B,IAAI,CAAC/B,EAAjB;AACAS,QAAAA,MAAM,CAACR,KAAP,GAAgB+B,kBAAkB,CAACD,IAAI,CAAC9B,KAAN,CAAlC;AACAQ,QAAAA,MAAM,CAACP,OAAP,GAAiB6B,IAAI,CAAC7B,OAAtB;AAEA,eAAOO,MAAP;AACH,OAPM,CAAP;AAQH;;;gCAE6BwB,K,EAAO;AACjC,aAAOrC,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMa,MAAM,GAAG,EAAf;AACAwB,QAAAA,KAAK,CAACC,OAAN,CAAc,UAACC,CAAD,EAAO;AACjB1B,UAAAA,MAAM,CAACI,IAAP,CAAYsB,CAAC,CAACjB,MAAF,GAAWiB,CAAC,CAACjB,MAAF,EAAX,GAAwBiB,CAApC;AACH,SAFD;AAGA,eAAO1B,MAAP;AACH,OANM,CAAP;AAOH;;;;;;AAGL,SAASM,gBAAT,CAA0BqB,OAA1B,EAAmC;AAC/B,SAAOxC,SAAS,OAAT,CAAc,YAAM;AACvB,QAAMa,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE0B,OAAO,CAAC1B,OADN;AAEXJ,MAAAA,MAAM,EAAE8B,OAAO,CAAC9B,MAFL;AAGXc,MAAAA,SAAS,EAAEgB,OAAO,CAAChB;AAHR,KAAf;;AAMA,QAAIgB,OAAO,CAACZ,SAAZ,EAAuB;AACnBf,MAAAA,MAAM,CAACe,SAAP,GAAmBnC,UAAU,CAACgD,kBAAX,CAA8BD,OAAO,CAACZ,SAAtC,CAAnB;AACH;;AAED,WAAOf,MAAP;AACH,GAZM,CAAP;AAaH;;AAED,SAASuB,kBAAT,CAA4BI,OAA5B,EAAqC;AACjC,SAAOxC,SAAS,OAAT,CAAc,YAAM;AACvB,QAAMa,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE0B,OAAO,CAAC1B,OADN;AAEXJ,MAAAA,MAAM,EAAE8B,OAAO,CAAC9B,MAFL;AAGXc,MAAAA,SAAS,EAAEgB,OAAO,CAAChB;AAHR,KAAf;;AAMA,QAAIgB,OAAO,CAACZ,SAAZ,EAAuB;AACnBf,MAAAA,MAAM,CAACe,SAAP,GAAmBnC,UAAU,CAACiD,oBAAX,CAAgCF,OAAO,CAACZ,SAAxC,CAAnB;AACH;;AAED,WAAOf,MAAP;AACH,GAZM,CAAP;AAaH;;AAED8B,MAAM,CAACC,OAAP,GAAiBzC,WAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'TRNS';\n\nconst cryptoUtil = require('../../../util/cryptoUtil');\nconst ioc = require('../../../util/iocContainer');\nconst { MINING_REWARD }  = require('../../../config');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: Transaction\n * ---------------------\n * a transaction consists of one input and two outputs. The first output goes to the\n * recipient; the second output sends the change back to the sender. The sender's entire\n * wallet balance is the input to the transaction, the actual sent amount is the first\n * output (to the recipient), and the remainder is in the second output back to the sender.\n * \n * Input format: {\n *      timestamp: <int>,  //datetime in ms\n *      amount: <float>,   //full amount of sender's wallet\n *      address: <string>, //public key of sender wallet\n *      signature: <EC.Signature> //cryptographic signature of transaction \n * }\n * \n * Output format: {\n *      amount: <float>,   //amount to send to address\n *      address: <string>, //public key of recipient wallet\n * }\n *\n * author: John R. Kosinski\n */\nclass Transaction {\n\n    /**\n     * constructor\n     */\n    constructor(){\n        this.id = cryptoUtil.id();\n        this.input = null;\n        this.outputs = [];\n\n        logger.info(`created new transaction ${this.id}`);\n    }\n\n    /*Transaction*/ update(senderWallet, recipient, amount) {\n        return exception.try(() => {\n            logger.info(`updating transaction ${this.id}...`)\n            const senderOutput = this.outputs.find(output => output.address === senderWallet.publicKey);\n\n            if (amount > senderWallet.amount){\n                logger.warn(`amount ${amount} exceeds balance`);\n                return null;\n            }\n\n            senderOutput.amount = (senderOutput.amount - amount);\n            this.outputs.push({amount: amount,address: recipient});\n            Transaction.signTransaction(this,senderWallet);\n\n            return this;\n        });\n    }\n\n    /**\n     * returns a json representation\n     */\n    /*json*/ toJson() {\n        return {\n            id: this.id,\n            input: serializeTxInput(this.input),\n            outputs: this.outputs\n        }\n    }\n\n    /**\n     * returns a json representation converted to string\n     */\n    /*string*/ toJsonString() {\n        return JSON.stringify(this.toJson());\n    }\n\n    static /*Transaction*/ signTransaction(transaction, senderWallet) {\n        return exception.try(() => {\n            logger.info(`signing transaction ${transaction.id}`);\n            transaction.input = {\n                timestamp: Date.now(),\n                amount: senderWallet.balance,\n                address: senderWallet.publicKey,\n                signature: senderWallet.sign(cryptoUtil.hash(transaction.outputs))\n            };\n            return transaction;\n        });\n    }\n\n    static /*Transaction*/ newTransaction(senderWallet, recipient, amount) {\n        return exception.try(() => {\n            if (amount > senderWallet.balance) {\n                logger.warn(`amount ${amount} exceeds balance`);\n                return;\n            }\n\n            return Transaction.transactionWithOutputs(senderWallet, [{\n                    amount:  senderWallet.balance -amount,\n                    address: senderWallet.publicKey\n                },  {\n                    amount:  amount,\n                    address: recipient\n                }\n            ]);\n        });\n    }\n\n    /**\n     * cryptographically verifies the validity of the given Transaction \n     * @param {Transaction} transaction \n     * @returns {bool}\n     */\n    static /*bool*/ verifyTransaction(transaction) {\n        return exception.try(() => {\n            const output = cryptoUtil.verifySignature(\n                transaction.input.address,\n                transaction.input.signature,\n                cryptoUtil.hash(transaction.outputs)\n            );\n\n            if (!output) {\n                logger.warn(`transaction ${transaction.id} failed verification`);\n            }\n\n            return output;\n        });\n    }\n\n    /**\n     * awards a small reward to the miner's wallet for mining a new block \n     * \n     * @param {Wallet} minerWallet the miner's wallet \n     * @param {Wallet} blockchainWallet a wallet to stand in as the wallet of the sender\n     * of the reward\n     * @returns {Transaction}\n     */\n    static /*Transaction*/ rewardTransaction(minerWallet, blockchainWallet) {\n        return exception.try(() => {\n            return Transaction.transactionWithOutputs(blockchainWallet, [{\n                    amount: MINING_REWARD,\n                    address: minerWallet.publicKey\n                }]\n            );\n        });\n    }\n\n    /**\n     * creates & signs a new Transaction instance with the given outputs\n     * @param {Wallet} senderWallet \n     * @param {Output[]} outputs \n     * @returns {Transaction}\n     */\n    static /*Transaction*/ transactionWithOutputs(senderWallet, outputs) {\n        return exception.try(() => {\n            const transaction = new this();\n            transaction.outputs.push(...outputs);\n            Transaction.signTransaction(transaction, senderWallet);\n            return transaction;\n        });\n    }\n\n    /**\n     * deserializes a Transaction instance from JSON data\n     * @returns {Transaction}\n     * @param {json} json\n     */\n    static /*Transaction*/ fromJson(json) {\n        return exception.try(() => {\n            const output = new this();\n            output.id = json.id;\n            output.input =  deserializeTxInput(json.input); \n            output.outputs = json.outputs;\n\n            return output;\n        });\n    }\n    \n    static /*[json]*/ arrayToJson(array) {\n        return exception.try(() => {\n            const output = []; \n            array.forEach((t) => {\n                output.push(t.toJson ? t.toJson() : t); \n            });\n            return output; \n        });\n    }\n}\n\nfunction serializeTxInput(txInput) {\n    return exception.try(() => {\n        const output = { \n            address: txInput.address,\n            amount: txInput.amount,\n            timestamp: txInput.timestamp\n        }; \n        \n        if (txInput.signature) {\n            output.signature = cryptoUtil.serializeSignature(txInput.signature); \n        }\n        \n        return output; \n    });\n}\n\nfunction deserializeTxInput(txInput) {\n    return exception.try(() => {\n        const output = { \n            address: txInput.address,\n            amount: txInput.amount,\n            timestamp: txInput.timestamp\n        }; \n        \n        if (txInput.signature) {\n            output.signature = cryptoUtil.deserializeSignature(txInput.signature);\n        }\n        \n        return output; \n    });\n}\n\nmodule.exports = Transaction;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567747991961
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/cryptoUtil.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/cryptoUtil.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/cryptoUtil.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/cryptoUtil.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
        "sourceFileName": "cryptoUtil.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar LOG_TAG = 'CRPT';\n\nvar SHA256 = require('crypto-js/sha256');\n\nvar uuidV1 = require('uuid/v1');\n\nvar EC = require('elliptic').ec;\n\nvar ec = new EC('secp256k1'); //TODO: this is far from ideal\n\nvar Signature = require('../../node_modules/elliptic/lib/elliptic/ec/signature');\n/**\n * generates & returns a new elliptic keypair\n * @returns {KeyPair}\n */\n\n/*EC.KeyPair*/\n\n\nexports.generateKeyPair = function () {\n  return ec.genKeyPair();\n};\n/**\n * deserializes a key pair from string (hex) representations of its \n * public & private keys\n * @param pub string (hex) representation of public key\n * @param priv string (hex) representation of private key\n * @returns {KeyPair}\n */\n\n/*EC.KeyPair*/\n\n\nexports.deserializeKeyPair = function (pub, priv) {\n  return ec.keyPair({\n    priv: priv,\n    privEnc: 'hex',\n    pub: pub,\n    pubEnc: 'hex'\n  });\n};\n/**\n * generates & returns a new UUID\n * @returns {string}\n */\n\n/*string*/\n\n\nexports.id = function () {\n  return uuidV1();\n};\n/**\n * generates a SHA256 hash of given data \n * @param {json} data \n */\n\n/*string*/\n\n\nexports.hash = function (data) {\n  return SHA256(JSON.stringify(data)).toString();\n};\n/**\n * validates a signature \n * @param {string} publicKey\n * @param {string} signature\n * @param {string} dataHash\n * @returns {bool}\n */\n\n/*bool*/\n\n\nexports.verifySignature = function (publicKey, signature, dataHash) {\n  return ec.keyFromPublic(publicKey, 'hex').verify(dataHash, signature);\n};\n\nexports.serializeSignature = function (signature) {\n  return {\n    r: signature.r.toString('hex'),\n    s: signature.s.toString('hex')\n  };\n};\n\nexports.deserializeSignature = function (json) {\n  return new Signature(json, 'hex');\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyeXB0b1V0aWwuanMiXSwibmFtZXMiOlsiTE9HX1RBRyIsIlNIQTI1NiIsInJlcXVpcmUiLCJ1dWlkVjEiLCJFQyIsImVjIiwiU2lnbmF0dXJlIiwiZXhwb3J0cyIsImdlbmVyYXRlS2V5UGFpciIsImdlbktleVBhaXIiLCJkZXNlcmlhbGl6ZUtleVBhaXIiLCJwdWIiLCJwcml2Iiwia2V5UGFpciIsInByaXZFbmMiLCJwdWJFbmMiLCJpZCIsImhhc2giLCJkYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsInRvU3RyaW5nIiwidmVyaWZ5U2lnbmF0dXJlIiwicHVibGljS2V5Iiwic2lnbmF0dXJlIiwiZGF0YUhhc2giLCJrZXlGcm9tUHVibGljIiwidmVyaWZ5Iiwic2VyaWFsaXplU2lnbmF0dXJlIiwiciIsInMiLCJkZXNlcmlhbGl6ZVNpZ25hdHVyZSIsImpzb24iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLE9BQU8sR0FBRyxNQUFoQjs7QUFFQSxJQUFNQyxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxrQkFBRCxDQUF0Qjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQXRCOztBQUNBLElBQU1FLEVBQUUsR0FBR0YsT0FBTyxDQUFDLFVBQUQsQ0FBUCxDQUFvQkcsRUFBL0I7O0FBQ0EsSUFBTUEsRUFBRSxHQUFHLElBQUlELEVBQUosQ0FBTyxXQUFQLENBQVgsQyxDQUVBOztBQUNBLElBQU1FLFNBQVMsR0FBR0osT0FBTyxDQUFDLHVEQUFELENBQXpCO0FBRUE7Ozs7O0FBSUE7OztBQUFlSyxPQUFPLENBQUNDLGVBQVIsR0FBMEIsWUFBTTtBQUMzQyxTQUFPSCxFQUFFLENBQUNJLFVBQUgsRUFBUDtBQUNILENBRmM7QUFJZjs7Ozs7Ozs7QUFPQTs7O0FBQWVGLE9BQU8sQ0FBQ0csa0JBQVIsR0FBNkIsVUFBQ0MsR0FBRCxFQUFNQyxJQUFOLEVBQWU7QUFDdkQsU0FBT1AsRUFBRSxDQUFDUSxPQUFILENBQVc7QUFDZEQsSUFBQUEsSUFBSSxFQUFFQSxJQURRO0FBRWRFLElBQUFBLE9BQU8sRUFBRSxLQUZLO0FBR2RILElBQUFBLEdBQUcsRUFBRUEsR0FIUztBQUlkSSxJQUFBQSxNQUFNLEVBQUU7QUFKTSxHQUFYLENBQVA7QUFNSCxDQVBjO0FBU2Y7Ozs7O0FBSUE7OztBQUFXUixPQUFPLENBQUNTLEVBQVIsR0FBYSxZQUFNO0FBQzFCLFNBQU9iLE1BQU0sRUFBYjtBQUNILENBRlU7QUFJWDs7Ozs7QUFJQTs7O0FBQVdJLE9BQU8sQ0FBQ1UsSUFBUixHQUFlLFVBQUNDLElBQUQsRUFBVTtBQUNoQyxTQUFPakIsTUFBTSxDQUFDa0IsSUFBSSxDQUFDQyxTQUFMLENBQWVGLElBQWYsQ0FBRCxDQUFOLENBQTZCRyxRQUE3QixFQUFQO0FBQ0gsQ0FGVTtBQUlYOzs7Ozs7OztBQU9BOzs7QUFBU2QsT0FBTyxDQUFDZSxlQUFSLEdBQTBCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUF1QkMsUUFBdkIsRUFBb0M7QUFDbkUsU0FBT3BCLEVBQUUsQ0FBQ3FCLGFBQUgsQ0FBaUJILFNBQWpCLEVBQTJCLEtBQTNCLEVBQWtDSSxNQUFsQyxDQUF5Q0YsUUFBekMsRUFBbURELFNBQW5ELENBQVA7QUFDSCxDQUZROztBQUlUakIsT0FBTyxDQUFDcUIsa0JBQVIsR0FBNkIsVUFBQ0osU0FBRCxFQUFlO0FBQ3hDLFNBQU87QUFDSEssSUFBQUEsQ0FBQyxFQUFFTCxTQUFTLENBQUNLLENBQVYsQ0FBWVIsUUFBWixDQUFxQixLQUFyQixDQURBO0FBRUhTLElBQUFBLENBQUMsRUFBRU4sU0FBUyxDQUFDTSxDQUFWLENBQVlULFFBQVosQ0FBcUIsS0FBckI7QUFGQSxHQUFQO0FBSUgsQ0FMRDs7QUFPQWQsT0FBTyxDQUFDd0Isb0JBQVIsR0FBK0IsVUFBQ0MsSUFBRCxFQUFVO0FBQ3JDLFNBQU8sSUFBSTFCLFNBQUosQ0FBYzBCLElBQWQsRUFBb0IsS0FBcEIsQ0FBUDtBQUNILENBRkQiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21pbmFjb2luL21pbmFjb2luLXNlcnZlci9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgTE9HX1RBRyA9ICdDUlBUJztcblxuY29uc3QgU0hBMjU2ID0gcmVxdWlyZSgnY3J5cHRvLWpzL3NoYTI1NicpO1xuY29uc3QgdXVpZFYxID0gcmVxdWlyZSgndXVpZC92MScpO1xuY29uc3QgRUMgPSByZXF1aXJlKCdlbGxpcHRpYycpLmVjO1xuY29uc3QgZWMgPSBuZXcgRUMoJ3NlY3AyNTZrMScpO1xuXG4vL1RPRE86IHRoaXMgaXMgZmFyIGZyb20gaWRlYWxcbmNvbnN0IFNpZ25hdHVyZSA9IHJlcXVpcmUoJy4uLy4uL25vZGVfbW9kdWxlcy9lbGxpcHRpYy9saWIvZWxsaXB0aWMvZWMvc2lnbmF0dXJlJyk7XG5cbi8qKlxuICogZ2VuZXJhdGVzICYgcmV0dXJucyBhIG5ldyBlbGxpcHRpYyBrZXlwYWlyXG4gKiBAcmV0dXJucyB7S2V5UGFpcn1cbiAqL1xuLypFQy5LZXlQYWlyKi8gZXhwb3J0cy5nZW5lcmF0ZUtleVBhaXIgPSAoKSA9PiB7XG4gICAgcmV0dXJuIGVjLmdlbktleVBhaXIoKTtcbn07XG5cbi8qKlxuICogZGVzZXJpYWxpemVzIGEga2V5IHBhaXIgZnJvbSBzdHJpbmcgKGhleCkgcmVwcmVzZW50YXRpb25zIG9mIGl0cyBcbiAqIHB1YmxpYyAmIHByaXZhdGUga2V5c1xuICogQHBhcmFtIHB1YiBzdHJpbmcgKGhleCkgcmVwcmVzZW50YXRpb24gb2YgcHVibGljIGtleVxuICogQHBhcmFtIHByaXYgc3RyaW5nIChoZXgpIHJlcHJlc2VudGF0aW9uIG9mIHByaXZhdGUga2V5XG4gKiBAcmV0dXJucyB7S2V5UGFpcn1cbiAqL1xuLypFQy5LZXlQYWlyKi8gZXhwb3J0cy5kZXNlcmlhbGl6ZUtleVBhaXIgPSAocHViLCBwcml2KSA9PiB7XG4gICAgcmV0dXJuIGVjLmtleVBhaXIoe1xuICAgICAgICBwcml2OiBwcml2LFxuICAgICAgICBwcml2RW5jOiAnaGV4JyxcbiAgICAgICAgcHViOiBwdWIsXG4gICAgICAgIHB1YkVuYzogJ2hleCdcbiAgICB9KTtcbn07XG5cbi8qKlxuICogZ2VuZXJhdGVzICYgcmV0dXJucyBhIG5ldyBVVUlEXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG4vKnN0cmluZyovIGV4cG9ydHMuaWQgPSAoKSA9PiB7XG4gICAgcmV0dXJuIHV1aWRWMSgpO1xufTtcblxuLyoqXG4gKiBnZW5lcmF0ZXMgYSBTSEEyNTYgaGFzaCBvZiBnaXZlbiBkYXRhIFxuICogQHBhcmFtIHtqc29ufSBkYXRhIFxuICovXG4vKnN0cmluZyovIGV4cG9ydHMuaGFzaCA9IChkYXRhKSA9PiB7XG4gICAgcmV0dXJuIFNIQTI1NihKU09OLnN0cmluZ2lmeShkYXRhKSkudG9TdHJpbmcoKTtcbn1cblxuLyoqXG4gKiB2YWxpZGF0ZXMgYSBzaWduYXR1cmUgXG4gKiBAcGFyYW0ge3N0cmluZ30gcHVibGljS2V5XG4gKiBAcGFyYW0ge3N0cmluZ30gc2lnbmF0dXJlXG4gKiBAcGFyYW0ge3N0cmluZ30gZGF0YUhhc2hcbiAqIEByZXR1cm5zIHtib29sfVxuICovXG4vKmJvb2wqLyBleHBvcnRzLnZlcmlmeVNpZ25hdHVyZSA9IChwdWJsaWNLZXksIHNpZ25hdHVyZSwgZGF0YUhhc2gpID0+IHtcbiAgICByZXR1cm4gZWMua2V5RnJvbVB1YmxpYyhwdWJsaWNLZXksJ2hleCcpLnZlcmlmeShkYXRhSGFzaCwgc2lnbmF0dXJlKTtcbn1cblxuZXhwb3J0cy5zZXJpYWxpemVTaWduYXR1cmUgPSAoc2lnbmF0dXJlKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcjogc2lnbmF0dXJlLnIudG9TdHJpbmcoJ2hleCcpLCBcbiAgICAgICAgczogc2lnbmF0dXJlLnMudG9TdHJpbmcoJ2hleCcpXG4gICAgfTtcbn1cblxuZXhwb3J0cy5kZXNlcmlhbGl6ZVNpZ25hdHVyZSA9IChqc29uKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBTaWduYXR1cmUoanNvbiwgJ2hleCcpOyBcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "cryptoUtil.js"
      ],
      "names": [
        "LOG_TAG",
        "SHA256",
        "require",
        "uuidV1",
        "EC",
        "ec",
        "Signature",
        "exports",
        "generateKeyPair",
        "genKeyPair",
        "deserializeKeyPair",
        "pub",
        "priv",
        "keyPair",
        "privEnc",
        "pubEnc",
        "id",
        "hash",
        "data",
        "JSON",
        "stringify",
        "toString",
        "verifySignature",
        "publicKey",
        "signature",
        "dataHash",
        "keyFromPublic",
        "verify",
        "serializeSignature",
        "r",
        "s",
        "deserializeSignature",
        "json"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,OAAO,GAAG,MAAhB;;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAAtB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAME,EAAE,GAAGF,OAAO,CAAC,UAAD,CAAP,CAAoBG,EAA/B;;AACA,IAAMA,EAAE,GAAG,IAAID,EAAJ,CAAO,WAAP,CAAX,C,CAEA;;AACA,IAAME,SAAS,GAAGJ,OAAO,CAAC,uDAAD,CAAzB;AAEA;;;;;AAIA;;;AAAeK,OAAO,CAACC,eAAR,GAA0B,YAAM;AAC3C,SAAOH,EAAE,CAACI,UAAH,EAAP;AACH,CAFc;AAIf;;;;;;;;AAOA;;;AAAeF,OAAO,CAACG,kBAAR,GAA6B,UAACC,GAAD,EAAMC,IAAN,EAAe;AACvD,SAAOP,EAAE,CAACQ,OAAH,CAAW;AACdD,IAAAA,IAAI,EAAEA,IADQ;AAEdE,IAAAA,OAAO,EAAE,KAFK;AAGdH,IAAAA,GAAG,EAAEA,GAHS;AAIdI,IAAAA,MAAM,EAAE;AAJM,GAAX,CAAP;AAMH,CAPc;AASf;;;;;AAIA;;;AAAWR,OAAO,CAACS,EAAR,GAAa,YAAM;AAC1B,SAAOb,MAAM,EAAb;AACH,CAFU;AAIX;;;;;AAIA;;;AAAWI,OAAO,CAACU,IAAR,GAAe,UAACC,IAAD,EAAU;AAChC,SAAOjB,MAAM,CAACkB,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAD,CAAN,CAA6BG,QAA7B,EAAP;AACH,CAFU;AAIX;;;;;;;;AAOA;;;AAASd,OAAO,CAACe,eAAR,GAA0B,UAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAoC;AACnE,SAAOpB,EAAE,CAACqB,aAAH,CAAiBH,SAAjB,EAA2B,KAA3B,EAAkCI,MAAlC,CAAyCF,QAAzC,EAAmDD,SAAnD,CAAP;AACH,CAFQ;;AAITjB,OAAO,CAACqB,kBAAR,GAA6B,UAACJ,SAAD,EAAe;AACxC,SAAO;AACHK,IAAAA,CAAC,EAAEL,SAAS,CAACK,CAAV,CAAYR,QAAZ,CAAqB,KAArB,CADA;AAEHS,IAAAA,CAAC,EAAEN,SAAS,CAACM,CAAV,CAAYT,QAAZ,CAAqB,KAArB;AAFA,GAAP;AAIH,CALD;;AAOAd,OAAO,CAACwB,oBAAR,GAA+B,UAACC,IAAD,EAAU;AACrC,SAAO,IAAI1B,SAAJ,CAAc0B,IAAd,EAAoB,KAApB,CAAP;AACH,CAFD",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'CRPT';\n\nconst SHA256 = require('crypto-js/sha256');\nconst uuidV1 = require('uuid/v1');\nconst EC = require('elliptic').ec;\nconst ec = new EC('secp256k1');\n\n//TODO: this is far from ideal\nconst Signature = require('../../node_modules/elliptic/lib/elliptic/ec/signature');\n\n/**\n * generates & returns a new elliptic keypair\n * @returns {KeyPair}\n */\n/*EC.KeyPair*/ exports.generateKeyPair = () => {\n    return ec.genKeyPair();\n};\n\n/**\n * deserializes a key pair from string (hex) representations of its \n * public & private keys\n * @param pub string (hex) representation of public key\n * @param priv string (hex) representation of private key\n * @returns {KeyPair}\n */\n/*EC.KeyPair*/ exports.deserializeKeyPair = (pub, priv) => {\n    return ec.keyPair({\n        priv: priv,\n        privEnc: 'hex',\n        pub: pub,\n        pubEnc: 'hex'\n    });\n};\n\n/**\n * generates & returns a new UUID\n * @returns {string}\n */\n/*string*/ exports.id = () => {\n    return uuidV1();\n};\n\n/**\n * generates a SHA256 hash of given data \n * @param {json} data \n */\n/*string*/ exports.hash = (data) => {\n    return SHA256(JSON.stringify(data)).toString();\n}\n\n/**\n * validates a signature \n * @param {string} publicKey\n * @param {string} signature\n * @param {string} dataHash\n * @returns {bool}\n */\n/*bool*/ exports.verifySignature = (publicKey, signature, dataHash) => {\n    return ec.keyFromPublic(publicKey,'hex').verify(dataHash, signature);\n}\n\nexports.serializeSignature = (signature) => {\n    return {\n        r: signature.r.toString('hex'), \n        s: signature.s.toString('hex')\n    };\n}\n\nexports.deserializeSignature = (json) => {\n    return new Signature(json, 'hex'); \n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1567778128268
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/config.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nexports.DIFFICULTY = 3;\nexports.MINE_RATE = 100000;\nexports.INITIAL_BALANCE = 500; //TODO: remove initial balance (set to 0)\n\nexports.HTTP_PORT = process.env.HTTP_PORT || 3001;\nexports.P2P_PORT = process.env.P2P_PORT || 5001;\nexports.MINING_REWARD = 50;\nexports.USE_DATABASE = false;\nexports.PEER_LIMIT = 3;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJleHBvcnRzIiwiRElGRklDVUxUWSIsIk1JTkVfUkFURSIsIklOSVRJQUxfQkFMQU5DRSIsIkhUVFBfUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJQMlBfUE9SVCIsIk1JTklOR19SRVdBUkQiLCJVU0VfREFUQUJBU0UiLCJQRUVSX0xJTUlUIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQUEsT0FBTyxDQUFDQyxVQUFSLEdBQXFCLENBQXJCO0FBQ0FELE9BQU8sQ0FBQ0UsU0FBUixHQUFvQixNQUFwQjtBQUNBRixPQUFPLENBQUNHLGVBQVIsR0FBMEIsR0FBMUIsQyxDQUErQjs7QUFDL0JILE9BQU8sQ0FBQ0ksU0FBUixHQUFvQkMsT0FBTyxDQUFDQyxHQUFSLENBQVlGLFNBQVosSUFBeUIsSUFBN0M7QUFDQUosT0FBTyxDQUFDTyxRQUFSLEdBQW1CRixPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBWixJQUF3QixJQUEzQztBQUNBUCxPQUFPLENBQUNRLGFBQVIsR0FBd0IsRUFBeEI7QUFDQVIsT0FBTyxDQUFDUyxZQUFSLEdBQXVCLEtBQXZCO0FBQ0FULE9BQU8sQ0FBQ1UsVUFBUixHQUFxQixDQUFyQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9hY2VyL0Rlc2t0b3AvbWluYWNvaW4vbWluYWNvaW4vbWluYWNvaW4tc2VydmVyL3NyYyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5ESUZGSUNVTFRZID0gMztcbmV4cG9ydHMuTUlORV9SQVRFID0gMTAwMDAwO1xuZXhwb3J0cy5JTklUSUFMX0JBTEFOQ0UgPSA1MDA7IC8vVE9ETzogcmVtb3ZlIGluaXRpYWwgYmFsYW5jZSAoc2V0IHRvIDApXG5leHBvcnRzLkhUVFBfUE9SVCA9IHByb2Nlc3MuZW52LkhUVFBfUE9SVCB8fCAzMDAxO1xuZXhwb3J0cy5QMlBfUE9SVCA9IHByb2Nlc3MuZW52LlAyUF9QT1JUIHx8IDUwMDE7XG5leHBvcnRzLk1JTklOR19SRVdBUkQgPSA1MDtcbmV4cG9ydHMuVVNFX0RBVEFCQVNFID0gZmFsc2U7XG5leHBvcnRzLlBFRVJfTElNSVQgPSAzOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "exports",
        "DIFFICULTY",
        "MINE_RATE",
        "INITIAL_BALANCE",
        "HTTP_PORT",
        "process",
        "env",
        "P2P_PORT",
        "MINING_REWARD",
        "USE_DATABASE",
        "PEER_LIMIT"
      ],
      "mappings": "AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,CAArB;AACAD,OAAO,CAACE,SAAR,GAAoB,MAApB;AACAF,OAAO,CAACG,eAAR,GAA0B,GAA1B,C,CAA+B;;AAC/BH,OAAO,CAACI,SAAR,GAAoBC,OAAO,CAACC,GAAR,CAAYF,SAAZ,IAAyB,IAA7C;AACAJ,OAAO,CAACO,QAAR,GAAmBF,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwB,IAA3C;AACAP,OAAO,CAACQ,aAAR,GAAwB,EAAxB;AACAR,OAAO,CAACS,YAAR,GAAuB,KAAvB;AACAT,OAAO,CAACU,UAAR,GAAqB,CAArB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "sourcesContent": [
        "'use strict';\n\nexports.DIFFICULTY = 3;\nexports.MINE_RATE = 100000;\nexports.INITIAL_BALANCE = 500; //TODO: remove initial balance (set to 0)\nexports.HTTP_PORT = process.env.HTTP_PORT || 3001;\nexports.P2P_PORT = process.env.P2P_PORT || 5001;\nexports.MINING_REWARD = 50;\nexports.USE_DATABASE = false;\nexports.PEER_LIMIT = 3;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567669795392
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/winstonLogger.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/winstonLogger.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/winstonLogger.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/winstonLogger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
        "sourceFileName": "winstonLogger.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n/**\n * ------------------------\n * implements a logger factory, returning a logger that implements winston.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('winston'),\n    transports = _require.transports,\n    createLogger = _require.createLogger,\n    format = _require.format; //create winston logger\n\n\nvar logger = createLogger({\n  format: format.combine(format.timestamp(), format.json()),\n  transports: [new transports.Console({\n    handleExceptions: true,\n    timestamp: true\n  })],\n  exitOnError: false\n});\n/**\n * generic logger, wraps winston\n */\n\nvar WinstonLogger =\n/*#__PURE__*/\nfunction () {\n  function WinstonLogger(tag) {\n    _classCallCheck(this, WinstonLogger);\n\n    this.tag = tag;\n  }\n\n  _createClass(WinstonLogger, [{\n    key: \"debug\",\n    value: function debug(s) {\n      logger.debug(formatMessage(this.tag, s));\n    }\n  }, {\n    key: \"info\",\n    value: function info(s) {\n      logger.info(formatMessage(this.tag, s));\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(s) {\n      logger.warn(formatMessage(this.tag, s));\n    }\n  }, {\n    key: \"error\",\n    value: function error(s) {\n      logger.error(formatMessage(this.tag, s));\n    }\n  }]);\n\n  return WinstonLogger;\n}();\n\nfunction formatMessage(tag, message) {\n  return \"\".concat(tag, \": \").concat(message);\n}\n\nexports.createLogger = function (tag) {\n  return new WinstonLogger(tag);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndpbnN0b25Mb2dnZXIuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsInRyYW5zcG9ydHMiLCJjcmVhdGVMb2dnZXIiLCJmb3JtYXQiLCJsb2dnZXIiLCJjb21iaW5lIiwidGltZXN0YW1wIiwianNvbiIsIkNvbnNvbGUiLCJoYW5kbGVFeGNlcHRpb25zIiwiZXhpdE9uRXJyb3IiLCJXaW5zdG9uTG9nZ2VyIiwidGFnIiwicyIsImRlYnVnIiwiZm9ybWF0TWVzc2FnZSIsImluZm8iLCJ3YXJuIiwiZXJyb3IiLCJtZXNzYWdlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTs7Ozs7Ozs7Ozs7Ozs7ZUFRMkNBLE9BQU8sQ0FBQyxTQUFELEM7SUFBM0NDLFUsWUFBQUEsVTtJQUFZQyxZLFlBQUFBLFk7SUFBY0MsTSxZQUFBQSxNLEVBRWpDOzs7QUFDQSxJQUFNQyxNQUFNLEdBQUdGLFlBQVksQ0FBQztBQUN4QkMsRUFBQUEsTUFBTSxFQUFFQSxNQUFNLENBQUNFLE9BQVAsQ0FDSkYsTUFBTSxDQUFDRyxTQUFQLEVBREksRUFFSkgsTUFBTSxDQUFDSSxJQUFQLEVBRkksQ0FEZ0I7QUFLeEJOLEVBQUFBLFVBQVUsRUFBRSxDQUNWLElBQUlBLFVBQVUsQ0FBQ08sT0FBZixDQUF1QjtBQUNyQkMsSUFBQUEsZ0JBQWdCLEVBQUUsSUFERztBQUVyQkgsSUFBQUEsU0FBUyxFQUFFO0FBRlUsR0FBdkIsQ0FEVSxDQUxZO0FBV3hCSSxFQUFBQSxXQUFXLEVBQUU7QUFYVyxDQUFELENBQTNCO0FBY0E7Ozs7SUFHTUMsYTs7O0FBRUYseUJBQVlDLEdBQVosRUFBaUI7QUFBQTs7QUFDYixTQUFLQSxHQUFMLEdBQVdBLEdBQVg7QUFDSDs7OzswQkFFS0MsQyxFQUFHO0FBQ0xULE1BQUFBLE1BQU0sQ0FBQ1UsS0FBUCxDQUFhQyxhQUFhLENBQUMsS0FBS0gsR0FBTixFQUFXQyxDQUFYLENBQTFCO0FBQ0g7Ozt5QkFFSUEsQyxFQUFHO0FBQ0pULE1BQUFBLE1BQU0sQ0FBQ1ksSUFBUCxDQUFZRCxhQUFhLENBQUMsS0FBS0gsR0FBTixFQUFXQyxDQUFYLENBQXpCO0FBQ0g7Ozt5QkFFSUEsQyxFQUFHO0FBQ0pULE1BQUFBLE1BQU0sQ0FBQ2EsSUFBUCxDQUFZRixhQUFhLENBQUMsS0FBS0gsR0FBTixFQUFXQyxDQUFYLENBQXpCO0FBQ0g7OzswQkFFS0EsQyxFQUFHO0FBQ0xULE1BQUFBLE1BQU0sQ0FBQ2MsS0FBUCxDQUFhSCxhQUFhLENBQUMsS0FBS0gsR0FBTixFQUFXQyxDQUFYLENBQTFCO0FBQ0g7Ozs7OztBQUdMLFNBQVNFLGFBQVQsQ0FBdUJILEdBQXZCLEVBQTRCTyxPQUE1QixFQUFxQztBQUNqQyxtQkFBVVAsR0FBVixlQUFrQk8sT0FBbEI7QUFDSDs7QUFFREMsT0FBTyxDQUFDbEIsWUFBUixHQUF1QixVQUFDVSxHQUFELEVBQVM7QUFBRSxTQUFPLElBQUlELGFBQUosQ0FBa0JDLEdBQWxCLENBQVA7QUFBZ0MsQ0FBbEUiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21pbmFjb2luL21pbmFjb2luLXNlcnZlci9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIGltcGxlbWVudHMgYSBsb2dnZXIgZmFjdG9yeSwgcmV0dXJuaW5nIGEgbG9nZ2VyIHRoYXQgaW1wbGVtZW50cyB3aW5zdG9uLlxuICpcbiAqIEF1dGhvcjogSm9obiBSLiBLb3NpbnNraVxuICogRGF0ZTogMjcgQXVnIDIwMTlcbiAqL1xuXG5jb25zdCB7dHJhbnNwb3J0cywgY3JlYXRlTG9nZ2VyLCBmb3JtYXR9ID0gcmVxdWlyZSgnd2luc3RvbicpO1xuXG4vL2NyZWF0ZSB3aW5zdG9uIGxvZ2dlclxuY29uc3QgbG9nZ2VyID0gY3JlYXRlTG9nZ2VyKHtcbiAgICBmb3JtYXQ6IGZvcm1hdC5jb21iaW5lKFxuICAgICAgICBmb3JtYXQudGltZXN0YW1wKCksXG4gICAgICAgIGZvcm1hdC5qc29uKClcbiAgICApLFxuICAgIHRyYW5zcG9ydHM6IFtcbiAgICAgIG5ldyB0cmFuc3BvcnRzLkNvbnNvbGUoe1xuICAgICAgICBoYW5kbGVFeGNlcHRpb25zOiB0cnVlLFxuICAgICAgICB0aW1lc3RhbXA6IHRydWVcbiAgICAgIH0pXG4gICAgXSxcbiAgICBleGl0T25FcnJvcjogZmFsc2Vcbn0pO1xuXG4vKipcbiAqIGdlbmVyaWMgbG9nZ2VyLCB3cmFwcyB3aW5zdG9uXG4gKi9cbmNsYXNzIFdpbnN0b25Mb2dnZXIge1xuXG4gICAgY29uc3RydWN0b3IodGFnKSB7XG4gICAgICAgIHRoaXMudGFnID0gdGFnO1xuICAgIH1cblxuICAgIGRlYnVnKHMpIHtcbiAgICAgICAgbG9nZ2VyLmRlYnVnKGZvcm1hdE1lc3NhZ2UodGhpcy50YWcsIHMpKTtcbiAgICB9XG5cbiAgICBpbmZvKHMpIHtcbiAgICAgICAgbG9nZ2VyLmluZm8oZm9ybWF0TWVzc2FnZSh0aGlzLnRhZywgcykpO1xuICAgIH1cblxuICAgIHdhcm4ocykge1xuICAgICAgICBsb2dnZXIud2Fybihmb3JtYXRNZXNzYWdlKHRoaXMudGFnLCBzKSk7XG4gICAgfVxuXG4gICAgZXJyb3Iocykge1xuICAgICAgICBsb2dnZXIuZXJyb3IoZm9ybWF0TWVzc2FnZSh0aGlzLnRhZywgcykpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZm9ybWF0TWVzc2FnZSh0YWcsIG1lc3NhZ2UpIHtcbiAgICByZXR1cm4gYCR7dGFnfTogJHttZXNzYWdlfWA7XG59XG5cbmV4cG9ydHMuY3JlYXRlTG9nZ2VyID0gKHRhZykgPT4geyByZXR1cm4gbmV3IFdpbnN0b25Mb2dnZXIodGFnKTsgfTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "winstonLogger.js"
      ],
      "names": [
        "require",
        "transports",
        "createLogger",
        "format",
        "logger",
        "combine",
        "timestamp",
        "json",
        "Console",
        "handleExceptions",
        "exitOnError",
        "WinstonLogger",
        "tag",
        "s",
        "debug",
        "formatMessage",
        "info",
        "warn",
        "error",
        "message",
        "exports"
      ],
      "mappings": "AAAA;AAEA;;;;;;;;;;;;;;eAQ2CA,OAAO,CAAC,SAAD,C;IAA3CC,U,YAAAA,U;IAAYC,Y,YAAAA,Y;IAAcC,M,YAAAA,M,EAEjC;;;AACA,IAAMC,MAAM,GAAGF,YAAY,CAAC;AACxBC,EAAAA,MAAM,EAAEA,MAAM,CAACE,OAAP,CACJF,MAAM,CAACG,SAAP,EADI,EAEJH,MAAM,CAACI,IAAP,EAFI,CADgB;AAKxBN,EAAAA,UAAU,EAAE,CACV,IAAIA,UAAU,CAACO,OAAf,CAAuB;AACrBC,IAAAA,gBAAgB,EAAE,IADG;AAErBH,IAAAA,SAAS,EAAE;AAFU,GAAvB,CADU,CALY;AAWxBI,EAAAA,WAAW,EAAE;AAXW,CAAD,CAA3B;AAcA;;;;IAGMC,a;;;AAEF,yBAAYC,GAAZ,EAAiB;AAAA;;AACb,SAAKA,GAAL,GAAWA,GAAX;AACH;;;;0BAEKC,C,EAAG;AACLT,MAAAA,MAAM,CAACU,KAAP,CAAaC,aAAa,CAAC,KAAKH,GAAN,EAAWC,CAAX,CAA1B;AACH;;;yBAEIA,C,EAAG;AACJT,MAAAA,MAAM,CAACY,IAAP,CAAYD,aAAa,CAAC,KAAKH,GAAN,EAAWC,CAAX,CAAzB;AACH;;;yBAEIA,C,EAAG;AACJT,MAAAA,MAAM,CAACa,IAAP,CAAYF,aAAa,CAAC,KAAKH,GAAN,EAAWC,CAAX,CAAzB;AACH;;;0BAEKA,C,EAAG;AACLT,MAAAA,MAAM,CAACc,KAAP,CAAaH,aAAa,CAAC,KAAKH,GAAN,EAAWC,CAAX,CAA1B;AACH;;;;;;AAGL,SAASE,aAAT,CAAuBH,GAAvB,EAA4BO,OAA5B,EAAqC;AACjC,mBAAUP,GAAV,eAAkBO,OAAlB;AACH;;AAEDC,OAAO,CAAClB,YAAR,GAAuB,UAACU,GAAD,EAAS;AAAE,SAAO,IAAID,aAAJ,CAAkBC,GAAlB,CAAP;AAAgC,CAAlE",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "sourcesContent": [
        "'use strict';\n\n/**\n * ------------------------\n * implements a logger factory, returning a logger that implements winston.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\n\nconst {transports, createLogger, format} = require('winston');\n\n//create winston logger\nconst logger = createLogger({\n    format: format.combine(\n        format.timestamp(),\n        format.json()\n    ),\n    transports: [\n      new transports.Console({\n        handleExceptions: true,\n        timestamp: true\n      })\n    ],\n    exitOnError: false\n});\n\n/**\n * generic logger, wraps winston\n */\nclass WinstonLogger {\n\n    constructor(tag) {\n        this.tag = tag;\n    }\n\n    debug(s) {\n        logger.debug(formatMessage(this.tag, s));\n    }\n\n    info(s) {\n        logger.info(formatMessage(this.tag, s));\n    }\n\n    warn(s) {\n        logger.warn(formatMessage(this.tag, s));\n    }\n\n    error(s) {\n        logger.error(formatMessage(this.tag, s));\n    }\n}\n\nfunction formatMessage(tag, message) {\n    return `${tag}: ${message}`;\n}\n\nexports.createLogger = (tag) => { return new WinstonLogger(tag); };"
      ]
    },
    "sourceType": "script",
    "mtime": 1567608962550
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/exceptionHandler.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/exceptionHandler.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/exceptionHandler.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/exceptionHandler.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
        "sourceFileName": "exceptionHandler.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n/**\n * ------------------------\n * generic exception handler: wraps try/catch. Is easier on the eyes, in my opinion,\n * than try/catch.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ExceptionHandler =\n/*#__PURE__*/\nfunction () {\n  function ExceptionHandler(logger) {\n    _classCallCheck(this, ExceptionHandler);\n\n    this.logger = logger;\n  }\n  /**\n   * wraps the given expression in a try/catch, and provides standard handling for any errors.\n   *\n   * @param {fn} expr\n   * @param {json} options:  {\n   *      defaultValue: null,\n   *      onError: (e) => {},\n   *      finally: (e) => {},\n   *      functionName: ''\n   *  }\n   * @returns {*} return value of given expression\n   */\n\n\n  _createClass(ExceptionHandler, [{\n    key: \"try\",\n    value: function _try(expr, options) {\n      try {\n        return expr();\n      } catch (err) {\n        this.handleError(err);\n        if (options && options.onError) return options.onError(err);\n        return options ? options.defaultValue : null;\n      } finally {\n        if (options && options[\"finally\"]) return options[\"finally\"](err);\n      }\n    }\n    /**\n     * wraps the expression as in try(*), but in such a way as to allow for awaiting async code.\n     *\n     * @param {fn} expr\n     * @param {json} options: see try(expr, options)\n     */\n\n  }, {\n    key: \"tryAsync\",\n    value: function () {\n      var _tryAsync = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(expr, options) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return expr();\n\n              case 3:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                this.handleError(_context.t0);\n\n                if (!(options && options.onError)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", options.onError(_context.t0));\n\n              case 11:\n                return _context.abrupt(\"return\", options ? options.defaultValue : null);\n\n              case 12:\n                _context.prev = 12;\n\n                if (!(options && options[\"finally\"])) {\n                  _context.next = 15;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", options[\"finally\"]());\n\n              case 15:\n                return _context.finish(12);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 6, 12, 16]]);\n      }));\n\n      function tryAsync(_x, _x2) {\n        return _tryAsync.apply(this, arguments);\n      }\n\n      return tryAsync;\n    }()\n    /**\n     * provides standard handling for any errors.\n     *\n     * @param {*} err\n     * @param {*} functionName\n     */\n\n  }, {\n    key: \"handleError\",\n    value: function handleError(err, functionName) {\n      var prefix = functionName && functionName.length ? ' [' + functionName + '] ' : '';\n\n      if (this.logger) {\n        this.logger.error(JSON.stringify(err) + ' ' + err);\n      }\n\n      if (err.stack) console.log(err.stack);\n    }\n  }]);\n\n  return ExceptionHandler;\n}();\n\nexports.createHandler = function (logger) {\n  return new ExceptionHandler(logger);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4Y2VwdGlvbkhhbmRsZXIuanMiXSwibmFtZXMiOlsiRXhjZXB0aW9uSGFuZGxlciIsImxvZ2dlciIsImV4cHIiLCJvcHRpb25zIiwiZXJyIiwiaGFuZGxlRXJyb3IiLCJvbkVycm9yIiwiZGVmYXVsdFZhbHVlIiwiZnVuY3Rpb25OYW1lIiwicHJlZml4IiwibGVuZ3RoIiwiZXJyb3IiLCJKU09OIiwic3RyaW5naWZ5Iiwic3RhY2siLCJjb25zb2xlIiwibG9nIiwiZXhwb3J0cyIsImNyZWF0ZUhhbmRsZXIiXSwibWFwcGluZ3MiOiJBQUFBO0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFTTUEsZ0I7OztBQUNGLDRCQUFZQyxNQUFaLEVBQW9CO0FBQUE7O0FBQ2hCLFNBQUtBLE1BQUwsR0FBY0EsTUFBZDtBQUNIO0FBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7eUJBWUlDLEksRUFBTUMsTyxFQUFTO0FBQ2YsVUFBRztBQUNDLGVBQU9ELElBQUksRUFBWDtBQUNILE9BRkQsQ0FHQSxPQUFNRSxHQUFOLEVBQVU7QUFDTixhQUFLQyxXQUFMLENBQWlCRCxHQUFqQjtBQUNBLFlBQUlELE9BQU8sSUFBSUEsT0FBTyxDQUFDRyxPQUF2QixFQUNJLE9BQU9ILE9BQU8sQ0FBQ0csT0FBUixDQUFnQkYsR0FBaEIsQ0FBUDtBQUVKLGVBQU9ELE9BQU8sR0FBR0EsT0FBTyxDQUFDSSxZQUFYLEdBQTBCLElBQXhDO0FBQ0gsT0FURCxTQVVRO0FBQ0osWUFBSUosT0FBTyxJQUFJQSxPQUFPLFdBQXRCLEVBQ0ksT0FBT0EsT0FBTyxXQUFQLENBQWdCQyxHQUFoQixDQUFQO0FBQ1A7QUFDSjtBQUVEOzs7Ozs7Ozs7Ozs7K0NBTWVGLEksRUFBTUMsTzs7Ozs7Ozt1QkFFQUQsSUFBSSxFOzs7Ozs7OztBQUdqQixxQkFBS0csV0FBTDs7c0JBQ0lGLE9BQU8sSUFBSUEsT0FBTyxDQUFDRyxPOzs7OztpREFDWkgsT0FBTyxDQUFDRyxPQUFSLGE7OztpREFFSkgsT0FBTyxHQUFHQSxPQUFPLENBQUNJLFlBQVgsR0FBMEIsSTs7Ozs7c0JBR3BDSixPQUFPLElBQUlBLE9BQU8sVzs7Ozs7aURBQ1hBLE9BQU8sV0FBUCxFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSW5COzs7Ozs7Ozs7Z0NBTVlDLEcsRUFBS0ksWSxFQUFjO0FBQzNCLFVBQUlDLE1BQU0sR0FBSUQsWUFBWSxJQUFJQSxZQUFZLENBQUNFLE1BQTdCLEdBQXNDLE9BQU9GLFlBQVAsR0FBc0IsSUFBNUQsR0FBbUUsRUFBakY7O0FBRUEsVUFBSSxLQUFLUCxNQUFULEVBQWlCO0FBQ2IsYUFBS0EsTUFBTCxDQUFZVSxLQUFaLENBQWtCQyxJQUFJLENBQUNDLFNBQUwsQ0FBZVQsR0FBZixJQUFzQixHQUF0QixHQUE0QkEsR0FBOUM7QUFDSDs7QUFDRCxVQUFJQSxHQUFHLENBQUNVLEtBQVIsRUFDSUMsT0FBTyxDQUFDQyxHQUFSLENBQVlaLEdBQUcsQ0FBQ1UsS0FBaEI7QUFDUDs7Ozs7O0FBSUxHLE9BQU8sQ0FBQ0MsYUFBUixHQUF3QixVQUFDakIsTUFBRCxFQUFZO0FBQUUsU0FBTyxJQUFJRCxnQkFBSixDQUFxQkMsTUFBckIsQ0FBUDtBQUFzQyxDQUE1RSIsInNvdXJjZVJvb3QiOiIvaG9tZS9hY2VyL0Rlc2t0b3AvbWluYWNvaW4vbWluYWNvaW4vbWluYWNvaW4tc2VydmVyL3NyYy91dGlsIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogZ2VuZXJpYyBleGNlcHRpb24gaGFuZGxlcjogd3JhcHMgdHJ5L2NhdGNoLiBJcyBlYXNpZXIgb24gdGhlIGV5ZXMsIGluIG15IG9waW5pb24sXG4gKiB0aGFuIHRyeS9jYXRjaC5cbiAqXG4gKiBBdXRob3I6IEpvaG4gUi4gS29zaW5za2lcbiAqIERhdGU6IDI3IEF1ZyAyMDE5XG4gKi9cblxuY2xhc3MgRXhjZXB0aW9uSGFuZGxlciB7XG4gICAgY29uc3RydWN0b3IobG9nZ2VyKSB7XG4gICAgICAgIHRoaXMubG9nZ2VyID0gbG9nZ2VyO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHdyYXBzIHRoZSBnaXZlbiBleHByZXNzaW9uIGluIGEgdHJ5L2NhdGNoLCBhbmQgcHJvdmlkZXMgc3RhbmRhcmQgaGFuZGxpbmcgZm9yIGFueSBlcnJvcnMuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge2ZufSBleHByXG4gICAgICogQHBhcmFtIHtqc29ufSBvcHRpb25zOiAge1xuICAgICAqICAgICAgZGVmYXVsdFZhbHVlOiBudWxsLFxuICAgICAqICAgICAgb25FcnJvcjogKGUpID0+IHt9LFxuICAgICAqICAgICAgZmluYWxseTogKGUpID0+IHt9LFxuICAgICAqICAgICAgZnVuY3Rpb25OYW1lOiAnJ1xuICAgICAqICB9XG4gICAgICogQHJldHVybnMgeyp9IHJldHVybiB2YWx1ZSBvZiBnaXZlbiBleHByZXNzaW9uXG4gICAgICovXG4gICAgdHJ5KGV4cHIsIG9wdGlvbnMpIHtcbiAgICAgICAgdHJ5e1xuICAgICAgICAgICAgcmV0dXJuIGV4cHIoKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaChlcnIpe1xuICAgICAgICAgICAgdGhpcy5oYW5kbGVFcnJvcihlcnIpO1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5vbkVycm9yKVxuICAgICAgICAgICAgICAgIHJldHVybiBvcHRpb25zLm9uRXJyb3IoZXJyKTtcblxuICAgICAgICAgICAgcmV0dXJuIG9wdGlvbnMgPyBvcHRpb25zLmRlZmF1bHRWYWx1ZSA6IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLmZpbmFsbHkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIG9wdGlvbnMuZmluYWxseShlcnIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogd3JhcHMgdGhlIGV4cHJlc3Npb24gYXMgaW4gdHJ5KCopLCBidXQgaW4gc3VjaCBhIHdheSBhcyB0byBhbGxvdyBmb3IgYXdhaXRpbmcgYXN5bmMgY29kZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7Zm59IGV4cHJcbiAgICAgKiBAcGFyYW0ge2pzb259IG9wdGlvbnM6IHNlZSB0cnkoZXhwciwgb3B0aW9ucylcbiAgICAgKi9cbiAgICBhc3luYyB0cnlBc3luYyhleHByLCBvcHRpb25zKSB7XG4gICAgICAgIHRyeXtcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCBleHByKCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2goZXJyKXtcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlRXJyb3IoZXJyKTtcbiAgICAgICAgICAgIGlmIChvcHRpb25zICYmIG9wdGlvbnMub25FcnJvcilcbiAgICAgICAgICAgICAgICByZXR1cm4gb3B0aW9ucy5vbkVycm9yKGVycik7XG5cbiAgICAgICAgICAgIHJldHVybiBvcHRpb25zID8gb3B0aW9ucy5kZWZhdWx0VmFsdWUgOiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5maW5hbGx5KVxuICAgICAgICAgICAgICAgIHJldHVybiBvcHRpb25zLmZpbmFsbHkoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHByb3ZpZGVzIHN0YW5kYXJkIGhhbmRsaW5nIGZvciBhbnkgZXJyb3JzLlxuICAgICAqXG4gICAgICogQHBhcmFtIHsqfSBlcnJcbiAgICAgKiBAcGFyYW0geyp9IGZ1bmN0aW9uTmFtZVxuICAgICAqL1xuICAgIGhhbmRsZUVycm9yKGVyciwgZnVuY3Rpb25OYW1lKSB7XG4gICAgICAgIGxldCBwcmVmaXggPSAoZnVuY3Rpb25OYW1lICYmIGZ1bmN0aW9uTmFtZS5sZW5ndGggPyAnIFsnICsgZnVuY3Rpb25OYW1lICsgJ10gJyA6ICcnKTtcblxuICAgICAgICBpZiAodGhpcy5sb2dnZXIpIHtcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLmVycm9yKEpTT04uc3RyaW5naWZ5KGVycikgKyAnICcgKyBlcnIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChlcnIuc3RhY2spXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIuc3RhY2spO1xuICAgIH1cbn1cblxuXG5leHBvcnRzLmNyZWF0ZUhhbmRsZXIgPSAobG9nZ2VyKSA9PiB7IHJldHVybiBuZXcgRXhjZXB0aW9uSGFuZGxlcihsb2dnZXIpOyB9OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "exceptionHandler.js"
      ],
      "names": [
        "ExceptionHandler",
        "logger",
        "expr",
        "options",
        "err",
        "handleError",
        "onError",
        "defaultValue",
        "functionName",
        "prefix",
        "length",
        "error",
        "JSON",
        "stringify",
        "stack",
        "console",
        "log",
        "exports",
        "createHandler"
      ],
      "mappings": "AAAA;AAEA;;;;;;;;;;;;;;;;;;;IASMA,gB;;;AACF,4BAAYC,MAAZ,EAAoB;AAAA;;AAChB,SAAKA,MAAL,GAAcA,MAAd;AACH;AAED;;;;;;;;;;;;;;;;yBAYIC,I,EAAMC,O,EAAS;AACf,UAAG;AACC,eAAOD,IAAI,EAAX;AACH,OAFD,CAGA,OAAME,GAAN,EAAU;AACN,aAAKC,WAAL,CAAiBD,GAAjB;AACA,YAAID,OAAO,IAAIA,OAAO,CAACG,OAAvB,EACI,OAAOH,OAAO,CAACG,OAAR,CAAgBF,GAAhB,CAAP;AAEJ,eAAOD,OAAO,GAAGA,OAAO,CAACI,YAAX,GAA0B,IAAxC;AACH,OATD,SAUQ;AACJ,YAAIJ,OAAO,IAAIA,OAAO,WAAtB,EACI,OAAOA,OAAO,WAAP,CAAgBC,GAAhB,CAAP;AACP;AACJ;AAED;;;;;;;;;;;;+CAMeF,I,EAAMC,O;;;;;;;uBAEAD,IAAI,E;;;;;;;;AAGjB,qBAAKG,WAAL;;sBACIF,OAAO,IAAIA,OAAO,CAACG,O;;;;;iDACZH,OAAO,CAACG,OAAR,a;;;iDAEJH,OAAO,GAAGA,OAAO,CAACI,YAAX,GAA0B,I;;;;;sBAGpCJ,OAAO,IAAIA,OAAO,W;;;;;iDACXA,OAAO,WAAP,E;;;;;;;;;;;;;;;;;;;AAInB;;;;;;;;;gCAMYC,G,EAAKI,Y,EAAc;AAC3B,UAAIC,MAAM,GAAID,YAAY,IAAIA,YAAY,CAACE,MAA7B,GAAsC,OAAOF,YAAP,GAAsB,IAA5D,GAAmE,EAAjF;;AAEA,UAAI,KAAKP,MAAT,EAAiB;AACb,aAAKA,MAAL,CAAYU,KAAZ,CAAkBC,IAAI,CAACC,SAAL,CAAeT,GAAf,IAAsB,GAAtB,GAA4BA,GAA9C;AACH;;AACD,UAAIA,GAAG,CAACU,KAAR,EACIC,OAAO,CAACC,GAAR,CAAYZ,GAAG,CAACU,KAAhB;AACP;;;;;;AAILG,OAAO,CAACC,aAAR,GAAwB,UAACjB,MAAD,EAAY;AAAE,SAAO,IAAID,gBAAJ,CAAqBC,MAArB,CAAP;AAAsC,CAA5E",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "sourcesContent": [
        "'use strict';\n\n/**\n * ------------------------\n * generic exception handler: wraps try/catch. Is easier on the eyes, in my opinion,\n * than try/catch.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\n\nclass ExceptionHandler {\n    constructor(logger) {\n        this.logger = logger;\n    }\n\n    /**\n     * wraps the given expression in a try/catch, and provides standard handling for any errors.\n     *\n     * @param {fn} expr\n     * @param {json} options:  {\n     *      defaultValue: null,\n     *      onError: (e) => {},\n     *      finally: (e) => {},\n     *      functionName: ''\n     *  }\n     * @returns {*} return value of given expression\n     */\n    try(expr, options) {\n        try{\n            return expr();\n        }\n        catch(err){\n            this.handleError(err);\n            if (options && options.onError)\n                return options.onError(err);\n\n            return options ? options.defaultValue : null;\n        }\n        finally {\n            if (options && options.finally)\n                return options.finally(err);\n        }\n    }\n\n    /**\n     * wraps the expression as in try(*), but in such a way as to allow for awaiting async code.\n     *\n     * @param {fn} expr\n     * @param {json} options: see try(expr, options)\n     */\n    async tryAsync(expr, options) {\n        try{\n            return await expr();\n        }\n        catch(err){\n            this.handleError(err);\n            if (options && options.onError)\n                return options.onError(err);\n\n            return options ? options.defaultValue : null;\n        }\n        finally {\n            if (options && options.finally)\n                return options.finally();\n        }\n    }\n\n    /**\n     * provides standard handling for any errors.\n     *\n     * @param {*} err\n     * @param {*} functionName\n     */\n    handleError(err, functionName) {\n        let prefix = (functionName && functionName.length ? ' [' + functionName + '] ' : '');\n\n        if (this.logger) {\n            this.logger.error(JSON.stringify(err) + ' ' + err);\n        }\n        if (err.stack)\n            console.log(err.stack);\n    }\n}\n\n\nexports.createHandler = (logger) => { return new ExceptionHandler(logger); };"
      ]
    },
    "sourceType": "script",
    "mtime": 1567271964391
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/TransactionPool.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/TransactionPool.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/TransactionPool.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/TransactionPool.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
        "sourceFileName": "TransactionPool.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'TXPL';\n\nvar Transaction = require('./Transaction');\n\nvar ioc = require('../../../util/iocContainer');\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: TransactionPool\n * -------------------------\n * pool of transactions that have not yet been included in the blockchain\n * (but may be eligible to be mined)\n *\n * author: John R. Kosinski\n */\n\nvar TransactionPool =\n/*#__PURE__*/\nfunction () {\n  _createClass(TransactionPool, [{\n    key: \"transactions\",\n    get: function get() {\n      return this._transactions;\n    }\n  }, {\n    key: \"txCount\",\n    get: function get() {\n      return this._transactions.length;\n    }\n    /**\n     * constructor\n     */\n\n  }]);\n\n  function TransactionPool() {\n    _classCallCheck(this, TransactionPool);\n\n    this._transactions = [];\n  }\n\n  _createClass(TransactionPool, [{\n    key: \"updateOrAddTransaction\",\n    value: function updateOrAddTransaction(transaction) {\n      var _this = this;\n\n      exception[\"try\"](function () {\n        //get existing trans if exists\n        var existing = _this.transactions.find(function (t) {\n          return t.id === transaction.id;\n        });\n\n        if (existing) {\n          logger.info(\"updating transaction \".concat(transaction.id, \": \").concat(transaction));\n          _this.transactions[_this.transactions.indexOf(existing)] = transaction;\n        } else {\n          logger.info(\"creating new transaction: \".concat(transaction));\n\n          _this.transactions.push(transaction);\n        }\n      });\n    }\n    /*Transaction*/\n\n  }, {\n    key: \"existingTransaction\",\n    value: function existingTransaction(address) {\n      var _this2 = this;\n\n      return exception[\"try\"](function () {\n        return _this2.transactions.find(function (t) {\n          return t.input.address === address;\n        });\n      });\n    }\n    /*Transaction[]*/\n\n  }, {\n    key: \"pendingTransactions\",\n    value: function pendingTransactions(address) {\n      var _this3 = this;\n\n      return exception[\"try\"](function () {\n        return _this3.transactions.filter(function (t) {\n          return t.input.address === address;\n        });\n      });\n    }\n    /**\n     * gets a list of valid transactions; ones whose total output is equal to input\n     * with valid signature\n     * @param {Blockchain} blockchain (optional) if specified, will check for duplicate transaction \n     * id in chain (transaction duplicate is not valid)\n     * @returns {Transaction[]}\n     */\n\n    /*Transaction[]*/\n\n  }, {\n    key: \"validTransactions\",\n    value: function validTransactions(blockchain) {\n      return this.transactions.filter(function (transaction) {\n        return exception[\"try\"](function () {\n          // calculate total of all outputs\n          var outputTotal = transaction.outputs ? transaction.outputs.reduce(function (total, output) {\n            return total + output.amount;\n          }, 0) : 0; //make sure the transaction hasn't already been added to the chain\n\n          if (blockchain && blockchain.containsTransaction(transaction.id)) {\n            logger.warn(\"transaction \".concat(transaction.id, \" already exists on the chain and should not be included\"));\n            return;\n          } //check that outputs == input\n\n\n          if (transaction.input.amount !== outputTotal) {\n            logger.warn(\"invalid transaction \".concat(transaction.id, \" from \").concat(transaction.input.address));\n            return;\n          } //check valid signature\n\n\n          if (!Transaction.verifyTransaction(transaction)) {\n            logger.warn(\"invalid signature for transaction \".concat(transaction.id, \" from \").concat(transaction.input.address));\n            return;\n          }\n\n          return transaction;\n        });\n      });\n    }\n    /**\n     * clears all transactions from pool\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._transactions = [];\n    }\n  }]);\n\n  return TransactionPool;\n}();\n\nmodule.exports = TransactionPool;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "TransactionPool.js"
      ],
      "names": [
        "LOG_TAG",
        "Transaction",
        "require",
        "ioc",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "TransactionPool",
        "_transactions",
        "length",
        "transaction",
        "existing",
        "transactions",
        "find",
        "t",
        "id",
        "info",
        "indexOf",
        "push",
        "address",
        "input",
        "filter",
        "blockchain",
        "outputTotal",
        "outputs",
        "reduce",
        "total",
        "output",
        "amount",
        "containsTransaction",
        "warn",
        "verifyTransaction",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAG,MAAhB;;AAEA,IAAMC,WAAW,GAAGC,OAAO,CAAC,eAAD,CAA3B;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,4BAAD,CAAnB;;AAEA,IAAME,MAAM,GAAGD,GAAG,CAACE,aAAJ,CAAkBC,YAAlB,CAA+BN,OAA/B,CAAf;AACA,IAAMO,SAAS,GAAGJ,GAAG,CAACK,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;;IAQMM,e;;;;;wBACiB;AAAE,aAAO,KAAKC,aAAZ;AAA4B;;;wBACnC;AAAE,aAAO,KAAKA,aAAL,CAAmBC,MAA1B;AAAmC;AAEnD;;;;;;AAGA,6BAAc;AAAA;;AACV,SAAKD,aAAL,GAAqB,EAArB;AACH;;;;2CAEsBE,W,EAAa;AAAA;;AAChCN,MAAAA,SAAS,OAAT,CAAc,YAAM;AAChB;AACA,YAAIO,QAAQ,GAAG,KAAI,CAACC,YAAL,CAAkBC,IAAlB,CAAuB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,EAAF,KAASL,WAAW,CAACK,EAAzB;AAAA,SAAxB,CAAf;;AAEA,YAAIJ,QAAJ,EAAc;AACVV,UAAAA,MAAM,CAACe,IAAP,gCAAoCN,WAAW,CAACK,EAAhD,eAAuDL,WAAvD;AACA,UAAA,KAAI,CAACE,YAAL,CAAkB,KAAI,CAACA,YAAL,CAAkBK,OAAlB,CAA0BN,QAA1B,CAAlB,IAAyDD,WAAzD;AACH,SAHD,MAIK;AACDT,UAAAA,MAAM,CAACe,IAAP,qCAAyCN,WAAzC;;AACA,UAAA,KAAI,CAACE,YAAL,CAAkBM,IAAlB,CAAuBR,WAAvB;AACH;AACJ,OAZD;AAaH;AAED;;;;wCAAoCS,O,EAAS;AAAA;;AACzC,aAAOf,SAAS,OAAT,CAAc,YAAM;AACvB,eAAO,MAAI,CAACQ,YAAL,CAAkBC,IAAlB,CAAuB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACM,KAAF,CAAQD,OAAR,KAAoBA,OAAxB;AAAA,SAAxB,CAAP;AACH,OAFM,CAAP;AAGH;AAED;;;;wCAAsCA,O,EAAS;AAAA;;AAC3C,aAAOf,SAAS,OAAT,CAAc,YAAM;AACvB,eAAO,MAAI,CAACQ,YAAL,CAAkBS,MAAlB,CAAyB,UAAAP,CAAC;AAAA,iBAAIA,CAAC,CAACM,KAAF,CAAQD,OAAR,KAAoBA,OAAxB;AAAA,SAA1B,CAAP;AACH,OAFM,CAAP;AAGH;AAED;;;;;;;;AAOA;;;;sCAAoCG,U,EAAY;AAC5C,aAAO,KAAKV,YAAL,CAAkBS,MAAlB,CAAyB,UAAAX,WAAW,EAAI;AAC3C,eAAON,SAAS,OAAT,CAAc,YAAM;AACvB;AACA,cAAMmB,WAAW,GAAGb,WAAW,CAACc,OAAZ,GAChBd,WAAW,CAACc,OAAZ,CAAoBC,MAApB,CAA2B,UAACC,KAAD,EAAQC,MAAR,EAAiB;AACxC,mBAAOD,KAAK,GAAGC,MAAM,CAACC,MAAtB;AACH,WAFD,EAEE,CAFF,CADgB,GAId,CAJN,CAFuB,CAQvB;;AACA,cAAIN,UAAU,IAAIA,UAAU,CAACO,mBAAX,CAA+BnB,WAAW,CAACK,EAA3C,CAAlB,EAAiE;AAC7Dd,YAAAA,MAAM,CAAC6B,IAAP,uBAA2BpB,WAAW,CAACK,EAAvC;AACA;AACH,WAZsB,CAcvB;;;AACA,cAAIL,WAAW,CAACU,KAAZ,CAAkBQ,MAAlB,KAA6BL,WAAjC,EAA+C;AAC3CtB,YAAAA,MAAM,CAAC6B,IAAP,+BAAmCpB,WAAW,CAACK,EAA/C,mBAA0DL,WAAW,CAACU,KAAZ,CAAkBD,OAA5E;AACA;AACH,WAlBsB,CAoBvB;;;AACA,cAAI,CAACrB,WAAW,CAACiC,iBAAZ,CAA8BrB,WAA9B,CAAL,EAAiD;AAC7CT,YAAAA,MAAM,CAAC6B,IAAP,6CAAiDpB,WAAW,CAACK,EAA7D,mBAAwEL,WAAW,CAACU,KAAZ,CAAkBD,OAA1F;AACA;AACH;;AAED,iBAAOT,WAAP;AACH,SA3BM,CAAP;AA4BH,OA7BM,CAAP;AA8BH;AAED;;;;;;4BAGQ;AACJ,WAAKF,aAAL,GAAqB,EAArB;AACH;;;;;;AAGLwB,MAAM,CAACC,OAAP,GAAiB1B,eAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'TXPL';\n\nconst Transaction = require('./Transaction');\nconst ioc = require('../../../util/iocContainer');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: TransactionPool\n * -------------------------\n * pool of transactions that have not yet been included in the blockchain\n * (but may be eligible to be mined)\n *\n * author: John R. Kosinski\n */\nclass TransactionPool {\n    get transactions() { return this._transactions; }\n    get txCount() { return this._transactions.length; }\n\n    /**\n     * constructor\n     */\n    constructor() {\n        this._transactions = [];\n    }\n\n    updateOrAddTransaction(transaction) {\n        exception.try(() => {\n            //get existing trans if exists\n            let existing = this.transactions.find(t => t.id === transaction.id);\n\n            if (existing) {\n                logger.info(`updating transaction ${transaction.id}: ${transaction}`);\n                this.transactions[this.transactions.indexOf(existing)] = transaction;\n            }\n            else {\n                logger.info(`creating new transaction: ${transaction}`);\n                this.transactions.push(transaction);\n            }\n        });\n    }\n\n    /*Transaction*/ existingTransaction(address) {\n        return exception.try(() => {\n            return this.transactions.find(t => t.input.address === address);\n        });\n    }\n    \n    /*Transaction[]*/ pendingTransactions(address) {\n        return exception.try(() => {\n            return this.transactions.filter(t => t.input.address === address);\n        });\n    }\n\n    /**\n     * gets a list of valid transactions; ones whose total output is equal to input\n     * with valid signature\n     * @param {Blockchain} blockchain (optional) if specified, will check for duplicate transaction \n     * id in chain (transaction duplicate is not valid)\n     * @returns {Transaction[]}\n     */\n    /*Transaction[]*/ validTransactions(blockchain) {\n        return this.transactions.filter(transaction => {\n            return exception.try(() => {\n                // calculate total of all outputs\n                const outputTotal = transaction.outputs ?\n                    transaction.outputs.reduce((total, output)=>{\n                        return total + output.amount;\n                    },0)\n                    : 0;\n                \n                //make sure the transaction hasn't already been added to the chain\n                if (blockchain && blockchain.containsTransaction(transaction.id)){\n                    logger.warn(`transaction ${transaction.id} already exists on the chain and should not be included`); \n                    return;\n                }\n\n                //check that outputs == input\n                if (transaction.input.amount !== outputTotal ) {\n                    logger.warn(`invalid transaction ${transaction.id} from ${transaction.input.address}`);\n                    return;\n                }\n\n                //check valid signature\n                if (!Transaction.verifyTransaction(transaction)) {\n                    logger.warn(`invalid signature for transaction ${transaction.id} from ${transaction.input.address}`);\n                    return;\n                }\n\n                return transaction;\n            });\n        });\n    }\n\n    /**\n     * clears all transactions from pool\n     */\n    clear() {\n        this._transactions = [];\n    }\n}\n\nmodule.exports = TransactionPool;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567749101029
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Wallet.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Wallet.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Wallet.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Wallet.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
        "sourceFileName": "Wallet.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'WAL';\n\nvar _require = require('../../../config'),\n    INITIAL_BALANCE = _require.INITIAL_BALANCE;\n\nvar cryptoUtil = require('../../../util/cryptoUtil');\n\nvar ioc = require('../../../util/iocContainer');\n\nvar Transaction = require('./Transaction');\n\nvar EventEmitter = require('events');\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: Wallet\n * ----------------\n * wallet class with public/private key pair and balance\n *\n * supports these events:\n * - update\n *\n * author: John R. Kosinski\n */\n\nvar Wallet =\n/*#__PURE__*/\nfunction () {\n  _createClass(Wallet, [{\n    key: \"balance\",\n    get: function get() {\n      return this._balance;\n    }\n  }, {\n    key: \"keyPair\",\n    get: function get() {\n      return this._keyPair;\n    }\n  }, {\n    key: \"publicKey\",\n    get: function get() {\n      return this._publicKey;\n    }\n    /**\n     * constructor\n     */\n\n  }]);\n\n  function Wallet() {\n    _classCallCheck(this, Wallet);\n\n    this._balance = INITIAL_BALANCE;\n    this._keyPair = cryptoUtil.generateKeyPair();\n    this._publicKey = this.keyPair.getPublic().encode('hex');\n    this._emitter = new EventEmitter();\n    logger.info(\"wallet created: public key is \".concat(this._publicKey.toString()));\n  }\n  /**\n   * signs the given data using the wallet's keypair\n   * @param {string} data\n   * @returns {string}\n   */\n\n  /*Signature*/\n\n\n  _createClass(Wallet, [{\n    key: \"sign\",\n    value: function sign(data) {\n      return this.keyPair.sign(data);\n    }\n    /**\n     * originates a transaction to send funds from this wallet to a specified \n     * wallet; creates the transaction, signs it, adds it to the tx pool, and \n     * returns it. \n     * @param {string} recipient public key of recipient wallet\n     * @param {float} amount amount to send\n     * @param {Blockchain} blockchain \n     * @param {TransactionPool} transactionPool \n     * @returns {Transaction}\n     */\n\n    /*Transaction*/\n\n  }, {\n    key: \"createTransaction\",\n    value: function createTransaction(recipient, amount, blockchain, transactionPool) {\n      var _this = this;\n\n      return exception[\"try\"](function () {\n        logger.info(\"creating transaction: send \".concat(amount, \" to \").concat(recipient)); //update balance\n\n        _this.updateBalance(blockchain); //disallow transactions to myself \n\n\n        if (recipient === _this.publicKey) {\n          logger.warn('cannot send a transaction to yourself!');\n          return;\n        } //disallow transaction if more than balance\n\n\n        if (amount > _this.balance) {\n          logger.warn(\"amount: \".concat(amount, \" exceeds the current balance: \").concat(_this.balance));\n          return;\n        } //get existing transaction\n\n\n        var transaction = transactionPool.existingTransaction(_this.publicKey);\n\n        if (transaction) {\n          //if existing transaction, we have to take its amount into account \n          //when calculating the balance \n          var combinedAmount = amount + transaction.outputs[0].amount;\n\n          if (combinedAmount > _this.balance) {\n            logger.warn(\"combined amount: \".concat(combinedAmount, \" exceeds the current balance: \").concat(_this.balance));\n            return;\n          }\n\n          transaction.update(_this, recipient, amount);\n        } else {\n          transaction = Transaction.newTransaction(_this, recipient, amount);\n          transactionPool.updateOrAddTransaction(transaction);\n        }\n\n        return transaction;\n      });\n    }\n    /**\n     * recalculates the wallet's balance according to the transactions in the given blockchain\n     * @returns {float} the calculated balance\n     * @param {Blockchain} blockchain\n     */\n\n    /*float*/\n\n  }, {\n    key: \"calculateBalance\",\n    value: function calculateBalance(blockchain) {\n      var _this2 = this;\n\n      return exception[\"try\"](function () {\n        //existing balance\n        var balance = INITIAL_BALANCE; // store all the transactions in blockchain, in temp array\n\n        var transactions = [];\n        blockchain.chain.forEach(function (block) {\n          return block.data.forEach(function (transaction) {\n            transactions.push(transaction);\n          });\n        }); //get all transactions sent from this wallet\n\n        var inputTransactions = transactions.filter(function (t) {\n          return t.input.address === _this2.publicKey;\n        });\n        var lastTransTime = 0;\n\n        if (inputTransactions.length > 0) {\n          //get latest transaction\n          var recentInputTrans = inputTransactions.reduce(function (prev, current) {\n            return prev.input.timestamp > current.input.timestamp ? prev : current;\n          }); //balance is output back to sender\n\n          balance = recentInputTrans.outputs.find(function (output) {\n            return output.address === _this2.publicKey;\n          }).amount; // save the timestamp of the latest transaction made by the wallet\n\n          lastTransTime = recentInputTrans.input.timestamp;\n        } // get the transactions that were addressed to this wallet ie somebody sent some moeny\n        // and add its ouputs.\n        // since we save the timestamp we would only add the outputs of the transactions received\n        // only after the latest transactions made by us\n\n\n        transactions.forEach(function (transaction) {\n          if (transaction.input.timestamp > lastTransTime) {\n            transaction.outputs.find(function (output) {\n              if (output.address === _this2.publicKey) {\n                balance += output.amount;\n              }\n            });\n          }\n        });\n        return balance;\n      });\n    }\n    /**\n     * recalculates the wallet's balance according to the transactions in the given blockchain\n     * and replaces the current balance with the calculated balance\n     * @param {Blockchain} blockchain\n     */\n\n  }, {\n    key: \"updateBalance\",\n    value: function updateBalance(blockchain) {\n      var _this3 = this;\n\n      exception[\"try\"](function () {\n        var newBalance = _this3.calculateBalance(blockchain);\n\n        if (newBalance !== _this3._balance) {\n          _this3._balance = _this3.calculateBalance(blockchain);\n\n          _this3._emitter.emit('update');\n        }\n      });\n    }\n    /**\n     * subscribe to an event\n     * @param {string} eventName\n     * @param {fn} callback\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(eventName, callback) {\n      if (eventName && callback) {\n        this._emitter.on(eventName, callback);\n      }\n    }\n    /**\n     * returns a string representation\n     */\n\n    /*string*/\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Wallet -\\n        publicKey: \".concat(this.publicKey.toString(), \",\\n        balance  : \").concat(this.balance);\n    }\n    /**\n     * returns a json representation\n     */\n\n    /*json*/\n\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      return {\n        publicKey: this.publicKey.toString(),\n        privateKey: this.keyPair.priv.toString(16, 2),\n        balance: this.balance\n      };\n    }\n    /**\n     * returns a json representation converted to string\n     */\n\n    /*string*/\n\n  }, {\n    key: \"toJsonString\",\n    value: function toJsonString() {\n      return JSON.stringify(this.toJson());\n    }\n    /**\n     * creates a new wallet to be used as the sender when awarding the mining reward\n     * @returns {Wallet}\n     */\n\n  }], [{\n    key: \"blockchainWallet\",\n    value: function blockchainWallet() {\n      var _this4 = this;\n\n      return exception[\"try\"](function () {\n        var blockchainWallet = new _this4();\n        blockchainWallet.address = 'blockchain-wallet';\n        return blockchainWallet;\n      });\n    }\n    /**\n     * deserializes a wallet instance from JSON data\n     * @returns {Wallet}\n     * @param {json} json\n     */\n\n  }, {\n    key: \"fromJson\",\n    value: function fromJson(json) {\n      var _this5 = this;\n\n      return exception[\"try\"](function () {\n        var output = new _this5();\n        output._balance = json.balance;\n        output._keyPair = cryptoUtil.deserializeKeyPair(json.publicKey, json.privateKey);\n        output._publicKey = output.keyPair.getPublic().encode('hex');\n        return output;\n      });\n    }\n  }]);\n\n  return Wallet;\n}();\n\nmodule.exports = Wallet;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Wallet.js"
      ],
      "names": [
        "LOG_TAG",
        "require",
        "INITIAL_BALANCE",
        "cryptoUtil",
        "ioc",
        "Transaction",
        "EventEmitter",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Wallet",
        "_balance",
        "_keyPair",
        "_publicKey",
        "generateKeyPair",
        "keyPair",
        "getPublic",
        "encode",
        "_emitter",
        "info",
        "toString",
        "data",
        "sign",
        "recipient",
        "amount",
        "blockchain",
        "transactionPool",
        "updateBalance",
        "publicKey",
        "warn",
        "balance",
        "transaction",
        "existingTransaction",
        "combinedAmount",
        "outputs",
        "update",
        "newTransaction",
        "updateOrAddTransaction",
        "transactions",
        "chain",
        "forEach",
        "block",
        "push",
        "inputTransactions",
        "filter",
        "t",
        "input",
        "address",
        "lastTransTime",
        "length",
        "recentInputTrans",
        "reduce",
        "prev",
        "current",
        "timestamp",
        "find",
        "output",
        "newBalance",
        "calculateBalance",
        "emit",
        "eventName",
        "callback",
        "on",
        "privateKey",
        "priv",
        "JSON",
        "stringify",
        "toJson",
        "blockchainWallet",
        "json",
        "deserializeKeyPair",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAG,KAAhB;;eAE4BC,OAAO,CAAC,iBAAD,C;IAA3BC,e,YAAAA,e;;AACR,IAAMC,UAAU,GAAGF,OAAO,CAAC,0BAAD,CAA1B;;AACA,IAAMG,GAAG,GAAGH,OAAO,CAAC,4BAAD,CAAnB;;AACA,IAAMI,WAAW,GAAGJ,OAAO,CAAC,eAAD,CAA3B;;AACA,IAAMK,YAAY,GAAGL,OAAO,CAAC,QAAD,CAA5B;;AAEA,IAAMM,MAAM,GAAGH,GAAG,CAACI,aAAJ,CAAkBC,YAAlB,CAA+BT,OAA/B,CAAf;AACA,IAAMU,SAAS,GAAGN,GAAG,CAACO,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;;;;IAUMM,M;;;;;wBACY;AAAE,aAAO,KAAKC,QAAZ;AAAuB;;;wBACzB;AAAE,aAAO,KAAKC,QAAZ;AAAuB;;;wBACvB;AAAE,aAAO,KAAKC,UAAZ;AAAyB;AAE3C;;;;;;AAGA,oBAAc;AAAA;;AACV,SAAKF,QAAL,GAAgBZ,eAAhB;AACA,SAAKa,QAAL,GAAgBZ,UAAU,CAACc,eAAX,EAAhB;AACA,SAAKD,UAAL,GAAkB,KAAKE,OAAL,CAAaC,SAAb,GAAyBC,MAAzB,CAAgC,KAAhC,CAAlB;AACA,SAAKC,QAAL,GAAgB,IAAIf,YAAJ,EAAhB;AAEAC,IAAAA,MAAM,CAACe,IAAP,yCAA6C,KAAKN,UAAL,CAAgBO,QAAhB,EAA7C;AACH;AAED;;;;;;AAKA;;;;;yBAAmBC,I,EAAM;AACrB,aAAO,KAAKN,OAAL,CAAaO,IAAb,CAAkBD,IAAlB,CAAP;AACH;AAED;;;;;;;;;;;AAUA;;;;sCAAkCE,S,EAAWC,M,EAAQC,U,EAAYC,e,EAAiB;AAAA;;AAC9E,aAAOnB,SAAS,OAAT,CAAc,YAAM;AACvBH,QAAAA,MAAM,CAACe,IAAP,sCAA0CK,MAA1C,iBAAuDD,SAAvD,GADuB,CAGvB;;AACA,QAAA,KAAI,CAACI,aAAL,CAAmBF,UAAnB,EAJuB,CAMvB;;;AACA,YAAIF,SAAS,KAAK,KAAI,CAACK,SAAvB,EAAkC;AAC9BxB,UAAAA,MAAM,CAACyB,IAAP,CAAY,wCAAZ;AACA;AACH,SAVsB,CAYvB;;;AACA,YAAIL,MAAM,GAAG,KAAI,CAACM,OAAlB,EAA2B;AACvB1B,UAAAA,MAAM,CAACyB,IAAP,mBAAuBL,MAAvB,2CAA8D,KAAI,CAACM,OAAnE;AACA;AACH,SAhBsB,CAkBvB;;;AACA,YAAIC,WAAW,GAAGL,eAAe,CAACM,mBAAhB,CAAoC,KAAI,CAACJ,SAAzC,CAAlB;;AAEA,YAAIG,WAAJ,EAAiB;AACb;AACA;AACA,cAAME,cAAc,GAAIT,MAAM,GAAGO,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuBV,MAAxD;;AACA,cAAIS,cAAc,GAAG,KAAI,CAACH,OAA1B,EAAmC;AAC/B1B,YAAAA,MAAM,CAACyB,IAAP,4BAAgCI,cAAhC,2CAA+E,KAAI,CAACH,OAApF;AACA;AACH;;AAEDC,UAAAA,WAAW,CAACI,MAAZ,CAAmB,KAAnB,EAAyBZ,SAAzB,EAAoCC,MAApC;AACH,SAVD,MAWK;AACDO,UAAAA,WAAW,GAAG7B,WAAW,CAACkC,cAAZ,CAA2B,KAA3B,EAAiCb,SAAjC,EAA4CC,MAA5C,CAAd;AACAE,UAAAA,eAAe,CAACW,sBAAhB,CAAuCN,WAAvC;AACH;;AAED,eAAOA,WAAP;AACH,OAtCM,CAAP;AAuCH;AAED;;;;;;AAKA;;;;qCAA2BN,U,EAAY;AAAA;;AACnC,aAAOlB,SAAS,OAAT,CAAc,YAAM;AAEvB;AACA,YAAIuB,OAAO,GAAG/B,eAAd,CAHuB,CAKvB;;AACA,YAAIuC,YAAY,GAAG,EAAnB;AACAb,QAAAA,UAAU,CAACc,KAAX,CAAiBC,OAAjB,CAAyB,UAAAC,KAAK;AAAA,iBAAIA,KAAK,CAACpB,IAAN,CAAWmB,OAAX,CAAmB,UAAAT,WAAW,EAAI;AAChEO,YAAAA,YAAY,CAACI,IAAb,CAAkBX,WAAlB;AACH,WAFiC,CAAJ;AAAA,SAA9B,EAPuB,CAWvB;;AACA,YAAMY,iBAAiB,GAAGL,YAAY,CAACM,MAAb,CACtB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,KAAF,CAAQC,OAAR,KAAoB,MAAI,CAACnB,SAA7B;AAAA,SADqB,CAA1B;AAIA,YAAIoB,aAAa,GAAG,CAApB;;AAEA,YAAIL,iBAAiB,CAACM,MAAlB,GAA2B,CAA/B,EAAkC;AAE9B;AACA,cAAMC,gBAAgB,GAAGP,iBAAiB,CAACQ,MAAlB,CACrB,UAACC,IAAD,EAAMC,OAAN;AAAA,mBAAiBD,IAAI,CAACN,KAAL,CAAWQ,SAAX,GAAuBD,OAAO,CAACP,KAAR,CAAcQ,SAArC,GAAiDF,IAAjD,GAAwDC,OAAzE;AAAA,WADqB,CAAzB,CAH8B,CAO9B;;AACAvB,UAAAA,OAAO,GAAGoB,gBAAgB,CAAChB,OAAjB,CAAyBqB,IAAzB,CAA8B,UAAAC,MAAM;AAAA,mBAAIA,MAAM,CAACT,OAAP,KAAmB,MAAI,CAACnB,SAA5B;AAAA,WAApC,EAA2EJ,MAArF,CAR8B,CAU9B;;AACAwB,UAAAA,aAAa,GAAGE,gBAAgB,CAACJ,KAAjB,CAAuBQ,SAAvC;AACH,SA9BsB,CAgCvB;AACA;AACA;AACA;;;AACAhB,QAAAA,YAAY,CAACE,OAAb,CAAqB,UAAAT,WAAW,EAAI;AAChC,cAAIA,WAAW,CAACe,KAAZ,CAAkBQ,SAAlB,GAA8BN,aAAlC,EAAiD;AAC7CjB,YAAAA,WAAW,CAACG,OAAZ,CAAoBqB,IAApB,CAAyB,UAAAC,MAAM,EAAI;AAC/B,kBAAIA,MAAM,CAACT,OAAP,KAAmB,MAAI,CAACnB,SAA5B,EAAuC;AACnCE,gBAAAA,OAAO,IAAI0B,MAAM,CAAChC,MAAlB;AACH;AACJ,aAJD;AAKH;AACJ,SARD;AAUA,eAAOM,OAAP;AACH,OA/CM,CAAP;AAgDH;AAED;;;;;;;;kCAKcL,U,EAAY;AAAA;;AACtBlB,MAAAA,SAAS,OAAT,CAAc,YAAM;AAChB,YAAMkD,UAAU,GAAG,MAAI,CAACC,gBAAL,CAAsBjC,UAAtB,CAAnB;;AACA,YAAIgC,UAAU,KAAK,MAAI,CAAC9C,QAAxB,EAAkC;AAC9B,UAAA,MAAI,CAACA,QAAL,GAAgB,MAAI,CAAC+C,gBAAL,CAAsBjC,UAAtB,CAAhB;;AACA,UAAA,MAAI,CAACP,QAAL,CAAcyC,IAAd,CAAmB,QAAnB;AACH;AACJ,OAND;AAOH;AAED;;;;;;;;uBAKGC,S,EAAWC,Q,EAAU;AACpB,UAAID,SAAS,IAAIC,QAAjB,EAA2B;AACvB,aAAK3C,QAAL,CAAc4C,EAAd,CAAiBF,SAAjB,EAA4BC,QAA5B;AACH;AACJ;AAED;;;;AAGA;;;;+BAAsB;AAClB,oDACa,KAAKjC,SAAL,CAAeR,QAAf,EADb,mCAEa,KAAKU,OAFlB;AAGH;AAED;;;;AAGA;;;;6BAAkB;AACd,aAAO;AACHF,QAAAA,SAAS,EAAE,KAAKA,SAAL,CAAeR,QAAf,EADR;AAEH2C,QAAAA,UAAU,EAAE,KAAKhD,OAAL,CAAaiD,IAAb,CAAkB5C,QAAlB,CAA2B,EAA3B,EAA8B,CAA9B,CAFT;AAGHU,QAAAA,OAAO,EAAE,KAAKA;AAHX,OAAP;AAKH;AAED;;;;AAGA;;;;mCAA0B;AACtB,aAAOmC,IAAI,CAACC,SAAL,CAAe,KAAKC,MAAL,EAAf,CAAP;AACH;AAED;;;;;;;uCAIqC;AAAA;;AACjC,aAAO5D,SAAS,OAAT,CAAc,YAAM;AACvB,YAAM6D,gBAAgB,GAAG,IAAI,MAAJ,EAAzB;AACAA,QAAAA,gBAAgB,CAACrB,OAAjB,GAA2B,mBAA3B;AACA,eAAOqB,gBAAP;AACH,OAJM,CAAP;AAKH;AAED;;;;;;;;6BAK2BC,I,EAAM;AAAA;;AAC7B,aAAO9D,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMiD,MAAM,GAAG,IAAI,MAAJ,EAAf;AAEAA,QAAAA,MAAM,CAAC7C,QAAP,GAAkB0D,IAAI,CAACvC,OAAvB;AACA0B,QAAAA,MAAM,CAAC5C,QAAP,GAAkBZ,UAAU,CAACsE,kBAAX,CAA8BD,IAAI,CAACzC,SAAnC,EAA8CyC,IAAI,CAACN,UAAnD,CAAlB;AACAP,QAAAA,MAAM,CAAC3C,UAAP,GAAoB2C,MAAM,CAACzC,OAAP,CAAeC,SAAf,GAA2BC,MAA3B,CAAkC,KAAlC,CAApB;AAEA,eAAOuC,MAAP;AACH,OARM,CAAP;AASH;;;;;;AAGLe,MAAM,CAACC,OAAP,GAAiB9D,MAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'WAL';\n\nconst { INITIAL_BALANCE } = require('../../../config');\nconst cryptoUtil = require('../../../util/cryptoUtil');\nconst ioc = require('../../../util/iocContainer');\nconst Transaction = require('./Transaction');\nconst EventEmitter = require('events');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: Wallet\n * ----------------\n * wallet class with public/private key pair and balance\n *\n * supports these events:\n * - update\n *\n * author: John R. Kosinski\n */\nclass Wallet {\n    get balance() { return this._balance; }\n    get keyPair() { return this._keyPair; }\n    get publicKey() { return this._publicKey; }\n\n    /**\n     * constructor\n     */\n    constructor() {\n        this._balance = INITIAL_BALANCE;\n        this._keyPair = cryptoUtil.generateKeyPair();\n        this._publicKey = this.keyPair.getPublic().encode('hex');\n        this._emitter = new EventEmitter();\n\n        logger.info(`wallet created: public key is ${this._publicKey.toString()}`);\n    }\n\n    /**\n     * signs the given data using the wallet's keypair\n     * @param {string} data\n     * @returns {string}\n     */\n    /*Signature*/ sign(data) {\n        return this.keyPair.sign(data);\n    }\n\n    /**\n     * originates a transaction to send funds from this wallet to a specified \n     * wallet; creates the transaction, signs it, adds it to the tx pool, and \n     * returns it. \n     * @param {string} recipient public key of recipient wallet\n     * @param {float} amount amount to send\n     * @param {Blockchain} blockchain \n     * @param {TransactionPool} transactionPool \n     * @returns {Transaction}\n     */\n    /*Transaction*/ createTransaction(recipient, amount, blockchain, transactionPool) {\n        return exception.try(() => {\n            logger.info(`creating transaction: send ${amount} to ${recipient}`);\n\n            //update balance\n            this.updateBalance(blockchain);\n            \n            //disallow transactions to myself \n            if (recipient === this.publicKey) {\n                logger.warn('cannot send a transaction to yourself!'); \n                return; \n            }\n\n            //disallow transaction if more than balance\n            if (amount > this.balance) {\n                logger.warn(`amount: ${amount} exceeds the current balance: ${this.balance}`);\n                return;\n            }\n\n            //get existing transaction\n            let transaction = transactionPool.existingTransaction(this.publicKey);\n\n            if (transaction) {\n                //if existing transaction, we have to take its amount into account \n                //when calculating the balance \n                const combinedAmount = (amount + transaction.outputs[0].amount);\n                if (combinedAmount > this.balance) {\n                    logger.warn(`combined amount: ${combinedAmount} exceeds the current balance: ${this.balance}`);\n                    return;\n                }\n                \n                transaction.update(this, recipient, amount);\n            }\n            else {\n                transaction = Transaction.newTransaction(this, recipient, amount);\n                transactionPool.updateOrAddTransaction(transaction);\n            }\n\n            return transaction;\n        });\n    }\n\n    /**\n     * recalculates the wallet's balance according to the transactions in the given blockchain\n     * @returns {float} the calculated balance\n     * @param {Blockchain} blockchain\n     */\n    /*float*/ calculateBalance(blockchain) {\n        return exception.try(() => {\n\n            //existing balance\n            let balance = INITIAL_BALANCE;\n\n            // store all the transactions in blockchain, in temp array\n            let transactions = [];\n            blockchain.chain.forEach(block => block.data.forEach(transaction => {\n                transactions.push(transaction);\n            }));\n\n            //get all transactions sent from this wallet\n            const inputTransactions = transactions.filter(\n                t => t.input.address === this.publicKey\n            );\n\n            let lastTransTime = 0;\n\n            if (inputTransactions.length > 0) {\n\n                //get latest transaction\n                const recentInputTrans = inputTransactions.reduce(\n                    (prev,current)=> prev.input.timestamp > current.input.timestamp ? prev : current\n                );\n\n                //balance is output back to sender\n                balance = recentInputTrans.outputs.find(output => output.address === this.publicKey).amount;\n\n                // save the timestamp of the latest transaction made by the wallet\n                lastTransTime = recentInputTrans.input.timestamp;\n            }\n\n            // get the transactions that were addressed to this wallet ie somebody sent some moeny\n            // and add its ouputs.\n            // since we save the timestamp we would only add the outputs of the transactions received\n            // only after the latest transactions made by us\n            transactions.forEach(transaction => {\n                if (transaction.input.timestamp > lastTransTime) {\n                    transaction.outputs.find(output => {\n                        if (output.address === this.publicKey) {\n                            balance += output.amount;\n                        }\n                    })\n                }\n            });\n\n            return balance;\n        });\n    }\n\n    /**\n     * recalculates the wallet's balance according to the transactions in the given blockchain\n     * and replaces the current balance with the calculated balance\n     * @param {Blockchain} blockchain\n     */\n    updateBalance(blockchain) {\n        exception.try(() => {\n            const newBalance = this.calculateBalance(blockchain);\n            if (newBalance !== this._balance) {\n                this._balance = this.calculateBalance(blockchain);\n                this._emitter.emit('update');\n            }\n        });\n    }\n\n    /**\n     * subscribe to an event\n     * @param {string} eventName\n     * @param {fn} callback\n     */\n    on(eventName, callback) {\n        if (eventName && callback) {\n            this._emitter.on(eventName, callback);\n        }\n    }\n\n    /**\n     * returns a string representation\n     */\n    /*string*/ toString() {\n        return `Wallet -\n        publicKey: ${this.publicKey.toString()},\n        balance  : ${this.balance}`;\n    }\n\n    /**\n     * returns a json representation\n     */\n    /*json*/ toJson() {\n        return {\n            publicKey: this.publicKey.toString(),\n            privateKey: this.keyPair.priv.toString(16,2),\n            balance: this.balance\n        };\n    }\n\n    /**\n     * returns a json representation converted to string\n     */\n    /*string*/ toJsonString() {\n        return JSON.stringify(this.toJson());\n    }\n\n    /**\n     * creates a new wallet to be used as the sender when awarding the mining reward\n     * @returns {Wallet}\n     */\n    static /*Wallet*/ blockchainWallet() {\n        return exception.try(() => {\n            const blockchainWallet = new this();\n            blockchainWallet.address = 'blockchain-wallet';\n            return blockchainWallet;\n        });\n    }\n\n    /**\n     * deserializes a wallet instance from JSON data\n     * @returns {Wallet}\n     * @param {json} json\n     */\n    static /*Wallet*/ fromJson(json) {\n        return exception.try(() => {\n            const output = new this();\n\n            output._balance = json.balance;\n            output._keyPair = cryptoUtil.deserializeKeyPair(json.publicKey, json.privateKey);\n            output._publicKey = output.keyPair.getPublic().encode('hex');\n\n            return output;\n        });\n    }\n}\n\nmodule.exports = Wallet;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567745375588
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar Block = require('./classes/Block');\n\nvar Blockchain = require('./classes/Blockchain');\n\nmodule.exports = {\n  Block: Block,\n  Blockchain: Blockchain\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkJsb2NrIiwicmVxdWlyZSIsIkJsb2NrY2hhaW4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxpQkFBRCxDQUFyQjs7QUFDQSxJQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQyxzQkFBRCxDQUExQjs7QUFFQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JKLEVBQUFBLEtBQUssRUFBTEEsS0FEYTtBQUViRSxFQUFBQSxVQUFVLEVBQVZBO0FBRmEsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21pbmFjb2luL21pbmFjb2luLXNlcnZlci9zcmMvbGliL2Jsb2NrY2hhaW4iLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IEJsb2NrID0gcmVxdWlyZSgnLi9jbGFzc2VzL0Jsb2NrJyk7XG5jb25zdCBCbG9ja2NoYWluID0gcmVxdWlyZSgnLi9jbGFzc2VzL0Jsb2NrY2hhaW4nKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgQmxvY2ssXG4gICAgQmxvY2tjaGFpblxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Block",
        "require",
        "Blockchain",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,iBAAD,CAArB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,sBAAD,CAA1B;;AAEAE,MAAM,CAACC,OAAP,GAAiB;AACbJ,EAAAA,KAAK,EAALA,KADa;AAEbE,EAAAA,UAAU,EAAVA;AAFa,CAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain",
      "sourcesContent": [
        "'use strict';\n\nconst Block = require('./classes/Block');\nconst Blockchain = require('./classes/Blockchain');\n\nmodule.exports = {\n    Block,\n    Blockchain\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1567354951998
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Block.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Block.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Block.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Block.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes",
        "sourceFileName": "Block.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'BLK';\n\nvar cryptoUtil = require('../../../util/cryptoUtil');\n\nvar _require = require('../../../config.js'),\n    DIFFICULTY = _require.DIFFICULTY,\n    MINE_RATE = _require.MINE_RATE;\n\nvar ioc = require('../../../util/iocContainer');\n\nvar _require2 = require('../../wallet'),\n    Transaction = _require2.Transaction;\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: Block\n * ---------------\n * implementation of a Blockchain block. \n *\n * author: John R. Kosinski\n */\n\nvar Block =\n/*#__PURE__*/\nfunction () {\n  _createClass(Block, [{\n    key: \"timestamp\",\n    get: function get() {\n      return this._timestamp;\n    }\n  }, {\n    key: \"lastHash\",\n    get: function get() {\n      return this._lastHash;\n    }\n  }, {\n    key: \"hash\",\n    get: function get() {\n      return this._hash;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._data;\n    }\n  }, {\n    key: \"nonce\",\n    get: function get() {\n      return this._nonce;\n    }\n  }, {\n    key: \"difficulty\",\n    get: function get() {\n      return this._difficulty;\n    }\n  }]);\n\n  function Block(timestamp, lastHash, hash, data, nonce, difficulty) {\n    _classCallCheck(this, Block);\n\n    this._timestamp = timestamp;\n    this._lastHash = lastHash;\n    this._hash = hash;\n    this._data = data;\n    this._nonce = nonce;\n    this._difficulty = difficulty || DIFFICULTY;\n    logger.info('block created: ' + this.toJsonString());\n  }\n\n  _createClass(Block, [{\n    key: \"toString\",\n\n    /**\n     * returns a string representation\n     */\n    value: function toString() {\n      var _this = this;\n\n      return exception[\"try\"](function () {\n        return \"Block -\\n            Timestamp : \".concat(_this.timestamp, \"\\n            Last Hash : \").concat(_this.lastHash.substring(0, 10), \"\\n            Hash      : \").concat(_this.hash.substring(0, 10), \"\\n            Data      : \").concat(_this.data, \"\\n            Difficulty: \").concat(_this.difficulty);\n      });\n    }\n    /**\n     * returns a json representation\n     */\n\n    /*json*/\n\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      var output = {\n        timestamp: this.timestamp,\n        lastHash: this.lastHash,\n        hash: this.hash,\n        difficulty: this.difficulty,\n        nonce: this.nonce,\n        data: []\n      };\n\n      if (this.data && this.data.length) {\n        this.data.forEach(function (t) {\n          if (t.toJson) output.data.push(t.toJson());\n        });\n      }\n\n      return output;\n    }\n    /**\n     * returns a json representation converted to string\n     */\n\n    /*string*/\n\n  }, {\n    key: \"toJsonString\",\n    value: function toJsonString() {\n      return JSON.stringify(this.toJson());\n    }\n    /**\n     * deserializes a Block instance from JSON data\n     * @returns {Block}\n     * @param {json} json\n     */\n\n  }, {\n    key: \"data\",\n    set: function set(d) {\n      this._data = d;\n    }\n    /**\n     * creates the special genesis block\n     * @returns {Block}\n     */\n\n  }], [{\n    key: \"genesis\",\n    value: function genesis() {\n      var _this2 = this;\n\n      return exception[\"try\"](function () {\n        return new _this2('Genesis time', '----', 'f1574-h4gh', [], 0, DIFFICULTY);\n      });\n    }\n    /**\n     * creates & returns a hash of the given data\n     * \n     * @param {int} timestamp block timestamp\n     * @param {string} lastHash hash of intended parent block\n     * @param {Transaction[]} data the data to include in the block\n     * @param {int} nonce created during mining\n     * @param {int} difficulty block mining difficulty\n     * @returns {string}\n     */\n\n  }, {\n    key: \"hash\",\n    value: function hash(timestamp, lastHash, data, nonce, difficulty) {\n      return exception[\"try\"](function () {\n        return cryptoUtil.hash({\n          timestamp: timestamp,\n          lastHash: lastHash,\n          data: Transaction.arrayToJson(data),\n          nonce: nonce,\n          difficulty: difficulty\n        });\n      });\n    }\n    /**\n     * mines a new block to be added to the chain, and returns it (without adding it to\n     * the blockchain)\n     *\n     * @param {Block} lastBlock the parent block (should be most recent block in chain)\n     * @param {Transaction[]} data transactions to be included in the block\n     */\n\n  }, {\n    key: \"mineBlock\",\n    value: function mineBlock(lastBlock, data) {\n      var _this3 = this;\n\n      return exception[\"try\"](function () {\n        var hash;\n        var timestamp = Date.now();\n        var lastHash = lastBlock.hash;\n        var difficulty = lastBlock.difficulty;\n        var nonce = 0;\n\n        do {\n          nonce++;\n          timestamp = Date.now();\n          difficulty = Block.adjustDifficulty(lastBlock, timestamp);\n          hash = Block.hash(timestamp, lastHash, data, nonce, difficulty);\n        } while (hash.substring(0, difficulty) !== '0'.repeat(difficulty));\n\n        logger.info(\"block \".concat(hash, \" mined\"));\n        return new _this3(timestamp, lastHash, hash, data, nonce, difficulty);\n      });\n    }\n    /**\n     * creates & returns a hash of the given block's essential data\n     * @returns string\n     * @param {Block} block\n     */\n\n  }, {\n    key: \"blockHash\",\n    value: function blockHash(block) {\n      return exception[\"try\"](function () {\n        //destructuring\n        var timestamp = block.timestamp,\n            lastHash = block.lastHash,\n            data = block.data,\n            nonce = block.nonce,\n            difficulty = block.difficulty;\n        return Block.hash(timestamp, lastHash, data, nonce, difficulty);\n      });\n    }\n  }, {\n    key: \"adjustDifficulty\",\n    value: function adjustDifficulty(lastBlock, currentTime) {\n      return exception[\"try\"](function () {\n        var difficulty = lastBlock.difficulty;\n        difficulty = lastBlock.timestamp + MINE_RATE > currentTime ? difficulty + 1 : difficulty - 1;\n        return difficulty;\n      });\n    }\n  }, {\n    key: \"fromJson\",\n    value: function fromJson(json) {\n      var _this4 = this;\n\n      return exception[\"try\"](function () {\n        var output = new _this4(json.timestamp, json.lastHash, json.hash, [], json.nonce, json.difficulty);\n\n        if (json.data) {\n          json.data.forEach(function (t) {\n            output.data.push(Transaction.fromJson(t));\n          });\n        }\n\n        return output;\n      });\n    }\n  }]);\n\n  return Block;\n}();\n\nmodule.exports = Block;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Block.js"
      ],
      "names": [
        "LOG_TAG",
        "cryptoUtil",
        "require",
        "DIFFICULTY",
        "MINE_RATE",
        "ioc",
        "Transaction",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Block",
        "_timestamp",
        "_lastHash",
        "_hash",
        "_data",
        "_nonce",
        "_difficulty",
        "timestamp",
        "lastHash",
        "hash",
        "data",
        "nonce",
        "difficulty",
        "info",
        "toJsonString",
        "substring",
        "output",
        "length",
        "forEach",
        "t",
        "toJson",
        "push",
        "JSON",
        "stringify",
        "d",
        "arrayToJson",
        "lastBlock",
        "Date",
        "now",
        "adjustDifficulty",
        "repeat",
        "block",
        "currentTime",
        "json",
        "fromJson",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAG,KAAhB;;AAEA,IAAMC,UAAU,GAAGC,OAAO,CAAC,0BAAD,CAA1B;;eACiCA,OAAO,CAAC,oBAAD,C;IAAhCC,U,YAAAA,U;IAAWC,S,YAAAA,S;;AACnB,IAAMC,GAAG,GAAGH,OAAO,CAAC,4BAAD,CAAnB;;gBACwBA,OAAO,CAAC,cAAD,C;IAAvBI,W,aAAAA,W;;AAER,IAAMC,MAAM,GAAGF,GAAG,CAACG,aAAJ,CAAkBC,YAAlB,CAA+BT,OAA/B,CAAf;AACA,IAAMU,SAAS,GAAGL,GAAG,CAACM,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;IAOMM,K;;;;;wBACc;AAAE,aAAO,KAAKC,UAAZ;AAAyB;;;wBAC5B;AAAE,aAAO,KAAKC,SAAZ;AAAwB;;;wBAC9B;AAAE,aAAO,KAAKC,KAAZ;AAAoB;;;wBACtB;AAAE,aAAO,KAAKC,KAAZ;AAAoB;;;wBACrB;AAAE,aAAO,KAAKC,MAAZ;AAAqB;;;wBAClB;AAAE,aAAO,KAAKC,WAAZ;AAA0B;;;AAE7C,iBAAYC,SAAZ,EAAuBC,QAAvB,EAAiCC,IAAjC,EAAuCC,IAAvC,EAA6CC,KAA7C,EAAoDC,UAApD,EAA+D;AAAA;;AAC3D,SAAKX,UAAL,GAAkBM,SAAlB;AACA,SAAKL,SAAL,GAAiBM,QAAjB;AACA,SAAKL,KAAL,GAAaM,IAAb;AACA,SAAKL,KAAL,GAAaM,IAAb;AACA,SAAKL,MAAL,GAAcM,KAAd;AACA,SAAKL,WAAL,GAAmBM,UAAU,IAAItB,UAAjC;AAEAI,IAAAA,MAAM,CAACmB,IAAP,CAAY,oBAAoB,KAAKC,YAAL,EAAhC;AACH;;;;;AAoFD;;;+BAGW;AAAA;;AACP,aAAOjB,SAAS,OAAT,CAAc,YAAM;AACvB,0DACc,KAAI,CAACU,SADnB,uCAEc,KAAI,CAACC,QAAL,CAAcO,SAAd,CAAwB,CAAxB,EAA0B,EAA1B,CAFd,uCAGc,KAAI,CAACN,IAAL,CAAUM,SAAV,CAAoB,CAApB,EAAsB,EAAtB,CAHd,uCAIc,KAAI,CAACL,IAJnB,uCAKc,KAAI,CAACE,UALnB;AAMH,OAPM,CAAP;AAQH;AAED;;;;AAGA;;;;6BAAkB;AACd,UAAMI,MAAM,GAAG;AACXT,QAAAA,SAAS,EAAE,KAAKA,SADL;AAEXC,QAAAA,QAAQ,EAAE,KAAKA,QAFJ;AAGXC,QAAAA,IAAI,EAAE,KAAKA,IAHA;AAIXG,QAAAA,UAAU,EAAE,KAAKA,UAJN;AAKXD,QAAAA,KAAK,EAAE,KAAKA,KALD;AAMXD,QAAAA,IAAI,EAAE;AANK,OAAf;;AAWA,UAAI,KAAKA,IAAL,IAAa,KAAKA,IAAL,CAAUO,MAA3B,EAAmC;AAC/B,aAAKP,IAAL,CAAUQ,OAAV,CAAkB,UAAAC,CAAC,EAAI;AACnB,cAAIA,CAAC,CAACC,MAAN,EACIJ,MAAM,CAACN,IAAP,CAAYW,IAAZ,CAAiBF,CAAC,CAACC,MAAF,EAAjB;AACP,SAHD;AAIH;;AAED,aAAOJ,MAAP;AACH;AAED;;;;AAGA;;;;mCAA0B;AACtB,aAAOM,IAAI,CAACC,SAAL,CAAe,KAAKH,MAAL,EAAf,CAAP;AACH;AAED;;;;;;;;sBAhISI,C,EAAG;AAAE,WAAKpB,KAAL,GAAaoB,CAAb;AAAiB;AAE/B;;;;;;;8BAI2B;AAAA;;AACvB,aAAO3B,SAAS,OAAT,CAAc,YAAM;AACvB,eAAO,IAAI,MAAJ,CAAS,cAAT,EAAwB,MAAxB,EAA+B,YAA/B,EAA4C,EAA5C,EAA+C,CAA/C,EAAiDP,UAAjD,CAAP;AACH,OAFM,CAAP;AAGH;AAED;;;;;;;;;;;;;yBAUuBiB,S,EAAWC,Q,EAAUE,I,EAAMC,K,EAAOC,U,EAAW;AAChE,aAAOf,SAAS,OAAT,CAAc,YAAM;AACvB,eAAOT,UAAU,CAACqB,IAAX,CAAgB;AACnBF,UAAAA,SAAS,EAATA,SADmB;AAEnBC,UAAAA,QAAQ,EAARA,QAFmB;AAGnBE,UAAAA,IAAI,EAAEjB,WAAW,CAACgC,WAAZ,CAAwBf,IAAxB,CAHa;AAInBC,UAAAA,KAAK,EAALA,KAJmB;AAKnBC,UAAAA,UAAU,EAAVA;AALmB,SAAhB,CAAP;AAOH,OARM,CAAP;AASH;AAED;;;;;;;;;;8BAO2Bc,S,EAAWhB,I,EAAK;AAAA;;AACvC,aAAOb,SAAS,OAAT,CAAc,YAAM;AACvB,YAAIY,IAAJ;AACA,YAAIF,SAAS,GAAGoB,IAAI,CAACC,GAAL,EAAhB;AACA,YAAMpB,QAAQ,GAAGkB,SAAS,CAACjB,IAA3B;AAHuB,YAIjBG,UAJiB,GAIFc,SAJE,CAIjBd,UAJiB;AAKvB,YAAID,KAAK,GAAG,CAAZ;;AAEA,WAAG;AACCA,UAAAA,KAAK;AACLJ,UAAAA,SAAS,GAAGoB,IAAI,CAACC,GAAL,EAAZ;AACAhB,UAAAA,UAAU,GAAGZ,KAAK,CAAC6B,gBAAN,CAAuBH,SAAvB,EAAkCnB,SAAlC,CAAb;AACAE,UAAAA,IAAI,GAAGT,KAAK,CAACS,IAAN,CAAWF,SAAX,EAAsBC,QAAtB,EAAgCE,IAAhC,EAAsCC,KAAtC,EAA6CC,UAA7C,CAAP;AACH,SALD,QAKQH,IAAI,CAACM,SAAL,CAAe,CAAf,EAAiBH,UAAjB,MAAiC,IAAIkB,MAAJ,CAAWlB,UAAX,CALzC;;AAOAlB,QAAAA,MAAM,CAACmB,IAAP,iBAAqBJ,IAArB;AACA,eAAO,IAAI,MAAJ,CAASF,SAAT,EAAoBC,QAApB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,KAA1C,EAAiDC,UAAjD,CAAP;AACH,OAhBM,CAAP;AAiBH;AAED;;;;;;;;8BAK4BmB,K,EAAM;AAC9B,aAAOlC,SAAS,OAAT,CAAc,YAAM;AACvB;AADuB,YAEfU,SAFe,GAEkCwB,KAFlC,CAEfxB,SAFe;AAAA,YAEJC,QAFI,GAEkCuB,KAFlC,CAEJvB,QAFI;AAAA,YAEME,IAFN,GAEkCqB,KAFlC,CAEMrB,IAFN;AAAA,YAEYC,KAFZ,GAEkCoB,KAFlC,CAEYpB,KAFZ;AAAA,YAEmBC,UAFnB,GAEkCmB,KAFlC,CAEmBnB,UAFnB;AAGvB,eAAOZ,KAAK,CAACS,IAAN,CAAWF,SAAX,EAAsBC,QAAtB,EAAgCE,IAAhC,EAAsCC,KAAtC,EAA6CC,UAA7C,CAAP;AACH,OAJM,CAAP;AAKH;;;qCAE+Bc,S,EAAWM,W,EAAY;AACnD,aAAOnC,SAAS,OAAT,CAAc,YAAM;AAAA,YACjBe,UADiB,GACFc,SADE,CACjBd,UADiB;AAEvBA,QAAAA,UAAU,GAAGc,SAAS,CAACnB,SAAV,GAAsBhB,SAAtB,GAAkCyC,WAAlC,GAAgDpB,UAAU,GAAG,CAA7D,GAAiEA,UAAU,GAAG,CAA3F;AACA,eAAOA,UAAP;AACH,OAJM,CAAP;AAKH;;;6BAqDyBqB,I,EAAM;AAAA;;AAC5B,aAAOpC,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMmB,MAAM,GAAG,IAAI,MAAJ,CAASiB,IAAI,CAAC1B,SAAd,EAAyB0B,IAAI,CAACzB,QAA9B,EAAwCyB,IAAI,CAACxB,IAA7C,EAAmD,EAAnD,EAAuDwB,IAAI,CAACtB,KAA5D,EAAmEsB,IAAI,CAACrB,UAAxE,CAAf;;AAEA,YAAIqB,IAAI,CAACvB,IAAT,EAAe;AACXuB,UAAAA,IAAI,CAACvB,IAAL,CAAUQ,OAAV,CAAkB,UAAAC,CAAC,EAAI;AACnBH,YAAAA,MAAM,CAACN,IAAP,CAAYW,IAAZ,CAAiB5B,WAAW,CAACyC,QAAZ,CAAqBf,CAArB,CAAjB;AACH,WAFD;AAGH;;AAED,eAAOH,MAAP;AACH,OAVM,CAAP;AAWH;;;;;;AAILmB,MAAM,CAACC,OAAP,GAAiBpC,KAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'BLK';\n\nconst cryptoUtil = require('../../../util/cryptoUtil');\nconst { DIFFICULTY,MINE_RATE } = require('../../../config.js');\nconst ioc = require('../../../util/iocContainer');\nconst { Transaction } = require('../../wallet');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: Block\n * ---------------\n * implementation of a Blockchain block. \n *\n * author: John R. Kosinski\n */\nclass Block{\n    get timestamp() { return this._timestamp; }\n    get lastHash() { return this._lastHash; }\n    get hash() { return this._hash; }\n    get data() { return this._data; }\n    get nonce() { return this._nonce; }\n    get difficulty() { return this._difficulty; }\n\n    constructor(timestamp, lastHash, hash, data, nonce, difficulty){\n        this._timestamp = timestamp;\n        this._lastHash = lastHash;\n        this._hash = hash;\n        this._data = data;\n        this._nonce = nonce;\n        this._difficulty = difficulty || DIFFICULTY;\n\n        logger.info('block created: ' + this.toJsonString());\n    }\n\n    set data(d) { this._data = d; }\n\n    /**\n     * creates the special genesis block\n     * @returns {Block}\n     */\n    static /*Block*/ genesis() {\n        return exception.try(() => {\n            return new this('Genesis time','----','f1574-h4gh',[],0,DIFFICULTY);\n        });\n    }\n\n    /**\n     * creates & returns a hash of the given data\n     * \n     * @param {int} timestamp block timestamp\n     * @param {string} lastHash hash of intended parent block\n     * @param {Transaction[]} data the data to include in the block\n     * @param {int} nonce created during mining\n     * @param {int} difficulty block mining difficulty\n     * @returns {string}\n     */\n    static /*string*/ hash(timestamp, lastHash, data, nonce, difficulty){\n        return exception.try(() => {\n            return cryptoUtil.hash({\n                timestamp, \n                lastHash, \n                data: Transaction.arrayToJson(data), \n                nonce, \n                difficulty\n            });\n        });\n    }\n\n    /**\n     * mines a new block to be added to the chain, and returns it (without adding it to\n     * the blockchain)\n     *\n     * @param {Block} lastBlock the parent block (should be most recent block in chain)\n     * @param {Transaction[]} data transactions to be included in the block\n     */\n    static /*Block*/ mineBlock(lastBlock, data){\n        return exception.try(() => {\n            let hash;\n            let timestamp = Date.now();\n            const lastHash = lastBlock.hash;\n            let { difficulty } = lastBlock;\n            let nonce = 0;  \n\n            do {\n                nonce++;\n                timestamp = Date.now();\n                difficulty = Block.adjustDifficulty(lastBlock, timestamp);\n                hash = Block.hash(timestamp, lastHash, data, nonce, difficulty);\n            } while(hash.substring(0,difficulty) !== '0'.repeat(difficulty));\n\n            logger.info(`block ${hash} mined`);\n            return new this(timestamp, lastHash, hash, data, nonce, difficulty);\n        });\n    }\n\n    /**\n     * creates & returns a hash of the given block's essential data\n     * @returns string\n     * @param {Block} block\n     */\n    static /*string*/ blockHash(block){\n        return exception.try(() => {\n            //destructuring\n            const { timestamp, lastHash, data, nonce, difficulty } = block;\n            return Block.hash(timestamp, lastHash, data, nonce, difficulty);\n        });\n    }\n\n    static /*int*/ adjustDifficulty(lastBlock, currentTime){\n        return exception.try(() => {\n            let { difficulty } = lastBlock;\n            difficulty = lastBlock.timestamp + MINE_RATE > currentTime ? difficulty + 1 : difficulty - 1;\n            return difficulty;\n        });\n    }\n\n    /**\n     * returns a string representation\n     */\n    toString() {\n        return exception.try(() => {\n            return `Block -\n            Timestamp : ${this.timestamp}\n            Last Hash : ${this.lastHash.substring(0,10)}\n            Hash      : ${this.hash.substring(0,10)}\n            Data      : ${this.data}\n            Difficulty: ${this.difficulty}`;\n        });\n    }\n\n    /**\n     * returns a json representation\n     */\n    /*json*/ toJson() {\n        const output = {\n            timestamp: this.timestamp,\n            lastHash: this.lastHash,\n            hash: this.hash,\n            difficulty: this.difficulty,\n            nonce: this.nonce,\n            data: [\n\n            ]\n        };\n\n        if (this.data && this.data.length) {\n            this.data.forEach(t => {\n                if (t.toJson) \n                    output.data.push(t.toJson());\n            });\n        }\n\n        return output;\n    }\n\n    /**\n     * returns a json representation converted to string\n     */\n    /*string*/ toJsonString() {\n        return JSON.stringify(this.toJson());\n    }\n\n    /**\n     * deserializes a Block instance from JSON data\n     * @returns {Block}\n     * @param {json} json\n     */\n    static /*Block*/ fromJson(json) {\n        return exception.try(() => {\n            const output = new this(json.timestamp, json.lastHash, json.hash, [], json.nonce, json.difficulty);\n\n            if (json.data) {\n                json.data.forEach(t => {\n                    output.data.push(Transaction.fromJson(t));\n                });\n            }\n\n            return output;\n        });\n    }\n}\n\n\nmodule.exports = Block;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567748078467
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Blockchain.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Blockchain.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Blockchain.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Blockchain.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes",
        "sourceFileName": "Blockchain.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'BLKCH';\n\nvar Block = require('./Block');\n\nvar ioc = require('../../../util/iocContainer');\n\nvar EventEmitter = require('events');\n\nvar R = require('ramda');\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: Blockchain\n * --------------------\n * container for all blocks. supports these events: \n * - update\n * - replace \n *\n * author: John R. Kosinski\n */\n\nvar Blockchain =\n/*#__PURE__*/\nfunction () {\n  _createClass(Blockchain, [{\n    key: \"chain\",\n    get: function get() {\n      return this._chain;\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this._chain.length;\n    }\n    /**\n     * constructor \n     */\n\n  }]);\n\n  function Blockchain() {\n    _classCallCheck(this, Blockchain);\n\n    this._emitter = new EventEmitter();\n    this._chain = [Block.genesis()];\n    this._emitter = new EventEmitter();\n  }\n  /**\n   * returns a list of all transactions, in all blocks, sorted first by block number \n   * and then by timestamp. \n   */\n\n  /*Transaction*/\n\n\n  _createClass(Blockchain, [{\n    key: \"allTransactions\",\n    value: function allTransactions() {\n      return extractTransactionsFromBlocks(this.chain);\n    }\n    /**\n     * searches the blockchain to see if a transaction with the same id exists.\n     * @param {string} id id of the transaction in question\n     * @returns {bool} true if a transaction with the same id exists\n     */\n\n    /*bool*/\n\n  }, {\n    key: \"containsTransaction\",\n    value: function containsTransaction(id) {\n      return this.findTransaction(id);\n    }\n    /**\n     * the opposite of containsTransaction(id). this one will return the block index \n     * (1-based) of the block that contains the specified transaction.  \n     * @param {string} id \n     * @returns {int} the 1-based block index of the found transaction \n     * (return value of 0 indicates transaction is not found)\n     */\n\n    /*int*/\n\n  }, {\n    key: \"findTransaction\",\n    value: function findTransaction(id) {\n      var _this = this;\n\n      return exception[\"try\"](function () {\n        var allTransactions = _this.allTransactions().reverse();\n\n        for (var n = 0; n < allTransactions.length; n++) {\n          var t = allTransactions[n];\n\n          if (id === t.id) {\n            return n + 1;\n          }\n        }\n\n        return 0;\n      });\n    }\n    /**\n     * mines a new block, includes the given transactions, and appends it to the chain. \n     * @param {Transaction[]} data transactions to add to the new block\n     * @returns {Block}\n     */\n\n    /*Block*/\n\n  }, {\n    key: \"addBlock\",\n    value: function addBlock(data) {\n      var _this2 = this;\n\n      return exception[\"try\"](function () {\n        var block = Block.mineBlock(_this2.chain[_this2.chain.length - 1], data); //check here to make sure that duplicate transactions don't exist\n\n        if (data) {\n          for (var t in data) {\n            if (_this2.containsTransaction(t.id)) {\n              //reject block\n              logger.warn(\"block is being rejected, because transaction \".concat(t.id, \" is a duplicate\"));\n              return null;\n            }\n          }\n\n          ;\n        }\n\n        _this2.chain.push(block);\n\n        logger.info(\"block \".concat(block.hash, \" added to chain. new chain height: \").concat(_this2.height));\n\n        _this2._emitter.emit('update');\n\n        return block;\n      });\n    }\n    /**\n     * validates each block in the chain. \n     * @param {Blockchain} chain \n     * @returns {bool} false if chain is invalid \n     */\n\n    /*bool*/\n\n  }, {\n    key: \"isValidChain\",\n    value: function isValidChain(chain) {\n      return exception[\"try\"](function () {\n        if (JSON.stringify(chain[0]) !== JSON.stringify(Block.genesis())) {\n          logger.warn('invalid chain: invalid genesis block');\n          return false;\n        } //if the last block has a transaction that exists elsewhere in the chain, then \n        // the chain is invalid \n\n\n        if (chain.length > 1) {\n          //get all transactions from ALL BUT LAST block\n          var allTrans = extractTransactionsFromBlocks(R.init(chain)); //examine all transactions in last block for duplicity\n\n          var lastBlock = chain[chain.length - 1];\n\n          for (var i = 0; i < lastBlock.data.length; i++) {\n            var t = lastBlock.data[i];\n\n            if (R.find(R.propEq('id', t.id))(allTrans)) {\n              logger.warn(\"invalid chain: transaction \".concat(t.id, \" is duplicated\"));\n              return false;\n            }\n          }\n        } //if the chain has any invalid blocks, then the chain is invalid\n        //TODO: redo with ramda\n\n\n        for (var _i = 1; _i < chain.length; _i++) {\n          var block = chain[_i];\n          var _lastBlock = chain[_i - 1];\n\n          if (block.lastHash !== _lastBlock.hash || block.hash !== Block.blockHash(block)) {\n            logger.warn(\"invalid chain: invalid block \".concat(block.hash));\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n    /**\n     * replace the entire existing chain with the given one \n     * @param {BlockChain} newChain \n     */\n\n  }, {\n    key: \"replaceChain\",\n    value: function replaceChain(newChain) {\n      var _this3 = this;\n\n      exception[\"try\"](function () {\n        if (newChain.length <= _this3._chain.length) {\n          logger.info(\"received chain is not longer than the current chain\");\n          return;\n        } else if (!_this3.isValidChain(newChain)) {\n          logger.info(\"received chain is invalid\");\n          return;\n        }\n\n        logger.info(\"replacing the current chain with new chain\");\n        _this3._chain = newChain;\n\n        _this3._emitter.emit('update');\n      });\n    }\n    /**\n     * subscribe to an event \n     * @param {string} eventName \n     * @param {fn} callback \n     */\n\n  }, {\n    key: \"on\",\n    value: function on(eventName, callback) {\n      if (eventName && callback) {\n        this._emitter.on(eventName, callback);\n      }\n    }\n    /**\n     * returns a json representation\n     */\n\n    /*json*/\n\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      var output = {\n        chain: []\n      };\n\n      this._chain.forEach(function (b) {\n        output.chain.push(b.toJson());\n      });\n\n      return output;\n    }\n    /**\n     * deserializes a Blockchain instance from JSON data\n     * @returns {Blockchain}\n     * @param {json} json\n     */\n\n  }], [{\n    key: \"fromJson\",\n    value: function fromJson(json) {\n      var _this4 = this;\n\n      return exception[\"try\"](function () {\n        var output = new _this4();\n        output._chain = [];\n\n        if (json && json.chain && json.chain.length) {\n          json.chain.forEach(function (b) {\n            output._chain.push(Block.fromJson(b));\n          });\n        }\n\n        return output;\n      });\n    }\n  }]);\n\n  return Blockchain;\n}();\n\nfunction extractTransactionsFromBlocks(blocks) {\n  return exception[\"try\"](function () {\n    var output = [];\n    blocks.forEach(function (block) {\n      output.push.apply(output, _toConsumableArray(block.data.sort(function (a, b) {\n        return a.input.timestamp < b.input.timestamp;\n      })));\n    });\n    return output;\n  });\n}\n\nmodule.exports = Blockchain;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Blockchain.js"
      ],
      "names": [
        "LOG_TAG",
        "Block",
        "require",
        "ioc",
        "EventEmitter",
        "R",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Blockchain",
        "_chain",
        "length",
        "_emitter",
        "genesis",
        "extractTransactionsFromBlocks",
        "chain",
        "id",
        "findTransaction",
        "allTransactions",
        "reverse",
        "n",
        "t",
        "data",
        "block",
        "mineBlock",
        "containsTransaction",
        "warn",
        "push",
        "info",
        "hash",
        "height",
        "emit",
        "JSON",
        "stringify",
        "allTrans",
        "init",
        "lastBlock",
        "i",
        "find",
        "propEq",
        "lastHash",
        "blockHash",
        "newChain",
        "isValidChain",
        "eventName",
        "callback",
        "on",
        "output",
        "forEach",
        "b",
        "toJson",
        "json",
        "fromJson",
        "blocks",
        "sort",
        "a",
        "input",
        "timestamp",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,OAAhB;;AAEA,IAAMC,KAAK,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,4BAAD,CAAnB;;AACA,IAAME,YAAY,GAAGF,OAAO,CAAC,QAAD,CAA5B;;AACA,IAAMG,CAAC,GAAGH,OAAO,CAAC,OAAD,CAAjB;;AAEA,IAAMI,MAAM,GAAGH,GAAG,CAACI,aAAJ,CAAkBC,YAAlB,CAA+BR,OAA/B,CAAf;AACA,IAAMS,SAAS,GAAGN,GAAG,CAACO,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;;;IASMM,U;;;;;wBACU;AAAE,aAAO,KAAKC,MAAZ;AAAqB;;;wBACtB;AAAE,aAAO,KAAKA,MAAL,CAAYC,MAAnB;AAA4B;AAE3C;;;;;;AAGA,wBAAa;AAAA;;AACT,SAAKC,QAAL,GAAgB,IAAIX,YAAJ,EAAhB;AACA,SAAKS,MAAL,GAAc,CAACZ,KAAK,CAACe,OAAN,EAAD,CAAd;AACA,SAAKD,QAAL,GAAgB,IAAIX,YAAJ,EAAhB;AACH;AAED;;;;;AAIA;;;;;sCAAkC;AAC9B,aAAOa,6BAA6B,CAAC,KAAKC,KAAN,CAApC;AACH;AAED;;;;;;AAKA;;;;wCAA6BC,E,EAAI;AAC7B,aAAO,KAAKC,eAAL,CAAqBD,EAArB,CAAP;AACH;AAED;;;;;;;;AAOA;;;;oCAAwBA,E,EAAI;AAAA;;AACxB,aAAOV,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMY,eAAe,GAAG,KAAI,CAACA,eAAL,GAAuBC,OAAvB,EAAxB;;AACA,aAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACF,eAAe,CAACP,MAAhC,EAAwCS,CAAC,EAAzC,EAA6C;AACzC,cAAMC,CAAC,GAAGH,eAAe,CAACE,CAAD,CAAzB;;AACA,cAAIJ,EAAE,KAAKK,CAAC,CAACL,EAAb,EAAiB;AACb,mBAAQI,CAAC,GAAC,CAAV;AACH;AACJ;;AAED,eAAO,CAAP;AACH,OAVM,CAAP;AAWH;AAED;;;;;;AAKA;;;;6BAAmBE,I,EAAK;AAAA;;AACpB,aAAOhB,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMiB,KAAK,GAAGzB,KAAK,CAAC0B,SAAN,CAAgB,MAAI,CAACT,KAAL,CAAW,MAAI,CAACA,KAAL,CAAWJ,MAAX,GAAkB,CAA7B,CAAhB,EAAiDW,IAAjD,CAAd,CADuB,CAGvB;;AACA,YAAIA,IAAJ,EAAU;AACN,eAAK,IAAID,CAAT,IAAcC,IAAd,EAAoB;AAChB,gBAAI,MAAI,CAACG,mBAAL,CAAyBJ,CAAC,CAACL,EAA3B,CAAJ,EAAoC;AAChC;AACAb,cAAAA,MAAM,CAACuB,IAAP,wDAA4DL,CAAC,CAACL,EAA9D;AACA,qBAAO,IAAP;AACH;AACJ;;AAAA;AACJ;;AAED,QAAA,MAAI,CAACD,KAAL,CAAWY,IAAX,CAAgBJ,KAAhB;;AACApB,QAAAA,MAAM,CAACyB,IAAP,iBAAqBL,KAAK,CAACM,IAA3B,gDAAqE,MAAI,CAACC,MAA1E;;AAEA,QAAA,MAAI,CAAClB,QAAL,CAAcmB,IAAd,CAAmB,QAAnB;;AACA,eAAOR,KAAP;AACH,OAnBM,CAAP;AAoBH;AAED;;;;;;AAKA;;;;iCAAsBR,K,EAAO;AACzB,aAAOT,SAAS,OAAT,CAAc,YAAM;AACvB,YAAI0B,IAAI,CAACC,SAAL,CAAelB,KAAK,CAAC,CAAD,CAApB,MAA6BiB,IAAI,CAACC,SAAL,CAAenC,KAAK,CAACe,OAAN,EAAf,CAAjC,EAAkE;AAC9DV,UAAAA,MAAM,CAACuB,IAAP,CAAY,sCAAZ;AACA,iBAAO,KAAP;AACH,SAJsB,CAMvB;AACA;;;AACA,YAAIX,KAAK,CAACJ,MAAN,GAAe,CAAnB,EAAsB;AAClB;AACA,cAAMuB,QAAQ,GAAGpB,6BAA6B,CAACZ,CAAC,CAACiC,IAAF,CAAOpB,KAAP,CAAD,CAA9C,CAFkB,CAIlB;;AACA,cAAMqB,SAAS,GAAGrB,KAAK,CAACA,KAAK,CAACJ,MAAN,GAAa,CAAd,CAAvB;;AACA,eAAI,IAAI0B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACD,SAAS,CAACd,IAAV,CAAeX,MAA9B,EAAsC0B,CAAC,EAAvC,EAA2C;AACvC,gBAAMhB,CAAC,GAAGe,SAAS,CAACd,IAAV,CAAee,CAAf,CAAV;;AACA,gBAAInC,CAAC,CAACoC,IAAF,CAAOpC,CAAC,CAACqC,MAAF,CAAS,IAAT,EAAelB,CAAC,CAACL,EAAjB,CAAP,EAA6BkB,QAA7B,CAAJ,EAA4C;AACxC/B,cAAAA,MAAM,CAACuB,IAAP,sCAA0CL,CAAC,CAACL,EAA5C;AACA,qBAAO,KAAP;AACH;AACJ;AACJ,SArBsB,CAuBvB;AACA;;;AACA,aAAK,IAAIqB,EAAC,GAAC,CAAX,EAAcA,EAAC,GAACtB,KAAK,CAACJ,MAAtB,EAA8B0B,EAAC,EAA/B,EAAmC;AAC/B,cAAMd,KAAK,GAAGR,KAAK,CAACsB,EAAD,CAAnB;AACA,cAAMD,UAAS,GAAGrB,KAAK,CAACsB,EAAC,GAAC,CAAH,CAAvB;;AAEA,cAAKd,KAAK,CAACiB,QAAN,KAAmBJ,UAAS,CAACP,IAA9B,IAAwCN,KAAK,CAACM,IAAN,KAAe/B,KAAK,CAAC2C,SAAN,CAAgBlB,KAAhB,CAA3D,EAAoF;AAChFpB,YAAAA,MAAM,CAACuB,IAAP,wCAA4CH,KAAK,CAACM,IAAlD;AACA,mBAAO,KAAP;AACH;AACJ;;AAED,eAAO,IAAP;AACH,OApCM,CAAP;AAqCH;AAED;;;;;;;iCAIaa,Q,EAAS;AAAA;;AAClBpC,MAAAA,SAAS,OAAT,CAAc,YAAM;AAChB,YAAIoC,QAAQ,CAAC/B,MAAT,IAAmB,MAAI,CAACD,MAAL,CAAYC,MAAnC,EAA0C;AACtCR,UAAAA,MAAM,CAACyB,IAAP,CAAY,qDAAZ;AACA;AACH,SAHD,MAIK,IAAI,CAAC,MAAI,CAACe,YAAL,CAAkBD,QAAlB,CAAL,EAAiC;AAClCvC,UAAAA,MAAM,CAACyB,IAAP,CAAY,2BAAZ;AACA;AACH;;AAEDzB,QAAAA,MAAM,CAACyB,IAAP,CAAY,4CAAZ;AACA,QAAA,MAAI,CAAClB,MAAL,GAAcgC,QAAd;;AAEA,QAAA,MAAI,CAAC9B,QAAL,CAAcmB,IAAd,CAAmB,QAAnB;AACH,OAdD;AAeH;AAED;;;;;;;;uBAKGa,S,EAAWC,Q,EAAU;AACpB,UAAID,SAAS,IAAIC,QAAjB,EAA2B;AACvB,aAAKjC,QAAL,CAAckC,EAAd,CAAiBF,SAAjB,EAA4BC,QAA5B;AACH;AACJ;AAED;;;;AAGA;;;;6BAAkB;AACd,UAAME,MAAM,GAAG;AACXhC,QAAAA,KAAK,EAAE;AADI,OAAf;;AAIA,WAAKL,MAAL,CAAYsC,OAAZ,CAAoB,UAAAC,CAAC,EAAI;AACrBF,QAAAA,MAAM,CAAChC,KAAP,CAAaY,IAAb,CAAkBsB,CAAC,CAACC,MAAF,EAAlB;AACH,OAFD;;AAIA,aAAOH,MAAP;AACH;AAED;;;;;;;;6BAK+BI,I,EAAM;AAAA;;AACjC,aAAO7C,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMyC,MAAM,GAAG,IAAI,MAAJ,EAAf;AAEAA,QAAAA,MAAM,CAACrC,MAAP,GAAgB,EAAhB;;AACA,YAAIyC,IAAI,IAAIA,IAAI,CAACpC,KAAb,IAAsBoC,IAAI,CAACpC,KAAL,CAAWJ,MAArC,EAA6C;AACzCwC,UAAAA,IAAI,CAACpC,KAAL,CAAWiC,OAAX,CAAmB,UAAAC,CAAC,EAAI;AACpBF,YAAAA,MAAM,CAACrC,MAAP,CAAciB,IAAd,CAAmB7B,KAAK,CAACsD,QAAN,CAAeH,CAAf,CAAnB;AACH,WAFD;AAGH;;AAED,eAAOF,MAAP;AACH,OAXM,CAAP;AAYH;;;;;;AAIL,SAASjC,6BAAT,CAAuCuC,MAAvC,EAA+C;AAC3C,SAAO/C,SAAS,OAAT,CAAc,YAAM;AACvB,QAAMyC,MAAM,GAAG,EAAf;AACAM,IAAAA,MAAM,CAACL,OAAP,CAAe,UAAAzB,KAAK,EAAI;AACpBwB,MAAAA,MAAM,CAACpB,IAAP,OAAAoB,MAAM,qBAASxB,KAAK,CAACD,IAAN,CAAWgC,IAAX,CAAgB,UAACC,CAAD,EAAGN,CAAH;AAAA,eAAUM,CAAC,CAACC,KAAF,CAAQC,SAAR,GAAoBR,CAAC,CAACO,KAAF,CAAQC,SAAtC;AAAA,OAAhB,CAAT,EAAN;AACH,KAFD;AAIA,WAAOV,MAAP;AACH,GAPM,CAAP;AAQH;;AAEDW,MAAM,CAACC,OAAP,GAAiBlD,UAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'BLKCH';\n\nconst Block = require('./Block');\nconst ioc = require('../../../util/iocContainer');\nconst EventEmitter = require('events');\nconst R = require('ramda');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: Blockchain\n * --------------------\n * container for all blocks. supports these events: \n * - update\n * - replace \n *\n * author: John R. Kosinski\n */\nclass Blockchain{\n    get chain() { return this._chain; }\n    get height() { return this._chain.length; }\n\n    /**\n     * constructor \n     */\n    constructor(){\n        this._emitter = new EventEmitter();\n        this._chain = [Block.genesis()];\n        this._emitter = new EventEmitter();\n    }\n    \n    /**\n     * returns a list of all transactions, in all blocks, sorted first by block number \n     * and then by timestamp. \n     */\n    /*Transaction*/ allTransactions() {\n        return extractTransactionsFromBlocks(this.chain);\n    }\n    \n    /**\n     * searches the blockchain to see if a transaction with the same id exists.\n     * @param {string} id id of the transaction in question\n     * @returns {bool} true if a transaction with the same id exists\n     */\n    /*bool*/ containsTransaction(id) {\n        return this.findTransaction(id);\n    }\n    \n    /**\n     * the opposite of containsTransaction(id). this one will return the block index \n     * (1-based) of the block that contains the specified transaction.  \n     * @param {string} id \n     * @returns {int} the 1-based block index of the found transaction \n     * (return value of 0 indicates transaction is not found)\n     */\n    /*int*/ findTransaction(id) {\n        return exception.try(() => {\n            const allTransactions = this.allTransactions().reverse(); \n            for (let n=0; n<allTransactions.length; n++) {\n                const t = allTransactions[n];\n                if (id === t.id) {\n                    return (n+1);\n                }\n            }\n            \n            return 0;\n        });\n    }\n\n    /**\n     * mines a new block, includes the given transactions, and appends it to the chain. \n     * @param {Transaction[]} data transactions to add to the new block\n     * @returns {Block}\n     */\n    /*Block*/ addBlock(data){\n        return exception.try(() => {\n            const block = Block.mineBlock(this.chain[this.chain.length-1], data);\n            \n            //check here to make sure that duplicate transactions don't exist\n            if (data) {\n                for (let t in data) {\n                    if (this.containsTransaction(t.id)) {\n                        //reject block\n                        logger.warn(`block is being rejected, because transaction ${t.id} is a duplicate`);\n                        return null;\n                    } \n                };\n            }\n            \n            this.chain.push(block);\n            logger.info(`block ${block.hash} added to chain. new chain height: ${this.height}`);\n\n            this._emitter.emit('update');\n            return block;\n        });\n    }\n\n    /**\n     * validates each block in the chain. \n     * @param {Blockchain} chain \n     * @returns {bool} false if chain is invalid \n     */\n    /*bool*/ isValidChain(chain) {\n        return exception.try(() => {\n            if (JSON.stringify(chain[0]) !== JSON.stringify(Block.genesis())) {\n                logger.warn('invalid chain: invalid genesis block');\n                return false;\n            }\n            \n            //if the last block has a transaction that exists elsewhere in the chain, then \n            // the chain is invalid \n            if (chain.length > 1) {\n                //get all transactions from ALL BUT LAST block\n                const allTrans = extractTransactionsFromBlocks(R.init(chain)); \n                \n                //examine all transactions in last block for duplicity\n                const lastBlock = chain[chain.length-1]; \n                for(let i=0; i<lastBlock.data.length; i++) {\n                    const t = lastBlock.data[i]; \n                    if (R.find(R.propEq('id', t.id))(allTrans)) {\n                        logger.warn(`invalid chain: transaction ${t.id} is duplicated`);\n                        return false;\n                    }\n                }\n            }\n\n            //if the chain has any invalid blocks, then the chain is invalid\n            //TODO: redo with ramda\n            for (let i=1; i<chain.length; i++) {\n                const block = chain[i];\n                const lastBlock = chain[i-1];\n    \n                if ((block.lastHash !== lastBlock.hash) || (block.hash !== Block.blockHash(block))) {\n                    logger.warn(`invalid chain: invalid block ${block.hash}`);\n                    return false;\n                }\n            }\n\n            return true;\n        });\n    }\n\n    /**\n     * replace the entire existing chain with the given one \n     * @param {BlockChain} newChain \n     */\n    replaceChain(newChain){\n        exception.try(() => {\n            if (newChain.length <= this._chain.length){\n                logger.info(\"received chain is not longer than the current chain\");\n                return;\n            }\n            else if (!this.isValidChain(newChain)){\n                logger.info(\"received chain is invalid\");\n                return;\n            }\n\n            logger.info(\"replacing the current chain with new chain\");\n            this._chain = newChain;\n\n            this._emitter.emit('update');\n        });\n    }\n\n    /**\n     * subscribe to an event \n     * @param {string} eventName \n     * @param {fn} callback \n     */\n    on(eventName, callback) {\n        if (eventName && callback) {\n            this._emitter.on(eventName, callback);\n        }\n    }\n\n    /**\n     * returns a json representation\n     */\n    /*json*/ toJson() {\n        const output = {\n            chain: []\n        };\n\n        this._chain.forEach(b => {\n            output.chain.push(b.toJson());\n        });\n\n        return output;\n    }\n\n    /**\n     * deserializes a Blockchain instance from JSON data\n     * @returns {Blockchain}\n     * @param {json} json\n     */\n    static /*Blockchain*/ fromJson(json) {\n        return exception.try(() => {\n            const output = new this();\n\n            output._chain = [];\n            if (json && json.chain && json.chain.length) {\n                json.chain.forEach(b => {\n                    output._chain.push(Block.fromJson(b));\n                });\n            }\n\n            return output;\n        });\n    }\n}\n\n\nfunction extractTransactionsFromBlocks(blocks) {    \n    return exception.try(() => {\n        const output = [];\n        blocks.forEach(block => {\n            output.push(...block.data.sort((a,b) => (a.input.timestamp < b.input.timestamp))); \n        });\n        \n        return output; \n    });\n}\n\nmodule.exports = Blockchain;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567745364234
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/httpServer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/httpServer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/httpServer.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/httpServer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
        "sourceFileName": "httpServer.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'HTTP';\n\nvar ioc = require('./util/iocContainer');\n\nvar cors = require('cors');\n\nvar express = require('express');\n\nvar config = require('./config');\n\nvar _require = require('./util/jsonUtil'),\n    convertJson = _require.convertJson;\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\nvar running = false;\n/**\n * minacoin: HttpServer\n * --------------------\n * encapsulates the main components of the server-side interface, such as the \n * web server and the p2p server. \n *\n * author: John R. Kosinski\n */\n\nvar HttpServer =\n/*#__PURE__*/\nfunction () {\n  /**\n   * constructor\n   * @param {Blockchain} blockchain\n   * @param {Wallet} wallet\n   * @param {IP2PServer} p2pServer\n   * @param {TransactionPool} txPool\n   * @param {Miner} miner\n   */\n  function HttpServer(blockchain, wallet, p2pServer, txPool, miner) {\n    _classCallCheck(this, HttpServer);\n\n    this.blockchain = blockchain;\n    this.wallet = wallet;\n    this.p2pServer = p2pServer;\n    this.txPool = txPool;\n    this.miner = miner;\n  }\n  /**\n   * starts the server running\n   */\n\n\n  _createClass(HttpServer, [{\n    key: \"start\",\n    value: function start() {\n      var _this = this;\n\n      exception[\"try\"](function () {\n        if (!running) {\n          logger.info('starting p2p server...');\n\n          _this.p2pServer.listen();\n\n          var app = express();\n          var port = config.HTTP_PORT;\n          app.use(express.json());\n          app.use(cors({\n            origin: 'http://localhost:3000'\n          }));\n          app.get('/transactions', function (req, res) {\n            exception[\"try\"](function () {\n              logger.info('GET /transactions');\n              res.json(convertJson(_this.txPool.transactions));\n            });\n          });\n          app.get('/public', function (req, res) {\n            exception[\"try\"](function () {\n              logger.info('GET /public');\n\n              _this.wallet.updateBalance(_this.blockchain);\n\n              res.json({\n                address: _this.wallet.publicKey,\n                balance: _this.wallet.balance,\n                chainSize: _this.blockchain.height,\n                peers: _this.p2pServer.peerList(),\n                transactionPool: {\n                  count: _this.txPool.txCount,\n                  pending: _this.txPool.pendingTransactions(_this.wallet.publicKey)\n                }\n              });\n            });\n          });\n          app.get('/blocks', function (req, res) {\n            exception[\"try\"](function () {\n              logger.info('GET /blocks');\n              res.json(_this.blockchain.toJson());\n            });\n          }); //pass in: recipient, amount\n\n          app.post('/transact', function (req, res) {\n            exception[\"try\"](function () {\n              logger.info('POST /transact');\n              var _req$body = req.body,\n                  recipient = _req$body.recipient,\n                  amount = _req$body.amount;\n\n              var transaction = _this.wallet.createTransaction(recipient, amount, _this.blockchain, _this.txPool);\n\n              _this.p2pServer.broadcastTransaction(transaction);\n\n              res.redirect('/transactions');\n            });\n          });\n          app.post('/mine-transactions', function (req, res) {\n            exception[\"try\"](function () {\n              logger.info('POST /mine-transactions');\n\n              var block = _this.miner.mine();\n\n              logger.info(\"new block added: \".concat(block.toJsonString()));\n              res.redirect('/blocks');\n            });\n          });\n          logger.info('starting web server...');\n          app.listen(port, function () {\n            logger.info(\"app running on port \".concat(port));\n          });\n          running = true;\n        }\n      });\n    }\n  }]);\n\n  return HttpServer;\n}();\n\nmodule.exports = {\n  HttpServer: HttpServer\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "httpServer.js"
      ],
      "names": [
        "LOG_TAG",
        "ioc",
        "require",
        "cors",
        "express",
        "config",
        "convertJson",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "running",
        "HttpServer",
        "blockchain",
        "wallet",
        "p2pServer",
        "txPool",
        "miner",
        "info",
        "listen",
        "app",
        "port",
        "HTTP_PORT",
        "use",
        "json",
        "origin",
        "get",
        "req",
        "res",
        "transactions",
        "updateBalance",
        "address",
        "publicKey",
        "balance",
        "chainSize",
        "height",
        "peers",
        "peerList",
        "transactionPool",
        "count",
        "txCount",
        "pending",
        "pendingTransactions",
        "toJson",
        "post",
        "body",
        "recipient",
        "amount",
        "transaction",
        "createTransaction",
        "broadcastTransaction",
        "redirect",
        "block",
        "mine",
        "toJsonString",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAG,MAAhB;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAnB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,UAAD,CAAtB;;eACwBA,OAAO,CAAC,iBAAD,C;IAAvBI,W,YAAAA,W;;AAER,IAAMC,MAAM,GAAGN,GAAG,CAACO,aAAJ,CAAkBC,YAAlB,CAA+BT,OAA/B,CAAf;AACA,IAAMU,SAAS,GAAGT,GAAG,CAACU,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA,IAAIM,OAAO,GAAG,KAAd;AAEA;;;;;;;;;IAQMC,U;;;AACF;;;;;;;;AAQA,sBAAYC,UAAZ,EAAwBC,MAAxB,EAAgCC,SAAhC,EAA2CC,MAA3C,EAAmDC,KAAnD,EAA0D;AAAA;;AACtD,SAAKJ,UAAL,GAAkBA,UAAlB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACH;AAED;;;;;;;4BAGQ;AAAA;;AACJT,MAAAA,SAAS,OAAT,CAAc,YAAM;AAChB,YAAI,CAACG,OAAL,EAAc;AACVN,UAAAA,MAAM,CAACa,IAAP,CAAY,wBAAZ;;AACA,UAAA,KAAI,CAACH,SAAL,CAAeI,MAAf;;AAEA,cAAMC,GAAG,GAAGlB,OAAO,EAAnB;AACA,cAAMmB,IAAI,GAAGlB,MAAM,CAACmB,SAApB;AAEAF,UAAAA,GAAG,CAACG,GAAJ,CAAQrB,OAAO,CAACsB,IAAR,EAAR;AACAJ,UAAAA,GAAG,CAACG,GAAJ,CAAQtB,IAAI,CAAC;AACTwB,YAAAA,MAAM,EAAE;AADC,WAAD,CAAZ;AAIAL,UAAAA,GAAG,CAACM,GAAJ,CAAQ,eAAR,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnCpB,YAAAA,SAAS,OAAT,CAAc,YAAM;AAChBH,cAAAA,MAAM,CAACa,IAAP,CAAY,mBAAZ;AAEAU,cAAAA,GAAG,CAACJ,IAAJ,CAASpB,WAAW,CAAC,KAAI,CAACY,MAAL,CAAYa,YAAb,CAApB;AACH,aAJD;AAKH,WAND;AAQAT,UAAAA,GAAG,CAACM,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7BpB,YAAAA,SAAS,OAAT,CAAc,YAAM;AAChBH,cAAAA,MAAM,CAACa,IAAP,CAAY,aAAZ;;AAEA,cAAA,KAAI,CAACJ,MAAL,CAAYgB,aAAZ,CAA0B,KAAI,CAACjB,UAA/B;;AACAe,cAAAA,GAAG,CAACJ,IAAJ,CAAS;AACLO,gBAAAA,OAAO,EAAE,KAAI,CAACjB,MAAL,CAAYkB,SADhB;AAELC,gBAAAA,OAAO,EAAE,KAAI,CAACnB,MAAL,CAAYmB,OAFhB;AAGLC,gBAAAA,SAAS,EAAE,KAAI,CAACrB,UAAL,CAAgBsB,MAHtB;AAILC,gBAAAA,KAAK,EAAE,KAAI,CAACrB,SAAL,CAAesB,QAAf,EAJF;AAKLC,gBAAAA,eAAe,EAAE;AACbC,kBAAAA,KAAK,EAAE,KAAI,CAACvB,MAAL,CAAYwB,OADN;AAEbC,kBAAAA,OAAO,EAAE,KAAI,CAACzB,MAAL,CAAY0B,mBAAZ,CAAgC,KAAI,CAAC5B,MAAL,CAAYkB,SAA5C;AAFI;AALZ,eAAT;AAUH,aAdD;AAeH,WAhBD;AAkBAZ,UAAAA,GAAG,CAACM,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7BpB,YAAAA,SAAS,OAAT,CAAc,YAAM;AAChBH,cAAAA,MAAM,CAACa,IAAP,CAAY,aAAZ;AAEAU,cAAAA,GAAG,CAACJ,IAAJ,CAAS,KAAI,CAACX,UAAL,CAAgB8B,MAAhB,EAAT;AACH,aAJD;AAKH,WAND,EAtCU,CA8CV;;AACAvB,UAAAA,GAAG,CAACwB,IAAJ,CAAS,WAAT,EAAsB,UAACjB,GAAD,EAAMC,GAAN,EAAc;AAChCpB,YAAAA,SAAS,OAAT,CAAc,YAAM;AAChBH,cAAAA,MAAM,CAACa,IAAP,CAAY,gBAAZ;AADgB,8BAGcS,GAAG,CAACkB,IAHlB;AAAA,kBAGRC,SAHQ,aAGRA,SAHQ;AAAA,kBAGGC,MAHH,aAGGA,MAHH;;AAIhB,kBAAMC,WAAW,GAAG,KAAI,CAAClC,MAAL,CAAYmC,iBAAZ,CAChBH,SADgB,EAEhBC,MAFgB,EAGhB,KAAI,CAAClC,UAHW,EAIhB,KAAI,CAACG,MAJW,CAApB;;AAOA,cAAA,KAAI,CAACD,SAAL,CAAemC,oBAAf,CAAoCF,WAApC;;AACApB,cAAAA,GAAG,CAACuB,QAAJ,CAAa,eAAb;AACH,aAbD;AAcH,WAfD;AAiBA/B,UAAAA,GAAG,CAACwB,IAAJ,CAAS,oBAAT,EAA8B,UAACjB,GAAD,EAAMC,GAAN,EAAY;AACtCpB,YAAAA,SAAS,OAAT,CAAc,YAAM;AAChBH,cAAAA,MAAM,CAACa,IAAP,CAAY,yBAAZ;;AAEA,kBAAMkC,KAAK,GAAG,KAAI,CAACnC,KAAL,CAAWoC,IAAX,EAAd;;AACAhD,cAAAA,MAAM,CAACa,IAAP,4BAAgCkC,KAAK,CAACE,YAAN,EAAhC;AACA1B,cAAAA,GAAG,CAACuB,QAAJ,CAAa,SAAb;AACH,aAND;AAOH,WARD;AAUA9C,UAAAA,MAAM,CAACa,IAAP,CAAY,wBAAZ;AACAE,UAAAA,GAAG,CAACD,MAAJ,CAAWE,IAAX,EAAiB,YAAM;AACnBhB,YAAAA,MAAM,CAACa,IAAP,+BAAmCG,IAAnC;AACH,WAFD;AAIAV,UAAAA,OAAO,GAAG,IAAV;AACH;AACJ,OAlFD;AAmFH;;;;;;AAGL4C,MAAM,CAACC,OAAP,GAAiB;AAAE5C,EAAAA,UAAU,EAAVA;AAAF,CAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'HTTP';\n\nconst ioc = require('./util/iocContainer');\nconst cors = require('cors');\nconst express = require('express');\nconst config = require('./config');\nconst { convertJson } = require('./util/jsonUtil');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\nlet running = false;\n\n/**\n * minacoin: HttpServer\n * --------------------\n * encapsulates the main components of the server-side interface, such as the \n * web server and the p2p server. \n *\n * author: John R. Kosinski\n */\nclass HttpServer {\n    /**\n     * constructor\n     * @param {Blockchain} blockchain\n     * @param {Wallet} wallet\n     * @param {IP2PServer} p2pServer\n     * @param {TransactionPool} txPool\n     * @param {Miner} miner\n     */\n    constructor(blockchain, wallet, p2pServer, txPool, miner) {\n        this.blockchain = blockchain;\n        this.wallet = wallet;\n        this.p2pServer = p2pServer;\n        this.txPool = txPool;\n        this.miner = miner;\n    }\n\n    /**\n     * starts the server running\n     */\n    start() {\n        exception.try(() => {\n            if (!running) {\n                logger.info('starting p2p server...');\n                this.p2pServer.listen();\n\n                const app = express();\n                const port = config.HTTP_PORT;\n\n                app.use(express.json());\n                app.use(cors({\n                    origin: 'http://localhost:3000'\n                }));\n\n                app.get('/transactions', (req, res) => {\n                    exception.try(() => {\n                        logger.info('GET /transactions');\n\n                        res.json(convertJson(this.txPool.transactions));\n                    });\n                });\n\n                app.get('/public', (req, res) => {\n                    exception.try(() => {\n                        logger.info('GET /public');\n\n                        this.wallet.updateBalance(this.blockchain);\n                        res.json({\n                            address: this.wallet.publicKey, \n                            balance: this.wallet.balance, \n                            chainSize: this.blockchain.height, \n                            peers: this.p2pServer.peerList(),\n                            transactionPool: {\n                                count: this.txPool.txCount, \n                                pending: this.txPool.pendingTransactions(this.wallet.publicKey)\n                            }\n                        });\n                    });\n                });\n                \n                app.get('/blocks', (req, res) => {\n                    exception.try(() => {\n                        logger.info('GET /blocks');\n                        \n                        res.json(this.blockchain.toJson()); \n                    });\n                }); \n\n                //pass in: recipient, amount\n                app.post('/transact', (req, res) => {\n                    exception.try(() => {\n                        logger.info('POST /transact');\n\n                        const { recipient, amount } = req.body;\n                        const transaction = this.wallet.createTransaction(\n                            recipient,\n                            amount,\n                            this.blockchain,\n                            this.txPool\n                        );\n\n                        this.p2pServer.broadcastTransaction(transaction);\n                        res.redirect('/transactions');\n                    });\n                });\n\n                app.post('/mine-transactions',(req, res)=>{\n                    exception.try(() => {\n                        logger.info('POST /mine-transactions');\n\n                        const block = this.miner.mine();\n                        logger.info(`new block added: ${block.toJsonString()}`);\n                        res.redirect('/blocks');\n                    });\n                })\n\n                logger.info('starting web server...');\n                app.listen(port, () => {\n                    logger.info(`app running on port ${port}`);\n                });\n\n                running = true;\n            }\n        });\n    }\n}\n\nmodule.exports = { HttpServer };\n\n\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567756422487
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/jsonUtil.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/jsonUtil.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/jsonUtil.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/jsonUtil.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
        "sourceFileName": "jsonUtil.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction convertJson(obj) {\n  if (Array.isArray(obj)) {\n    var output = [];\n    obj.forEach(function (i) {\n      output.push(convertJson(i));\n    });\n    return output;\n  }\n\n  if (obj.toJson) {\n    return obj.toJson();\n  }\n\n  return obj;\n}\n\nexports.convertJson = convertJson;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzb25VdGlsLmpzIl0sIm5hbWVzIjpbImNvbnZlcnRKc29uIiwib2JqIiwiQXJyYXkiLCJpc0FycmF5Iiwib3V0cHV0IiwiZm9yRWFjaCIsImkiLCJwdXNoIiwidG9Kc29uIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsU0FBU0EsV0FBVCxDQUFxQkMsR0FBckIsRUFBMEI7QUFDdEIsTUFBSUMsS0FBSyxDQUFDQyxPQUFOLENBQWNGLEdBQWQsQ0FBSixFQUF3QjtBQUNwQixRQUFNRyxNQUFNLEdBQUcsRUFBZjtBQUNBSCxJQUFBQSxHQUFHLENBQUNJLE9BQUosQ0FBWSxVQUFDQyxDQUFELEVBQU87QUFDZkYsTUFBQUEsTUFBTSxDQUFDRyxJQUFQLENBQVlQLFdBQVcsQ0FBQ00sQ0FBRCxDQUF2QjtBQUNILEtBRkQ7QUFHQSxXQUFPRixNQUFQO0FBQ0g7O0FBQ0QsTUFBSUgsR0FBRyxDQUFDTyxNQUFSLEVBQWdCO0FBQ1osV0FBT1AsR0FBRyxDQUFDTyxNQUFKLEVBQVA7QUFDSDs7QUFDRCxTQUFPUCxHQUFQO0FBQ0g7O0FBRURRLE9BQU8sQ0FBQ1QsV0FBUixHQUFzQkEsV0FBdEIiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21pbmFjb2luL21pbmFjb2luLXNlcnZlci9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY29udmVydEpzb24ob2JqKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkob2JqKSkge1xuICAgICAgICBjb25zdCBvdXRwdXQgPSBbXTtcbiAgICAgICAgb2JqLmZvckVhY2goKGkpID0+IHtcbiAgICAgICAgICAgIG91dHB1dC5wdXNoKGNvbnZlcnRKc29uKGkpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBvdXRwdXQ7XG4gICAgfVxuICAgIGlmIChvYmoudG9Kc29uKSB7XG4gICAgICAgIHJldHVybiBvYmoudG9Kc29uKCk7XG4gICAgfVxuICAgIHJldHVybiBvYmo7XG59XG5cbmV4cG9ydHMuY29udmVydEpzb24gPSBjb252ZXJ0SnNvbjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "jsonUtil.js"
      ],
      "names": [
        "convertJson",
        "obj",
        "Array",
        "isArray",
        "output",
        "forEach",
        "i",
        "push",
        "toJson",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,SAASA,WAAT,CAAqBC,GAArB,EAA0B;AACtB,MAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;AACpB,QAAMG,MAAM,GAAG,EAAf;AACAH,IAAAA,GAAG,CAACI,OAAJ,CAAY,UAACC,CAAD,EAAO;AACfF,MAAAA,MAAM,CAACG,IAAP,CAAYP,WAAW,CAACM,CAAD,CAAvB;AACH,KAFD;AAGA,WAAOF,MAAP;AACH;;AACD,MAAIH,GAAG,CAACO,MAAR,EAAgB;AACZ,WAAOP,GAAG,CAACO,MAAJ,EAAP;AACH;;AACD,SAAOP,GAAP;AACH;;AAEDQ,OAAO,CAACT,WAAR,GAAsBA,WAAtB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "sourcesContent": [
        "'use strict';\n\nfunction convertJson(obj) {\n    if (Array.isArray(obj)) {\n        const output = [];\n        obj.forEach((i) => {\n            output.push(convertJson(i));\n        });\n        return output;\n    }\n    if (obj.toJson) {\n        return obj.toJson();\n    }\n    return obj;\n}\n\nexports.convertJson = convertJson;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567696974850
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/LocalJsonDb.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/LocalJsonDb.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/LocalJsonDb.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/LocalJsonDb.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes",
        "sourceFileName": "LocalJsonDb.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar LOG_TAG = \"LDB\";\n\nvar ioc = require('../../../util/iocContainer');\n\nvar fs = require('fs');\n\nvar IDatabase = require('./IDatabase');\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: LocalJsonDb\n * ---------------------\n * implementation of IDatabase that reads/writes local files. \n *\n * author: John R. Kosinski\n */\n\nvar LocalFileDb =\n/*#__PURE__*/\nfunction (_IDatabase) {\n  _inherits(LocalFileDb, _IDatabase);\n\n  function LocalFileDb() {\n    _classCallCheck(this, LocalFileDb);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LocalFileDb).call(this));\n  }\n  /**\n   * serialize & save the given blockchain to data source\n   * @param {Blockchain} blockchain\n   */\n\n\n  _createClass(LocalFileDb, [{\n    key: \"saveBlockchain\",\n    value: function () {\n      var _saveBlockchain = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(blockchain) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.save('blockchain', blockchain);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function saveBlockchain(_x) {\n        return _saveBlockchain.apply(this, arguments);\n      }\n\n      return saveBlockchain;\n    }()\n    /**\n     * read blockchain data from data source and return as json\n     * @returns {json}\n     */\n\n    /*json*/\n\n  }, {\n    key: \"getBlockchain\",\n    value: function () {\n      var _getBlockchain = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.read('blockchain');\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getBlockchain() {\n        return _getBlockchain.apply(this, arguments);\n      }\n\n      return getBlockchain;\n    }()\n    /**\n     * serialize & save the given wallet to data source\n     * @param {Wallet} wallet\n     */\n\n  }, {\n    key: \"saveWallet\",\n    value: function () {\n      var _saveWallet = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(wallet) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.save('wallet', wallet);\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function saveWallet(_x2) {\n        return _saveWallet.apply(this, arguments);\n      }\n\n      return saveWallet;\n    }()\n    /**\n     * read wallet data from data source and return as Wallet instance\n     * @returns {json}\n     */\n\n    /*json*/\n\n  }, {\n    key: \"getWallet\",\n    value: function () {\n      var _getWallet = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.read('wallet');\n\n              case 2:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getWallet() {\n        return _getWallet.apply(this, arguments);\n      }\n\n      return getWallet;\n    }()\n    /**\n     * writes a value (json object) to a DB file \n     * @param {string} key \n     * @param {json} obj \n     */\n\n  }, {\n    key: \"save\",\n    value: function () {\n      var _save = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(key, obj) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return exception.tryAsync(\n                /*#__PURE__*/\n                _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee5() {\n                  var data;\n                  return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          data = {};\n\n                          if (obj) {\n                            data = JSON.stringify(obj.toJson());\n                          }\n\n                          _context5.next = 4;\n                          return writeFile(key + '.txt', data);\n\n                        case 4:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                })));\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function save(_x3, _x4) {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }()\n    /**\n     * reads a value (json object) from the DB file \n     * @param {string} key \n     */\n\n  }, {\n    key: \"read\",\n    value: function () {\n      var _read = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8(key) {\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return exception.tryAsync(\n                /*#__PURE__*/\n                _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee7() {\n                  var data;\n                  return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          _context7.next = 2;\n                          return readFile(key + '.txt');\n\n                        case 2:\n                          data = _context7.sent;\n                          return _context7.abrupt(\"return\", data ? JSON.parse(data) : null);\n\n                        case 4:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                })));\n\n              case 2:\n                return _context8.abrupt(\"return\", _context8.sent);\n\n              case 3:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function read(_x5) {\n        return _read.apply(this, arguments);\n      }\n\n      return read;\n    }()\n  }]);\n\n  return LocalFileDb;\n}(IDatabase);\n/**\n * write string data to a text file\n * @param {string} path\n * @param {string} data\n * @returns {Promise(bool)}\n */\n\n\nfunction\n/*bool*/\nwriteFile(path, data) {\n  exception[\"try\"](function () {\n    return new Promise(function (resolve, reject) {\n      fs.writeFile(path, data, function (err, data) {\n        if (err) reject(err);else resolve(true);\n      });\n    });\n  });\n}\n/**\n * read string data from a text file\n * @param {string} path\n * @returns {Promise(string)}\n */\n\n\nfunction\n/*string*/\nreadFile(path) {\n  return exception[\"try\"](function () {\n    return new Promise(function (resolve, reject) {\n      fs.readFile(path, function (err, data) {\n        if (err) {\n          logger.error(err);\n          resolve(null);\n        } else {\n          resolve(data.toString());\n        }\n      });\n    });\n  });\n}\n\nvar database = new LocalFileDb();\nmodule.exports = database;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxvY2FsSnNvbkRiLmpzIl0sIm5hbWVzIjpbIkxPR19UQUciLCJpb2MiLCJyZXF1aXJlIiwiZnMiLCJJRGF0YWJhc2UiLCJsb2dnZXIiLCJsb2dnZXJGYWN0b3J5IiwiY3JlYXRlTG9nZ2VyIiwiZXhjZXB0aW9uIiwiZWhGYWN0b3J5IiwiY3JlYXRlSGFuZGxlciIsIkxvY2FsRmlsZURiIiwiYmxvY2tjaGFpbiIsInNhdmUiLCJyZWFkIiwid2FsbGV0Iiwia2V5Iiwib2JqIiwidHJ5QXN5bmMiLCJkYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsInRvSnNvbiIsIndyaXRlRmlsZSIsInJlYWRGaWxlIiwicGFyc2UiLCJwYXRoIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJlcnIiLCJlcnJvciIsInRvU3RyaW5nIiwiZGF0YWJhc2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsT0FBTyxHQUFHLEtBQWhCOztBQUVBLElBQU1DLEdBQUcsR0FBR0MsT0FBTyxDQUFDLDRCQUFELENBQW5COztBQUNBLElBQU1DLEVBQUUsR0FBR0QsT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBQ0EsSUFBTUUsU0FBUyxHQUFHRixPQUFPLENBQUMsYUFBRCxDQUF6Qjs7QUFFQSxJQUFNRyxNQUFNLEdBQUdKLEdBQUcsQ0FBQ0ssYUFBSixDQUFrQkMsWUFBbEIsQ0FBK0JQLE9BQS9CLENBQWY7QUFDQSxJQUFNUSxTQUFTLEdBQUdQLEdBQUcsQ0FBQ1EsU0FBSixDQUFjQyxhQUFkLENBQTRCTCxNQUE1QixDQUFsQjtBQUVBOzs7Ozs7OztJQU9NTSxXOzs7OztBQUNGLHlCQUFjO0FBQUE7O0FBQUE7QUFFYjtBQUVEOzs7Ozs7Ozs7OzsrQ0FJcUJDLFU7Ozs7Ozt1QkFDWCxLQUFLQyxJQUFMLENBQVUsWUFBVixFQUF3QkQsVUFBeEIsQzs7Ozs7Ozs7Ozs7Ozs7OztBQUdWOzs7OztBQUlBOzs7Ozs7Ozs7Ozs7O3VCQUNpQixLQUFLRSxJQUFMLENBQVUsWUFBVixDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBR2pCOzs7Ozs7Ozs7O2dEQUlpQkMsTTs7Ozs7O3VCQUNQLEtBQUtGLElBQUwsQ0FBVSxRQUFWLEVBQW9CRSxNQUFwQixDOzs7Ozs7Ozs7Ozs7Ozs7O0FBR1Y7Ozs7O0FBSUE7Ozs7Ozs7Ozs7Ozs7dUJBQ2lCLEtBQUtELElBQUwsQ0FBVSxRQUFWLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFHakI7Ozs7Ozs7Ozs7O2dEQUtXRSxHLEVBQUtDLEc7Ozs7Ozt1QkFDTlQsU0FBUyxDQUFDVSxRQUFWO0FBQUE7QUFBQTtBQUFBO0FBQUEsd0NBQW1CO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNqQkMsMEJBQUFBLElBRGlCLEdBQ1YsRUFEVTs7QUFFckIsOEJBQUlGLEdBQUosRUFBUztBQUNMRSw0QkFBQUEsSUFBSSxHQUFHQyxJQUFJLENBQUNDLFNBQUwsQ0FBZUosR0FBRyxDQUFDSyxNQUFKLEVBQWYsQ0FBUDtBQUNIOztBQUpvQjtBQUFBLGlDQUtmQyxTQUFTLENBQUNQLEdBQUcsR0FBRyxNQUFQLEVBQWVHLElBQWYsQ0FMTTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxpQkFBbkIsRzs7Ozs7Ozs7Ozs7Ozs7OztBQVNWOzs7Ozs7Ozs7O2dEQUlXSCxHOzs7Ozs7dUJBQ01SLFNBQVMsQ0FBQ1UsUUFBVjtBQUFBO0FBQUE7QUFBQTtBQUFBLHdDQUFtQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGlDQUNUTSxRQUFRLENBQUNSLEdBQUcsR0FBRyxNQUFQLENBREM7O0FBQUE7QUFDdEJHLDBCQUFBQSxJQURzQjtBQUFBLDREQUVyQkEsSUFBSSxHQUFHQyxJQUFJLENBQUNLLEtBQUwsQ0FBV04sSUFBWCxDQUFILEdBQXNCLElBRkw7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsaUJBQW5CLEc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUF6REtmLFM7QUFpRTFCOzs7Ozs7OztBQU1BO0FBQVM7QUFBU21CLFNBQWxCLENBQTRCRyxJQUE1QixFQUFrQ1AsSUFBbEMsRUFBd0M7QUFDcENYLEVBQUFBLFNBQVMsT0FBVCxDQUFjLFlBQU07QUFDaEIsV0FBTyxJQUFJbUIsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUNwQzFCLE1BQUFBLEVBQUUsQ0FBQ29CLFNBQUgsQ0FBYUcsSUFBYixFQUFtQlAsSUFBbkIsRUFBeUIsVUFBQ1csR0FBRCxFQUFNWCxJQUFOLEVBQWU7QUFDcEMsWUFBSVcsR0FBSixFQUNJRCxNQUFNLENBQUNDLEdBQUQsQ0FBTixDQURKLEtBR0lGLE9BQU8sQ0FBQyxJQUFELENBQVA7QUFDUCxPQUxEO0FBTUgsS0FQTSxDQUFQO0FBUUgsR0FURDtBQVVIO0FBRUQ7Ozs7Ozs7QUFLQTtBQUFTO0FBQVdKLFFBQXBCLENBQTZCRSxJQUE3QixFQUFtQztBQUMvQixTQUFPbEIsU0FBUyxPQUFULENBQWMsWUFBTTtBQUN2QixXQUFPLElBQUltQixPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQXFCO0FBQ3BDMUIsTUFBQUEsRUFBRSxDQUFDcUIsUUFBSCxDQUFZRSxJQUFaLEVBQWtCLFVBQUNJLEdBQUQsRUFBTVgsSUFBTixFQUFlO0FBQzdCLFlBQUlXLEdBQUosRUFBUztBQUNMekIsVUFBQUEsTUFBTSxDQUFDMEIsS0FBUCxDQUFhRCxHQUFiO0FBQ0FGLFVBQUFBLE9BQU8sQ0FBQyxJQUFELENBQVA7QUFDSCxTQUhELE1BSUs7QUFDREEsVUFBQUEsT0FBTyxDQUFDVCxJQUFJLENBQUNhLFFBQUwsRUFBRCxDQUFQO0FBQ0g7QUFDSixPQVJEO0FBU0gsS0FWTSxDQUFQO0FBV0gsR0FaTSxDQUFQO0FBYUg7O0FBRUQsSUFBTUMsUUFBUSxHQUFHLElBQUl0QixXQUFKLEVBQWpCO0FBQ0F1QixNQUFNLENBQUNDLE9BQVAsR0FBaUJGLFFBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FjZXIvRGVza3RvcC9taW5hY29pbi9taW5hY29pbi9taW5hY29pbi1zZXJ2ZXIvc3JjL2xpYi9kYXRhYmFzZS9jbGFzc2VzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBMT0dfVEFHID0gXCJMREJcIjtcblxuY29uc3QgaW9jID0gcmVxdWlyZSgnLi4vLi4vLi4vdXRpbC9pb2NDb250YWluZXInKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IElEYXRhYmFzZSA9IHJlcXVpcmUoJy4vSURhdGFiYXNlJyk7XG5cbmNvbnN0IGxvZ2dlciA9IGlvYy5sb2dnZXJGYWN0b3J5LmNyZWF0ZUxvZ2dlcihMT0dfVEFHKTtcbmNvbnN0IGV4Y2VwdGlvbiA9IGlvYy5laEZhY3RvcnkuY3JlYXRlSGFuZGxlcihsb2dnZXIpO1xuXG4vKipcbiAqIG1pbmFjb2luOiBMb2NhbEpzb25EYlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBpbXBsZW1lbnRhdGlvbiBvZiBJRGF0YWJhc2UgdGhhdCByZWFkcy93cml0ZXMgbG9jYWwgZmlsZXMuIFxuICpcbiAqIGF1dGhvcjogSm9obiBSLiBLb3NpbnNraVxuICovXG5jbGFzcyBMb2NhbEZpbGVEYiBleHRlbmRzIElEYXRhYmFzZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogc2VyaWFsaXplICYgc2F2ZSB0aGUgZ2l2ZW4gYmxvY2tjaGFpbiB0byBkYXRhIHNvdXJjZVxuICAgICAqIEBwYXJhbSB7QmxvY2tjaGFpbn0gYmxvY2tjaGFpblxuICAgICAqL1xuICAgIGFzeW5jIHNhdmVCbG9ja2NoYWluKGJsb2NrY2hhaW4pIHtcbiAgICAgICAgYXdhaXQgdGhpcy5zYXZlKCdibG9ja2NoYWluJywgYmxvY2tjaGFpbik7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogcmVhZCBibG9ja2NoYWluIGRhdGEgZnJvbSBkYXRhIHNvdXJjZSBhbmQgcmV0dXJuIGFzIGpzb25cbiAgICAgKiBAcmV0dXJucyB7anNvbn1cbiAgICAgKi9cbiAgICAvKmpzb24qLyBhc3luYyBnZXRCbG9ja2NoYWluKCkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5yZWFkKCdibG9ja2NoYWluJyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogc2VyaWFsaXplICYgc2F2ZSB0aGUgZ2l2ZW4gd2FsbGV0IHRvIGRhdGEgc291cmNlXG4gICAgICogQHBhcmFtIHtXYWxsZXR9IHdhbGxldFxuICAgICAqL1xuICAgIGFzeW5jIHNhdmVXYWxsZXQod2FsbGV0KSB7XG4gICAgICAgIGF3YWl0IHRoaXMuc2F2ZSgnd2FsbGV0Jywgd2FsbGV0KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiByZWFkIHdhbGxldCBkYXRhIGZyb20gZGF0YSBzb3VyY2UgYW5kIHJldHVybiBhcyBXYWxsZXQgaW5zdGFuY2VcbiAgICAgKiBAcmV0dXJucyB7anNvbn1cbiAgICAgKi9cbiAgICAvKmpzb24qLyBhc3luYyBnZXRXYWxsZXQoKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnJlYWQoJ3dhbGxldCcpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHdyaXRlcyBhIHZhbHVlIChqc29uIG9iamVjdCkgdG8gYSBEQiBmaWxlIFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgXG4gICAgICogQHBhcmFtIHtqc29ufSBvYmogXG4gICAgICovXG4gICAgYXN5bmMgc2F2ZShrZXksIG9iaikge1xuICAgICAgICBhd2FpdCBleGNlcHRpb24udHJ5QXN5bmMoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgbGV0IGRhdGEgPSB7fTtcbiAgICAgICAgICAgIGlmIChvYmopIHtcbiAgICAgICAgICAgICAgICBkYXRhID0gSlNPTi5zdHJpbmdpZnkob2JqLnRvSnNvbigpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGF3YWl0IHdyaXRlRmlsZShrZXkgKyAnLnR4dCcsIGRhdGEpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiByZWFkcyBhIHZhbHVlIChqc29uIG9iamVjdCkgZnJvbSB0aGUgREIgZmlsZSBcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IFxuICAgICAqL1xuICAgIGFzeW5jIHJlYWQoa2V5KSB7XG4gICAgICAgIHJldHVybiBhd2FpdCBleGNlcHRpb24udHJ5QXN5bmMoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlYWRGaWxlKGtleSArICcudHh0Jyk7XG4gICAgICAgICAgICByZXR1cm4gZGF0YSA/IEpTT04ucGFyc2UoZGF0YSkgOiBudWxsO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5cblxuLyoqXG4gKiB3cml0ZSBzdHJpbmcgZGF0YSB0byBhIHRleHQgZmlsZVxuICogQHBhcmFtIHtzdHJpbmd9IHBhdGhcbiAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhXG4gKiBAcmV0dXJucyB7UHJvbWlzZShib29sKX1cbiAqL1xuZnVuY3Rpb24gLypib29sKi8gd3JpdGVGaWxlKHBhdGgsIGRhdGEpIHtcbiAgICBleGNlcHRpb24udHJ5KCgpID0+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGZzLndyaXRlRmlsZShwYXRoLCBkYXRhLCAoZXJyLCBkYXRhKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGVycilcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHRydWUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuXG4vKipcbiAqIHJlYWQgc3RyaW5nIGRhdGEgZnJvbSBhIHRleHQgZmlsZVxuICogQHBhcmFtIHtzdHJpbmd9IHBhdGhcbiAqIEByZXR1cm5zIHtQcm9taXNlKHN0cmluZyl9XG4gKi9cbmZ1bmN0aW9uIC8qc3RyaW5nKi8gcmVhZEZpbGUocGF0aCkge1xuICAgIHJldHVybiBleGNlcHRpb24udHJ5KCgpID0+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGZzLnJlYWRGaWxlKHBhdGgsIChlcnIsIGRhdGEpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIGxvZ2dlci5lcnJvcihlcnIpO1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKG51bGwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShkYXRhLnRvU3RyaW5nKCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cblxuY29uc3QgZGF0YWJhc2UgPSBuZXcgTG9jYWxGaWxlRGIoKTtcbm1vZHVsZS5leHBvcnRzID0gZGF0YWJhc2U7Il19",
    "map": {
      "version": 3,
      "sources": [
        "LocalJsonDb.js"
      ],
      "names": [
        "LOG_TAG",
        "ioc",
        "require",
        "fs",
        "IDatabase",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "LocalFileDb",
        "blockchain",
        "save",
        "read",
        "wallet",
        "key",
        "obj",
        "tryAsync",
        "data",
        "JSON",
        "stringify",
        "toJson",
        "writeFile",
        "readFile",
        "parse",
        "path",
        "Promise",
        "resolve",
        "reject",
        "err",
        "error",
        "toString",
        "database",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,KAAhB;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,4BAAD,CAAnB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,aAAD,CAAzB;;AAEA,IAAMG,MAAM,GAAGJ,GAAG,CAACK,aAAJ,CAAkBC,YAAlB,CAA+BP,OAA/B,CAAf;AACA,IAAMQ,SAAS,GAAGP,GAAG,CAACQ,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;IAOMM,W;;;;;AACF,yBAAc;AAAA;;AAAA;AAEb;AAED;;;;;;;;;;;+CAIqBC,U;;;;;;uBACX,KAAKC,IAAL,CAAU,YAAV,EAAwBD,UAAxB,C;;;;;;;;;;;;;;;;AAGV;;;;;AAIA;;;;;;;;;;;;;uBACiB,KAAKE,IAAL,CAAU,YAAV,C;;;;;;;;;;;;;;;;;;;AAGjB;;;;;;;;;;gDAIiBC,M;;;;;;uBACP,KAAKF,IAAL,CAAU,QAAV,EAAoBE,MAApB,C;;;;;;;;;;;;;;;;AAGV;;;;;AAIA;;;;;;;;;;;;;uBACiB,KAAKD,IAAL,CAAU,QAAV,C;;;;;;;;;;;;;;;;;;;AAGjB;;;;;;;;;;;gDAKWE,G,EAAKC,G;;;;;;uBACNT,SAAS,CAACU,QAAV;AAAA;AAAA;AAAA;AAAA,wCAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,0BAAAA,IADiB,GACV,EADU;;AAErB,8BAAIF,GAAJ,EAAS;AACLE,4BAAAA,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeJ,GAAG,CAACK,MAAJ,EAAf,CAAP;AACH;;AAJoB;AAAA,iCAKfC,SAAS,CAACP,GAAG,GAAG,MAAP,EAAeG,IAAf,CALM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAnB,G;;;;;;;;;;;;;;;;AASV;;;;;;;;;;gDAIWH,G;;;;;;uBACMR,SAAS,CAACU,QAAV;AAAA;AAAA;AAAA;AAAA,wCAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACTM,QAAQ,CAACR,GAAG,GAAG,MAAP,CADC;;AAAA;AACtBG,0BAAAA,IADsB;AAAA,4DAErBA,IAAI,GAAGC,IAAI,CAACK,KAAL,CAAWN,IAAX,CAAH,GAAsB,IAFL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAnB,G;;;;;;;;;;;;;;;;;;;;;;EAzDKf,S;AAiE1B;;;;;;;;AAMA;AAAS;AAASmB,SAAlB,CAA4BG,IAA5B,EAAkCP,IAAlC,EAAwC;AACpCX,EAAAA,SAAS,OAAT,CAAc,YAAM;AAChB,WAAO,IAAImB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC1B,MAAAA,EAAE,CAACoB,SAAH,CAAaG,IAAb,EAAmBP,IAAnB,EAAyB,UAACW,GAAD,EAAMX,IAAN,EAAe;AACpC,YAAIW,GAAJ,EACID,MAAM,CAACC,GAAD,CAAN,CADJ,KAGIF,OAAO,CAAC,IAAD,CAAP;AACP,OALD;AAMH,KAPM,CAAP;AAQH,GATD;AAUH;AAED;;;;;;;AAKA;AAAS;AAAWJ,QAApB,CAA6BE,IAA7B,EAAmC;AAC/B,SAAOlB,SAAS,OAAT,CAAc,YAAM;AACvB,WAAO,IAAImB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC1B,MAAAA,EAAE,CAACqB,QAAH,CAAYE,IAAZ,EAAkB,UAACI,GAAD,EAAMX,IAAN,EAAe;AAC7B,YAAIW,GAAJ,EAAS;AACLzB,UAAAA,MAAM,CAAC0B,KAAP,CAAaD,GAAb;AACAF,UAAAA,OAAO,CAAC,IAAD,CAAP;AACH,SAHD,MAIK;AACDA,UAAAA,OAAO,CAACT,IAAI,CAACa,QAAL,EAAD,CAAP;AACH;AACJ,OARD;AASH,KAVM,CAAP;AAWH,GAZM,CAAP;AAaH;;AAED,IAAMC,QAAQ,GAAG,IAAItB,WAAJ,EAAjB;AACAuB,MAAM,CAACC,OAAP,GAAiBF,QAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = \"LDB\";\n\nconst ioc = require('../../../util/iocContainer');\nconst fs = require('fs');\nconst IDatabase = require('./IDatabase');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: LocalJsonDb\n * ---------------------\n * implementation of IDatabase that reads/writes local files. \n *\n * author: John R. Kosinski\n */\nclass LocalFileDb extends IDatabase {\n    constructor() {\n        super();\n    }\n\n    /**\n     * serialize & save the given blockchain to data source\n     * @param {Blockchain} blockchain\n     */\n    async saveBlockchain(blockchain) {\n        await this.save('blockchain', blockchain);\n    }\n\n    /**\n     * read blockchain data from data source and return as json\n     * @returns {json}\n     */\n    /*json*/ async getBlockchain() {\n        return await this.read('blockchain');\n    }\n\n    /**\n     * serialize & save the given wallet to data source\n     * @param {Wallet} wallet\n     */\n    async saveWallet(wallet) {\n        await this.save('wallet', wallet);\n    }\n\n    /**\n     * read wallet data from data source and return as Wallet instance\n     * @returns {json}\n     */\n    /*json*/ async getWallet() {\n        return await this.read('wallet');\n    }\n\n    /**\n     * writes a value (json object) to a DB file \n     * @param {string} key \n     * @param {json} obj \n     */\n    async save(key, obj) {\n        await exception.tryAsync(async () => {\n            let data = {};\n            if (obj) {\n                data = JSON.stringify(obj.toJson());\n            }\n            await writeFile(key + '.txt', data);\n        });\n    }\n\n    /**\n     * reads a value (json object) from the DB file \n     * @param {string} key \n     */\n    async read(key) {\n        return await exception.tryAsync(async () => {\n            const data = await readFile(key + '.txt');\n            return data ? JSON.parse(data) : null;\n        });\n    }\n}\n\n\n/**\n * write string data to a text file\n * @param {string} path\n * @param {string} data\n * @returns {Promise(bool)}\n */\nfunction /*bool*/ writeFile(path, data) {\n    exception.try(() => {\n        return new Promise((resolve, reject) => {\n            fs.writeFile(path, data, (err, data) => {\n                if (err)\n                    reject(err);\n                else\n                    resolve(true);\n            });\n        });\n    });\n}\n\n/**\n * read string data from a text file\n * @param {string} path\n * @returns {Promise(string)}\n */\nfunction /*string*/ readFile(path) {\n    return exception.try(() => {\n        return new Promise((resolve, reject) => {\n            fs.readFile(path, (err, data) => {\n                if (err) {\n                    logger.error(err);\n                    resolve(null);\n                }\n                else {\n                    resolve(data.toString());\n                }\n            });\n        });\n    });\n}\n\nconst database = new LocalFileDb();\nmodule.exports = database;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567778486546
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/IDatabase.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/IDatabase.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/IDatabase.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/IDatabase.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes",
        "sourceFileName": "IDatabase.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n/**\n * minacoin: IDatabase\n * -------------------\n * interface for app database which stores things like the blockchain \n * and wallet info. \n *\n * author: John R. Kosinski\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar IDatabase =\n/*#__PURE__*/\nfunction () {\n  function IDatabase() {\n    _classCallCheck(this, IDatabase);\n  }\n\n  _createClass(IDatabase, [{\n    key: \"saveBlockchain\",\n    value: function saveBlockchain(blockchain) {}\n  }, {\n    key: \"getBlockchain\",\n    value: function getBlockchain() {}\n  }, {\n    key: \"saveWallet\",\n    value: function saveWallet(wallet) {}\n  }, {\n    key: \"getWallet\",\n    value: function getWallet() {}\n  }]);\n\n  return IDatabase;\n}();\n\nmodule.exports = IDatabase;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIklEYXRhYmFzZS5qcyJdLCJuYW1lcyI6WyJJRGF0YWJhc2UiLCJibG9ja2NoYWluIiwid2FsbGV0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTs7Ozs7Ozs7Ozs7Ozs7O0lBUU1BLFM7Ozs7Ozs7OzttQ0FDYUMsVSxFQUFZLENBQUc7OztvQ0FDZCxDQUFHOzs7K0JBQ1JDLE0sRUFBUSxDQUFHOzs7Z0NBQ1YsQ0FBRzs7Ozs7O0FBR25CQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJKLFNBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FjZXIvRGVza3RvcC9taW5hY29pbi9taW5hY29pbi9taW5hY29pbi1zZXJ2ZXIvc3JjL2xpYi9kYXRhYmFzZS9jbGFzc2VzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIG1pbmFjb2luOiBJRGF0YWJhc2VcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIGludGVyZmFjZSBmb3IgYXBwIGRhdGFiYXNlIHdoaWNoIHN0b3JlcyB0aGluZ3MgbGlrZSB0aGUgYmxvY2tjaGFpbiBcbiAqIGFuZCB3YWxsZXQgaW5mby4gXG4gKlxuICogYXV0aG9yOiBKb2huIFIuIEtvc2luc2tpXG4gKi9cbmNsYXNzIElEYXRhYmFzZSB7XG4gICAgc2F2ZUJsb2NrY2hhaW4oYmxvY2tjaGFpbikgeyB9XG4gICAgZ2V0QmxvY2tjaGFpbigpIHsgfVxuICAgIHNhdmVXYWxsZXQod2FsbGV0KSB7IH1cbiAgICBnZXRXYWxsZXQoKSB7IH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBJRGF0YWJhc2U7Il19",
    "map": {
      "version": 3,
      "sources": [
        "IDatabase.js"
      ],
      "names": [
        "IDatabase",
        "blockchain",
        "wallet",
        "module",
        "exports"
      ],
      "mappings": "AAAA;AAEA;;;;;;;;;;;;;;;IAQMA,S;;;;;;;;;mCACaC,U,EAAY,CAAG;;;oCACd,CAAG;;;+BACRC,M,EAAQ,CAAG;;;gCACV,CAAG;;;;;;AAGnBC,MAAM,CAACC,OAAP,GAAiBJ,SAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes",
      "sourcesContent": [
        "'use strict';\n\n/**\n * minacoin: IDatabase\n * -------------------\n * interface for app database which stores things like the blockchain \n * and wallet info. \n *\n * author: John R. Kosinski\n */\nclass IDatabase {\n    saveBlockchain(blockchain) { }\n    getBlockchain() { }\n    saveWallet(wallet) { }\n    getWallet() { }\n}\n\nmodule.exports = IDatabase;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567608321532
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/index.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar LOG_TAG = 'IDX'; //configure IOC container\n\nvar ioc = require('./util/iocContainer');\n\nioc.service('loggerFactory', function (c) {\n  return require('./util/winstonLogger');\n});\nioc.service('ehFactory', function (c) {\n  return require('./util/exceptionHandler');\n});\nioc.service('p2pServerFactory', function (c) {\n  return require('./lib/p2p/classes/SwarmP2PServer').factory;\n});\nioc.service('database', function (c) {\n  return require('./lib/database/classes/LocalJsonDb');\n});\n\nvar Server = require('./server');\n\nvar server = new Server();\nserver.run();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkxPR19UQUciLCJpb2MiLCJyZXF1aXJlIiwic2VydmljZSIsImMiLCJmYWN0b3J5IiwiU2VydmVyIiwic2VydmVyIiwicnVuIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxPQUFPLEdBQUcsS0FBaEIsQyxDQUVBOztBQUNBLElBQU1DLEdBQUcsR0FBR0MsT0FBTyxDQUFDLHFCQUFELENBQW5COztBQUNBRCxHQUFHLENBQUNFLE9BQUosQ0FBWSxlQUFaLEVBQTZCLFVBQUFDLENBQUM7QUFBQSxTQUFJRixPQUFPLENBQUMsc0JBQUQsQ0FBWDtBQUFBLENBQTlCO0FBQ0FELEdBQUcsQ0FBQ0UsT0FBSixDQUFZLFdBQVosRUFBeUIsVUFBQUMsQ0FBQztBQUFBLFNBQUlGLE9BQU8sQ0FBQyx5QkFBRCxDQUFYO0FBQUEsQ0FBMUI7QUFDQUQsR0FBRyxDQUFDRSxPQUFKLENBQVksa0JBQVosRUFBZ0MsVUFBQUMsQ0FBQztBQUFBLFNBQUdGLE9BQU8sQ0FBQyxrQ0FBRCxDQUFQLENBQTRDRyxPQUEvQztBQUFBLENBQWpDO0FBQ0FKLEdBQUcsQ0FBQ0UsT0FBSixDQUFZLFVBQVosRUFBd0IsVUFBQUMsQ0FBQztBQUFBLFNBQUdGLE9BQU8sQ0FBQyxvQ0FBRCxDQUFWO0FBQUEsQ0FBekI7O0FBRUEsSUFBTUksTUFBTSxHQUFHSixPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFFQSxJQUFNSyxNQUFNLEdBQUcsSUFBSUQsTUFBSixFQUFmO0FBQ0FDLE1BQU0sQ0FBQ0MsR0FBUCIsInNvdXJjZVJvb3QiOiIvaG9tZS9hY2VyL0Rlc2t0b3AvbWluYWNvaW4vbWluYWNvaW4vbWluYWNvaW4tc2VydmVyL3NyYyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgTE9HX1RBRyA9ICdJRFgnO1xuXG4vL2NvbmZpZ3VyZSBJT0MgY29udGFpbmVyXG5jb25zdCBpb2MgPSByZXF1aXJlKCcuL3V0aWwvaW9jQ29udGFpbmVyJyk7XG5pb2Muc2VydmljZSgnbG9nZ2VyRmFjdG9yeScsIGMgPT4gcmVxdWlyZSgnLi91dGlsL3dpbnN0b25Mb2dnZXInKSk7XG5pb2Muc2VydmljZSgnZWhGYWN0b3J5JywgYyA9PiByZXF1aXJlKCcuL3V0aWwvZXhjZXB0aW9uSGFuZGxlcicpKTtcbmlvYy5zZXJ2aWNlKCdwMnBTZXJ2ZXJGYWN0b3J5JywgYz0+IHJlcXVpcmUoJy4vbGliL3AycC9jbGFzc2VzL1N3YXJtUDJQU2VydmVyJykuZmFjdG9yeSk7XG5pb2Muc2VydmljZSgnZGF0YWJhc2UnLCBjPT4gcmVxdWlyZSgnLi9saWIvZGF0YWJhc2UvY2xhc3Nlcy9Mb2NhbEpzb25EYicpKTtcblxuY29uc3QgU2VydmVyID0gcmVxdWlyZSgnLi9zZXJ2ZXInKTtcblxuY29uc3Qgc2VydmVyID0gbmV3IFNlcnZlcigpOyBcbnNlcnZlci5ydW4oKTsgXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "LOG_TAG",
        "ioc",
        "require",
        "service",
        "c",
        "factory",
        "Server",
        "server",
        "run"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,OAAO,GAAG,KAAhB,C,CAEA;;AACA,IAAMC,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAnB;;AACAD,GAAG,CAACE,OAAJ,CAAY,eAAZ,EAA6B,UAAAC,CAAC;AAAA,SAAIF,OAAO,CAAC,sBAAD,CAAX;AAAA,CAA9B;AACAD,GAAG,CAACE,OAAJ,CAAY,WAAZ,EAAyB,UAAAC,CAAC;AAAA,SAAIF,OAAO,CAAC,yBAAD,CAAX;AAAA,CAA1B;AACAD,GAAG,CAACE,OAAJ,CAAY,kBAAZ,EAAgC,UAAAC,CAAC;AAAA,SAAGF,OAAO,CAAC,kCAAD,CAAP,CAA4CG,OAA/C;AAAA,CAAjC;AACAJ,GAAG,CAACE,OAAJ,CAAY,UAAZ,EAAwB,UAAAC,CAAC;AAAA,SAAGF,OAAO,CAAC,oCAAD,CAAV;AAAA,CAAzB;;AAEA,IAAMI,MAAM,GAAGJ,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAMK,MAAM,GAAG,IAAID,MAAJ,EAAf;AACAC,MAAM,CAACC,GAAP",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'IDX';\n\n//configure IOC container\nconst ioc = require('./util/iocContainer');\nioc.service('loggerFactory', c => require('./util/winstonLogger'));\nioc.service('ehFactory', c => require('./util/exceptionHandler'));\nioc.service('p2pServerFactory', c=> require('./lib/p2p/classes/SwarmP2PServer').factory);\nioc.service('database', c=> require('./lib/database/classes/LocalJsonDb'));\n\nconst Server = require('./server');\n\nconst server = new Server(); \nserver.run(); \n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567756681157
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/iocContainer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/iocContainer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/iocContainer.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/iocContainer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
        "sourceFileName": "iocContainer.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n/**\n * ------------------------\n * simple homemade IOC container to serve our purposes.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Container =\n/*#__PURE__*/\nfunction () {\n  function Container() {\n    _classCallCheck(this, Container);\n\n    this.services = {};\n  }\n  /**\n   * register a service by name, with the IOC container\n   *\n   * @param {string} serviceName\n   * @param {fn} callback\n   */\n\n\n  _createClass(Container, [{\n    key: \"service\",\n    value: function service(serviceName, callback) {\n      var _this = this;\n\n      Object.defineProperty(this, serviceName, {\n        get: function get() {\n          if (!_this.services.hasOwnProperty(serviceName)) {\n            _this.services[serviceName] = callback(_this);\n          }\n\n          return _this.services[serviceName];\n        },\n        configurable: true,\n        enumerable: true\n      });\n      return this;\n    }\n  }]);\n\n  return Container;\n}(); //export singleton instance\n\n\nvar container = new Container();\nmodule.exports = container;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlvY0NvbnRhaW5lci5qcyJdLCJuYW1lcyI6WyJDb250YWluZXIiLCJzZXJ2aWNlcyIsInNlcnZpY2VOYW1lIiwiY2FsbGJhY2siLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldCIsImhhc093blByb3BlcnR5IiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImNvbnRhaW5lciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBO0FBRUE7Ozs7Ozs7Ozs7Ozs7O0lBT01BLFM7OztBQUNGLHVCQUFjO0FBQUE7O0FBQ1YsU0FBS0MsUUFBTCxHQUFnQixFQUFoQjtBQUNIO0FBRUQ7Ozs7Ozs7Ozs7NEJBTVFDLFcsRUFBYUMsUSxFQUFVO0FBQUE7O0FBQzNCQyxNQUFBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0IsSUFBdEIsRUFBNEJILFdBQTVCLEVBQXlDO0FBQ3JDSSxRQUFBQSxHQUFHLEVBQUUsZUFBTTtBQUNQLGNBQUksQ0FBQyxLQUFJLENBQUNMLFFBQUwsQ0FBY00sY0FBZCxDQUE2QkwsV0FBN0IsQ0FBTCxFQUFnRDtBQUM1QyxZQUFBLEtBQUksQ0FBQ0QsUUFBTCxDQUFjQyxXQUFkLElBQTZCQyxRQUFRLENBQUMsS0FBRCxDQUFyQztBQUNIOztBQUNELGlCQUFPLEtBQUksQ0FBQ0YsUUFBTCxDQUFjQyxXQUFkLENBQVA7QUFDSCxTQU5vQztBQU9yQ00sUUFBQUEsWUFBWSxFQUFFLElBUHVCO0FBUXJDQyxRQUFBQSxVQUFVLEVBQUU7QUFSeUIsT0FBekM7QUFXQSxhQUFPLElBQVA7QUFDSDs7OztLQUdMOzs7QUFDQSxJQUFNQyxTQUFTLEdBQUcsSUFBSVYsU0FBSixFQUFsQjtBQUNBVyxNQUFNLENBQUNDLE9BQVAsR0FBaUJGLFNBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FjZXIvRGVza3RvcC9taW5hY29pbi9taW5hY29pbi9taW5hY29pbi1zZXJ2ZXIvc3JjL3V0aWwiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBzaW1wbGUgaG9tZW1hZGUgSU9DIGNvbnRhaW5lciB0byBzZXJ2ZSBvdXIgcHVycG9zZXMuXG4gKlxuICogQXV0aG9yOiBKb2huIFIuIEtvc2luc2tpXG4gKiBEYXRlOiAyNyBBdWcgMjAxOVxuICovXG5jbGFzcyBDb250YWluZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnNlcnZpY2VzID0ge307XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogcmVnaXN0ZXIgYSBzZXJ2aWNlIGJ5IG5hbWUsIHdpdGggdGhlIElPQyBjb250YWluZXJcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzZXJ2aWNlTmFtZVxuICAgICAqIEBwYXJhbSB7Zm59IGNhbGxiYWNrXG4gICAgICovXG4gICAgc2VydmljZShzZXJ2aWNlTmFtZSwgY2FsbGJhY2spIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIHNlcnZpY2VOYW1lLCB7XG4gICAgICAgICAgICBnZXQ6ICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuc2VydmljZXMuaGFzT3duUHJvcGVydHkoc2VydmljZU5hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VydmljZXNbc2VydmljZU5hbWVdID0gY2FsbGJhY2sodGhpcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnNlcnZpY2VzW3NlcnZpY2VOYW1lXTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbn1cblxuLy9leHBvcnQgc2luZ2xldG9uIGluc3RhbmNlXG5jb25zdCBjb250YWluZXIgPSBuZXcgQ29udGFpbmVyKCk7XG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRhaW5lcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "iocContainer.js"
      ],
      "names": [
        "Container",
        "services",
        "serviceName",
        "callback",
        "Object",
        "defineProperty",
        "get",
        "hasOwnProperty",
        "configurable",
        "enumerable",
        "container",
        "module",
        "exports"
      ],
      "mappings": "AAAA;AAEA;;;;;;;;;;;;;;IAOMA,S;;;AACF,uBAAc;AAAA;;AACV,SAAKC,QAAL,GAAgB,EAAhB;AACH;AAED;;;;;;;;;;4BAMQC,W,EAAaC,Q,EAAU;AAAA;;AAC3BC,MAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4BH,WAA5B,EAAyC;AACrCI,QAAAA,GAAG,EAAE,eAAM;AACP,cAAI,CAAC,KAAI,CAACL,QAAL,CAAcM,cAAd,CAA6BL,WAA7B,CAAL,EAAgD;AAC5C,YAAA,KAAI,CAACD,QAAL,CAAcC,WAAd,IAA6BC,QAAQ,CAAC,KAAD,CAArC;AACH;;AACD,iBAAO,KAAI,CAACF,QAAL,CAAcC,WAAd,CAAP;AACH,SANoC;AAOrCM,QAAAA,YAAY,EAAE,IAPuB;AAQrCC,QAAAA,UAAU,EAAE;AARyB,OAAzC;AAWA,aAAO,IAAP;AACH;;;;KAGL;;;AACA,IAAMC,SAAS,GAAG,IAAIV,SAAJ,EAAlB;AACAW,MAAM,CAACC,OAAP,GAAiBF,SAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "sourcesContent": [
        "'use strict';\n\n/**\n * ------------------------\n * simple homemade IOC container to serve our purposes.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\nclass Container {\n    constructor() {\n        this.services = {};\n    }\n\n    /**\n     * register a service by name, with the IOC container\n     *\n     * @param {string} serviceName\n     * @param {fn} callback\n     */\n    service(serviceName, callback) {\n        Object.defineProperty(this, serviceName, {\n            get: () => {\n                if (!this.services.hasOwnProperty(serviceName)) {\n                    this.services[serviceName] = callback(this);\n                }\n                return this.services[serviceName];\n            },\n            configurable: true,\n            enumerable: true\n        });\n\n        return this;\n    }\n}\n\n//export singleton instance\nconst container = new Container();\nmodule.exports = container;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567608948870
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/server.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'SRV';\n\nvar ioc = require('./util/iocContainer'); //imports\n\n\nvar _require = require('./lib/miner'),\n    Miner = _require.Miner;\n\nvar _require2 = require('./lib/blockchain'),\n    Blockchain = _require2.Blockchain;\n\nvar _require3 = require('./lib/wallet'),\n    Wallet = _require3.Wallet,\n    TransactionPool = _require3.TransactionPool;\n\nvar _require4 = require('./httpServer'),\n    HttpServer = _require4.HttpServer;\n\nvar config = require('./config');\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n\nvar Server =\n/*#__PURE__*/\nfunction () {\n  function Server() {\n    _classCallCheck(this, Server);\n  }\n\n  _createClass(Server, [{\n    key: \"run\",\n    value: function () {\n      var _run = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return initializeBlockchain();\n\n              case 2:\n                this.blockchain = _context.sent;\n                //on blockchain changes, save to database\n                this.blockchain.on('update', function () {\n                  ioc.database.saveBlockchain(_this.blockchain);\n                }); //create instance of wallet\n\n                _context.next = 6;\n                return initializeWallet();\n\n              case 6:\n                this.wallet = _context.sent;\n                //on wallet changes, save to database\n                this.wallet.on('update replace', function () {\n                  ioc.database.saveWallet(_this.wallet);\n                }); //create transaction pool\n\n                this.txPool = new TransactionPool(); //create instance of P2P server\n\n                this.p2pServer = ioc.p2pServerFactory.createInstance(this.blockchain, this.txPool, this.wallet); //create a miner\n\n                this.miner = new Miner(this.blockchain, this.txPool, this.wallet, this.p2pServer); //create and start server\n\n                this.httpServer = new HttpServer(this.blockchain, this.wallet, this.p2pServer, this.txPool, this.miner);\n                this.httpServer.start(); //createTestChain(); \n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function run() {\n        return _run.apply(this, arguments);\n      }\n\n      return run;\n    }()\n  }]);\n\n  return Server;\n}();\n\nfunction initializeBlockchain() {\n  return _initializeBlockchain.apply(this, arguments);\n}\n\nfunction _initializeBlockchain() {\n  _initializeBlockchain = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3() {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return exception.tryAsync(\n            /*#__PURE__*/\n            _asyncToGenerator(\n            /*#__PURE__*/\n            regeneratorRuntime.mark(function _callee2() {\n              var blockchain, blockchainData;\n              return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      logger.info('initializing blockchain...');\n                      blockchain = null;\n\n                      if (!config.USE_DATABASE) {\n                        _context2.next = 7;\n                        break;\n                      }\n\n                      _context2.next = 5;\n                      return ioc.database.getBlockchain();\n\n                    case 5:\n                      blockchainData = _context2.sent;\n\n                      if (blockchainData) {\n                        blockchain = Blockchain.fromJson(blockchainData);\n                      }\n\n                    case 7:\n                      if (!blockchain) {\n                        logger.info('no blockchain found in DB; creating new one...');\n                        blockchain = new Blockchain();\n                        ioc.database.saveBlockchain(blockchain);\n                      }\n\n                      return _context2.abrupt(\"return\", blockchain);\n\n                    case 9:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            })));\n\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _initializeBlockchain.apply(this, arguments);\n}\n\nfunction initializeWallet() {\n  return _initializeWallet.apply(this, arguments);\n} //TODO: convert these to unit tests \n\n\nfunction _initializeWallet() {\n  _initializeWallet = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5() {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return exception.tryAsync(\n            /*#__PURE__*/\n            _asyncToGenerator(\n            /*#__PURE__*/\n            regeneratorRuntime.mark(function _callee4() {\n              var wallet, walletData;\n              return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      logger.info('initializing wallet...');\n                      wallet = null;\n\n                      if (!config.USE_DATABASE) {\n                        _context4.next = 7;\n                        break;\n                      }\n\n                      _context4.next = 5;\n                      return ioc.database.getWallet();\n\n                    case 5:\n                      walletData = _context4.sent;\n\n                      if (walletData) {\n                        wallet = Wallet.fromJson(walletData);\n                      }\n\n                    case 7:\n                      if (!wallet) {\n                        logger.info('no wallet found in DB; creating new one...');\n                        wallet = new Wallet();\n                        ioc.database.saveWallet(wallet);\n                      }\n\n                      return _context4.abrupt(\"return\", wallet);\n\n                    case 9:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, _callee4);\n            })));\n\n          case 2:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _initializeWallet.apply(this, arguments);\n}\n\nfunction createTestChain() {\n  return _createTestChain.apply(this, arguments);\n}\n\nfunction _createTestChain() {\n  _createTestChain = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6() {\n    var wallet1, wallet2, wallet3, blockchain, txPool, miner1, miner2, miner3, bc;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            wallet1 = new Wallet();\n            wallet2 = new Wallet();\n            wallet3 = new Wallet();\n            blockchain = new Blockchain();\n            txPool = new TransactionPool();\n            miner1 = new Miner(blockchain, txPool, wallet1);\n            miner2 = new Miner(blockchain, txPool, wallet2);\n            miner3 = new Miner(blockchain, txPool, wallet3);\n            wallet1.createTransaction(wallet2.publicKey, 10, blockchain, txPool);\n            wallet1.createTransaction(wallet3.publicKey, 10, blockchain, txPool);\n            wallet3.createTransaction(wallet2.publicKey, 100, blockchain, txPool);\n            miner1.mine();\n            wallet1.updateBalance(blockchain);\n            wallet2.updateBalance(blockchain);\n            wallet3.updateBalance(blockchain);\n            console.log('wallet 1 balance: ' + wallet1.balance);\n            console.log('wallet 2 balance: ' + wallet2.balance);\n            console.log('wallet 3 balance: ' + wallet3.balance);\n            ioc.database.saveBlockchain(blockchain);\n            _context6.t0 = Blockchain;\n            _context6.next = 22;\n            return ioc.database.getBlockchain();\n\n          case 22:\n            _context6.t1 = _context6.sent;\n            bc = _context6.t0.fromJson.call(_context6.t0, _context6.t1);\n            wallet2.createTransaction(wallet1.publicKey, 10, blockchain, txPool);\n            wallet3.createTransaction(wallet1.publicKey, 10, blockchain, txPool);\n            wallet2.createTransaction(wallet3.publicKey, 100, blockchain, txPool);\n            miner3.mine();\n            wallet1.updateBalance(blockchain);\n            wallet2.updateBalance(blockchain);\n            wallet3.updateBalance(blockchain);\n            console.log('wallet 1 balance: ' + wallet1.balance);\n            console.log('wallet 2 balance: ' + wallet2.balance);\n            console.log('wallet 3 balance: ' + wallet3.balance);\n\n          case 34:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _createTestChain.apply(this, arguments);\n}\n\nmodule.exports = Server;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "LOG_TAG",
        "ioc",
        "require",
        "Miner",
        "Blockchain",
        "Wallet",
        "TransactionPool",
        "HttpServer",
        "config",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Server",
        "initializeBlockchain",
        "blockchain",
        "on",
        "database",
        "saveBlockchain",
        "initializeWallet",
        "wallet",
        "saveWallet",
        "txPool",
        "p2pServer",
        "p2pServerFactory",
        "createInstance",
        "miner",
        "httpServer",
        "start",
        "tryAsync",
        "info",
        "USE_DATABASE",
        "getBlockchain",
        "blockchainData",
        "fromJson",
        "getWallet",
        "walletData",
        "createTestChain",
        "wallet1",
        "wallet2",
        "wallet3",
        "miner1",
        "miner2",
        "miner3",
        "createTransaction",
        "publicKey",
        "mine",
        "updateBalance",
        "console",
        "log",
        "balance",
        "bc",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,KAAhB;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAnB,C,CAEA;;;eACkBA,OAAO,CAAC,aAAD,C;IAAjBC,K,YAAAA,K;;gBACeD,OAAO,CAAC,kBAAD,C;IAAtBE,U,aAAAA,U;;gBAC4BF,OAAO,CAAC,cAAD,C;IAAnCG,M,aAAAA,M;IAAQC,e,aAAAA,e;;gBACOJ,OAAO,CAAC,cAAD,C;IAAtBK,U,aAAAA,U;;AACR,IAAMC,MAAM,GAAGN,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAMO,MAAM,GAAGR,GAAG,CAACS,aAAJ,CAAkBC,YAAlB,CAA+BX,OAA/B,CAAf;AACA,IAAMY,SAAS,GAAGX,GAAG,CAACY,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;;IAEMM,M;;;;;;;;;;;;;;;;;;;;uBAG0BC,oBAAoB,E;;;AAA5C,qBAAKC,U;AAEL;AACA,qBAAKA,UAAL,CAAgBC,EAAhB,CAAmB,QAAnB,EAA6B,YAAM;AAC/BjB,kBAAAA,GAAG,CAACkB,QAAJ,CAAaC,cAAb,CAA4B,KAAI,CAACH,UAAjC;AACH,iBAFD,E,CAIA;;;uBACoBI,gBAAgB,E;;;AAApC,qBAAKC,M;AAEL;AACA,qBAAKA,MAAL,CAAYJ,EAAZ,CAAe,gBAAf,EAAiC,YAAM;AACnCjB,kBAAAA,GAAG,CAACkB,QAAJ,CAAaI,UAAb,CAAwB,KAAI,CAACD,MAA7B;AACH,iBAFD,E,CAIA;;AACA,qBAAKE,MAAL,GAAc,IAAIlB,eAAJ,EAAd,C,CAEA;;AACA,qBAAKmB,SAAL,GAAiBxB,GAAG,CAACyB,gBAAJ,CAAqBC,cAArB,CAAoC,KAAKV,UAAzC,EAAqD,KAAKO,MAA1D,EAAkE,KAAKF,MAAvE,CAAjB,C,CAEA;;AACA,qBAAKM,KAAL,GAAa,IAAIzB,KAAJ,CAAU,KAAKc,UAAf,EAA2B,KAAKO,MAAhC,EAAwC,KAAKF,MAA7C,EAAqD,KAAKG,SAA1D,CAAb,C,CAEA;;AACA,qBAAKI,UAAL,GAAkB,IAAItB,UAAJ,CAAe,KAAKU,UAApB,EAAgC,KAAKK,MAArC,EAA6C,KAAKG,SAAlD,EAA6D,KAAKD,MAAlE,EAA0E,KAAKI,KAA/E,CAAlB;AACA,qBAAKC,UAAL,CAAgBC,KAAhB,G,CAEA;;;;;;;;;;;;;;;;;;;;;SAKOd,oB;;;;;;;0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACiBJ,SAAS,CAACmB,QAAV;AAAA;AAAA;AAAA;AAAA,oCAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BtB,sBAAAA,MAAM,CAACuB,IAAP,CAAY,4BAAZ;AAEIf,sBAAAA,UAHwB,GAGX,IAHW;;AAAA,2BAKxBT,MAAM,CAACyB,YALiB;AAAA;AAAA;AAAA;;AAAA;AAAA,6BAMGhC,GAAG,CAACkB,QAAJ,CAAae,aAAb,EANH;;AAAA;AAMpBC,sBAAAA,cANoB;;AAOxB,0BAAIA,cAAJ,EAAoB;AAChBlB,wBAAAA,UAAU,GAAGb,UAAU,CAACgC,QAAX,CAAoBD,cAApB,CAAb;AACH;;AATuB;AAY5B,0BAAI,CAAClB,UAAL,EAAiB;AACbR,wBAAAA,MAAM,CAACuB,IAAP,CAAY,gDAAZ;AACAf,wBAAAA,UAAU,GAAG,IAAIb,UAAJ,EAAb;AACAH,wBAAAA,GAAG,CAACkB,QAAJ,CAAaC,cAAb,CAA4BH,UAA5B;AACH;;AAhB2B,wDAkBrBA,UAlBqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAnB,GADjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAuBeI,gB;;EAuBf;;;;;;0BAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACiBT,SAAS,CAACmB,QAAV;AAAA;AAAA;AAAA;AAAA,oCAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BtB,sBAAAA,MAAM,CAACuB,IAAP,CAAY,wBAAZ;AAEIV,sBAAAA,MAHwB,GAGf,IAHe;;AAAA,2BAKxBd,MAAM,CAACyB,YALiB;AAAA;AAAA;AAAA;;AAAA;AAAA,6BAMDhC,GAAG,CAACkB,QAAJ,CAAakB,SAAb,EANC;;AAAA;AAMpBC,sBAAAA,UANoB;;AAOxB,0BAAIA,UAAJ,EAAgB;AACZhB,wBAAAA,MAAM,GAAGjB,MAAM,CAAC+B,QAAP,CAAgBE,UAAhB,CAAT;AACH;;AATuB;AAY5B,0BAAI,CAAChB,MAAL,EAAa;AACTb,wBAAAA,MAAM,CAACuB,IAAP,CAAY,4CAAZ;AACAV,wBAAAA,MAAM,GAAG,IAAIjB,MAAJ,EAAT;AACAJ,wBAAAA,GAAG,CAACkB,QAAJ,CAAaI,UAAb,CAAwBD,MAAxB;AACH;;AAhB2B,wDAkBrBA,MAlBqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAnB,GADjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAwBeiB,e;;;;;;;0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,YAAAA,OADV,GACoB,IAAInC,MAAJ,EADpB;AAEUoC,YAAAA,OAFV,GAEoB,IAAIpC,MAAJ,EAFpB;AAGUqC,YAAAA,OAHV,GAGoB,IAAIrC,MAAJ,EAHpB;AAKUY,YAAAA,UALV,GAKuB,IAAIb,UAAJ,EALvB;AAMUoB,YAAAA,MANV,GAMmB,IAAIlB,eAAJ,EANnB;AAQUqC,YAAAA,MARV,GAQmB,IAAIxC,KAAJ,CAAUc,UAAV,EAAsBO,MAAtB,EAA8BgB,OAA9B,CARnB;AASUI,YAAAA,MATV,GASmB,IAAIzC,KAAJ,CAAUc,UAAV,EAAsBO,MAAtB,EAA8BiB,OAA9B,CATnB;AAUUI,YAAAA,MAVV,GAUmB,IAAI1C,KAAJ,CAAUc,UAAV,EAAsBO,MAAtB,EAA8BkB,OAA9B,CAVnB;AAYIF,YAAAA,OAAO,CAACM,iBAAR,CAA0BL,OAAO,CAACM,SAAlC,EAA6C,EAA7C,EAAiD9B,UAAjD,EAA6DO,MAA7D;AACAgB,YAAAA,OAAO,CAACM,iBAAR,CAA0BJ,OAAO,CAACK,SAAlC,EAA6C,EAA7C,EAAiD9B,UAAjD,EAA6DO,MAA7D;AACAkB,YAAAA,OAAO,CAACI,iBAAR,CAA0BL,OAAO,CAACM,SAAlC,EAA6C,GAA7C,EAAkD9B,UAAlD,EAA8DO,MAA9D;AAEAmB,YAAAA,MAAM,CAACK,IAAP;AAEAR,YAAAA,OAAO,CAACS,aAAR,CAAsBhC,UAAtB;AACAwB,YAAAA,OAAO,CAACQ,aAAR,CAAsBhC,UAAtB;AACAyB,YAAAA,OAAO,CAACO,aAAR,CAAsBhC,UAAtB;AAEAiC,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBX,OAAO,CAACY,OAA3C;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBV,OAAO,CAACW,OAA3C;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBT,OAAO,CAACU,OAA3C;AAEAnD,YAAAA,GAAG,CAACkB,QAAJ,CAAaC,cAAb,CAA4BH,UAA5B;AA1BJ,2BA2Beb,UA3Bf;AAAA;AAAA,mBA2ByCH,GAAG,CAACkB,QAAJ,CAAae,aAAb,EA3BzC;;AAAA;AAAA;AA2BUmB,YAAAA,EA3BV,gBA2B0BjB,QA3B1B;AA6BIK,YAAAA,OAAO,CAACK,iBAAR,CAA0BN,OAAO,CAACO,SAAlC,EAA6C,EAA7C,EAAiD9B,UAAjD,EAA6DO,MAA7D;AACAkB,YAAAA,OAAO,CAACI,iBAAR,CAA0BN,OAAO,CAACO,SAAlC,EAA6C,EAA7C,EAAiD9B,UAAjD,EAA6DO,MAA7D;AACAiB,YAAAA,OAAO,CAACK,iBAAR,CAA0BJ,OAAO,CAACK,SAAlC,EAA6C,GAA7C,EAAkD9B,UAAlD,EAA8DO,MAA9D;AAEAqB,YAAAA,MAAM,CAACG,IAAP;AAEAR,YAAAA,OAAO,CAACS,aAAR,CAAsBhC,UAAtB;AACAwB,YAAAA,OAAO,CAACQ,aAAR,CAAsBhC,UAAtB;AACAyB,YAAAA,OAAO,CAACO,aAAR,CAAsBhC,UAAtB;AAEAiC,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBX,OAAO,CAACY,OAA3C;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBV,OAAO,CAACW,OAA3C;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBT,OAAO,CAACU,OAA3C;;AAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA6CAE,MAAM,CAACC,OAAP,GAAiBxC,MAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'SRV';\n\nconst ioc = require('./util/iocContainer');\n\n//imports\nconst { Miner } = require('./lib/miner');\nconst { Blockchain } = require('./lib/blockchain');\nconst { Wallet, TransactionPool } = require('./lib/wallet');\nconst { HttpServer } = require('./httpServer');\nconst config = require('./config');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\nclass Server {\n    async run() {\n        //create instance of blockchain\n        this.blockchain = await initializeBlockchain();\n    \n        //on blockchain changes, save to database\n        this.blockchain.on('update', () => {\n            ioc.database.saveBlockchain(this.blockchain);\n        });\n    \n        //create instance of wallet\n        this.wallet = await initializeWallet();\n    \n        //on wallet changes, save to database\n        this.wallet.on('update replace', () => {\n            ioc.database.saveWallet(this.wallet);\n        });\n    \n        //create transaction pool\n        this.txPool = new TransactionPool();\n    \n        //create instance of P2P server\n        this.p2pServer = ioc.p2pServerFactory.createInstance(this.blockchain, this.txPool, this.wallet);\n    \n        //create a miner\n        this.miner = new Miner(this.blockchain, this.txPool, this.wallet, this.p2pServer);\n    \n        //create and start server\n        this.httpServer = new HttpServer(this.blockchain, this.wallet, this.p2pServer, this.txPool, this.miner);\n        this.httpServer.start();\n        \n        //createTestChain(); \n    }\n}\n\n\nasync function initializeBlockchain() {\n    return await exception.tryAsync(async () => {\n        logger.info('initializing blockchain...');\n\n        let blockchain = null;\n\n        if (config.USE_DATABASE) {\n            let blockchainData = await ioc.database.getBlockchain();\n            if (blockchainData) {\n                blockchain = Blockchain.fromJson(blockchainData);\n            }\n        }\n\n        if (!blockchain) {\n            logger.info('no blockchain found in DB; creating new one...')\n            blockchain = new Blockchain();\n            ioc.database.saveBlockchain(blockchain);\n        }\n\n        return blockchain;\n    });\n}\n\nasync function initializeWallet() {\n    return await exception.tryAsync(async () => {\n        logger.info('initializing wallet...');\n\n        let wallet = null;\n\n        if (config.USE_DATABASE) {\n            let walletData = await ioc.database.getWallet();\n            if (walletData) {\n                wallet = Wallet.fromJson(walletData);\n            }\n        }\n\n        if (!wallet) {\n            logger.info('no wallet found in DB; creating new one...')\n            wallet = new Wallet();\n            ioc.database.saveWallet(wallet);\n        }\n\n        return wallet;\n    });\n}\n\n//TODO: convert these to unit tests \nasync function createTestChain() {\n    const wallet1 = new Wallet(); \n    const wallet2 = new Wallet(); \n    const wallet3 = new Wallet(); \n    \n    const blockchain = new Blockchain(); \n    const txPool = new TransactionPool(); \n\n    const miner1 = new Miner(blockchain, txPool, wallet1); \n    const miner2 = new Miner(blockchain, txPool, wallet2); \n    const miner3 = new Miner(blockchain, txPool, wallet3); \n    \n    wallet1.createTransaction(wallet2.publicKey, 10, blockchain, txPool); \n    wallet1.createTransaction(wallet3.publicKey, 10, blockchain, txPool); \n    wallet3.createTransaction(wallet2.publicKey, 100, blockchain, txPool);     \n    \n    miner1.mine(); \n    \n    wallet1.updateBalance(blockchain);\n    wallet2.updateBalance(blockchain);\n    wallet3.updateBalance(blockchain);\n    \n    console.log('wallet 1 balance: ' + wallet1.balance);\n    console.log('wallet 2 balance: ' + wallet2.balance);\n    console.log('wallet 3 balance: ' + wallet3.balance);\n    \n    ioc.database.saveBlockchain(blockchain); \n    const bc = Blockchain.fromJson(await ioc.database.getBlockchain()); \n    \n    wallet2.createTransaction(wallet1.publicKey, 10, blockchain, txPool); \n    wallet3.createTransaction(wallet1.publicKey, 10, blockchain, txPool); \n    wallet2.createTransaction(wallet3.publicKey, 100, blockchain, txPool);     \n    \n    miner3.mine();\n    \n    wallet1.updateBalance(blockchain);\n    wallet2.updateBalance(blockchain);\n    wallet3.updateBalance(blockchain);\n    \n    console.log('wallet 1 balance: ' + wallet1.balance);\n    console.log('wallet 2 balance: ' + wallet2.balance);\n    console.log('wallet 3 balance: ' + wallet3.balance);\n}\n\n\nmodule.exports = Server;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567756666452
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/index.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar Miner = require('./classes/Miner');\n\nmodule.exports = {\n  Miner: Miner\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIk1pbmVyIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLGlCQUFELENBQXJCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkgsRUFBQUEsS0FBSyxFQUFMQTtBQURhLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FjZXIvRGVza3RvcC9taW5hY29pbi9taW5hY29pbi9taW5hY29pbi1zZXJ2ZXIvc3JjL2xpYi9taW5lciIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgTWluZXIgPSByZXF1aXJlKCcuL2NsYXNzZXMvTWluZXInKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgTWluZXJcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Miner",
        "require",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,iBAAD,CAArB;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACbH,EAAAA,KAAK,EAALA;AADa,CAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner",
      "sourcesContent": [
        "'use strict';\n\nconst Miner = require('./classes/Miner');\n\nmodule.exports = {\n    Miner\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1567354906401
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes/Miner.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes/Miner.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes/Miner.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes/Miner.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes",
        "sourceFileName": "Miner.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'MNR';\n\nvar ioc = require('../../../util/iocContainer');\n\nvar _require = require('../../wallet'),\n    Transaction = _require.Transaction,\n    Wallet = _require.Wallet;\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: Miner\n * ---------------\n * handles mining new coins \n *\n * author: John R. Kosinski\n */\n\nvar Miner =\n/*#__PURE__*/\nfunction () {\n  _createClass(Miner, [{\n    key: \"blockchain\",\n    get: function get() {\n      return this._blockchain;\n    }\n  }, {\n    key: \"transactionPool\",\n    get: function get() {\n      return this._transactionPool;\n    }\n  }, {\n    key: \"wallet\",\n    get: function get() {\n      return this._wallet;\n    }\n  }, {\n    key: \"p2pServer\",\n    get: function get() {\n      return this._p2pServer;\n    }\n    /**\n     * constructor \n     * @param {Blockchain} blockchain \n     * @param {TransactionPool} transactionPool \n     * @param {Wallet} wallet \n     * @param {IP2PServer} p2pServer \n     */\n\n  }]);\n\n  function Miner(blockchain, transactionPool, wallet, p2pServer) {\n    _classCallCheck(this, Miner);\n\n    this._blockchain = blockchain;\n    this._transactionPool = transactionPool;\n    this._wallet = wallet;\n    this._p2pServer = p2pServer;\n  }\n  /**\n   * selects transactions from the transaction pool to add to a new block, creates \n   * & adds the new block to the blockchain, and returns the new block. \n   * @returns {Block}\n   */\n\n  /*Block*/\n\n\n  _createClass(Miner, [{\n    key: \"mine\",\n    value: function mine() {\n      var _this = this;\n\n      return exception[\"try\"](function () {\n        //get transactions from transaction pool\n        var validTransactions = _this.transactionPool.validTransactions();\n\n        if (validTransactions && validTransactions.length > 0) {\n          //add a reward for self\n          validTransactions.push(Transaction.rewardTransaction(_this.wallet, Wallet.blockchainWallet())); //add them into a block\n\n          var block = _this.blockchain.addBlock(validTransactions);\n\n          if (block) {\n            //sync the chain\n            if (_this.p2pServer) {\n              _this.p2pServer.syncChain();\n            } //clear the transaction pool\n\n\n            _this.transactionPool.clear(); //broadcast directive to clear transaction pool\n\n\n            if (_this.p2pServer) {\n              _this.p2pServer.broadcastClearTransactions();\n            }\n          } else {\n            //clear the transaction pool; maybe we have an old or corrupt pool\n            _this.transactionPool.clear();\n          }\n\n          return block;\n        } else {\n          logger.info('no valid transactions available to mine');\n          return null;\n        }\n      });\n    }\n  }]);\n\n  return Miner;\n}();\n\nmodule.exports = Miner;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1pbmVyLmpzIl0sIm5hbWVzIjpbIkxPR19UQUciLCJpb2MiLCJyZXF1aXJlIiwiVHJhbnNhY3Rpb24iLCJXYWxsZXQiLCJsb2dnZXIiLCJsb2dnZXJGYWN0b3J5IiwiY3JlYXRlTG9nZ2VyIiwiZXhjZXB0aW9uIiwiZWhGYWN0b3J5IiwiY3JlYXRlSGFuZGxlciIsIk1pbmVyIiwiX2Jsb2NrY2hhaW4iLCJfdHJhbnNhY3Rpb25Qb29sIiwiX3dhbGxldCIsIl9wMnBTZXJ2ZXIiLCJibG9ja2NoYWluIiwidHJhbnNhY3Rpb25Qb29sIiwid2FsbGV0IiwicDJwU2VydmVyIiwidmFsaWRUcmFuc2FjdGlvbnMiLCJsZW5ndGgiLCJwdXNoIiwicmV3YXJkVHJhbnNhY3Rpb24iLCJibG9ja2NoYWluV2FsbGV0IiwiYmxvY2siLCJhZGRCbG9jayIsInN5bmNDaGFpbiIsImNsZWFyIiwiYnJvYWRjYXN0Q2xlYXJUcmFuc2FjdGlvbnMiLCJpbmZvIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBRUEsSUFBTUEsT0FBTyxHQUFHLEtBQWhCOztBQUVBLElBQU1DLEdBQUcsR0FBR0MsT0FBTyxDQUFDLDRCQUFELENBQW5COztlQUNnQ0EsT0FBTyxDQUFDLGNBQUQsQztJQUEvQkMsVyxZQUFBQSxXO0lBQWFDLE0sWUFBQUEsTTs7QUFFckIsSUFBTUMsTUFBTSxHQUFHSixHQUFHLENBQUNLLGFBQUosQ0FBa0JDLFlBQWxCLENBQStCUCxPQUEvQixDQUFmO0FBQ0EsSUFBTVEsU0FBUyxHQUFHUCxHQUFHLENBQUNRLFNBQUosQ0FBY0MsYUFBZCxDQUE0QkwsTUFBNUIsQ0FBbEI7QUFFQTs7Ozs7Ozs7SUFPTU0sSzs7Ozs7d0JBQ2U7QUFBRSxhQUFPLEtBQUtDLFdBQVo7QUFBMEI7Ozt3QkFDdkI7QUFBRSxhQUFPLEtBQUtDLGdCQUFaO0FBQStCOzs7d0JBQzFDO0FBQUUsYUFBTyxLQUFLQyxPQUFaO0FBQXNCOzs7d0JBQ3JCO0FBQUUsYUFBTyxLQUFLQyxVQUFaO0FBQXlCO0FBRTNDOzs7Ozs7Ozs7O0FBT0EsaUJBQVlDLFVBQVosRUFBd0JDLGVBQXhCLEVBQXlDQyxNQUF6QyxFQUFpREMsU0FBakQsRUFBNEQ7QUFBQTs7QUFDeEQsU0FBS1AsV0FBTCxHQUFtQkksVUFBbkI7QUFDQSxTQUFLSCxnQkFBTCxHQUF3QkksZUFBeEI7QUFDQSxTQUFLSCxPQUFMLEdBQWVJLE1BQWY7QUFDQSxTQUFLSCxVQUFMLEdBQWtCSSxTQUFsQjtBQUNIO0FBRUQ7Ozs7OztBQUtBOzs7OzsyQkFBaUI7QUFBQTs7QUFDYixhQUFPWCxTQUFTLE9BQVQsQ0FBYyxZQUFNO0FBQ3ZCO0FBQ0EsWUFBTVksaUJBQWlCLEdBQUcsS0FBSSxDQUFDSCxlQUFMLENBQXFCRyxpQkFBckIsRUFBMUI7O0FBRUEsWUFBSUEsaUJBQWlCLElBQUlBLGlCQUFpQixDQUFDQyxNQUFsQixHQUEyQixDQUFwRCxFQUF3RDtBQUNwRDtBQUNBRCxVQUFBQSxpQkFBaUIsQ0FBQ0UsSUFBbEIsQ0FBdUJuQixXQUFXLENBQUNvQixpQkFBWixDQUE4QixLQUFJLENBQUNMLE1BQW5DLEVBQTJDZCxNQUFNLENBQUNvQixnQkFBUCxFQUEzQyxDQUF2QixFQUZvRCxDQUlwRDs7QUFDQSxjQUFNQyxLQUFLLEdBQUcsS0FBSSxDQUFDVCxVQUFMLENBQWdCVSxRQUFoQixDQUF5Qk4saUJBQXpCLENBQWQ7O0FBRUEsY0FBSUssS0FBSixFQUFXO0FBQ1A7QUFDQSxnQkFBSSxLQUFJLENBQUNOLFNBQVQsRUFBb0I7QUFDaEIsY0FBQSxLQUFJLENBQUNBLFNBQUwsQ0FBZVEsU0FBZjtBQUNILGFBSk0sQ0FNUDs7O0FBQ0EsWUFBQSxLQUFJLENBQUNWLGVBQUwsQ0FBcUJXLEtBQXJCLEdBUE8sQ0FTUDs7O0FBQ0EsZ0JBQUksS0FBSSxDQUFDVCxTQUFULEVBQW9CO0FBQ2hCLGNBQUEsS0FBSSxDQUFDQSxTQUFMLENBQWVVLDBCQUFmO0FBQ0g7QUFDSixXQWJELE1BY0s7QUFDRDtBQUNBLFlBQUEsS0FBSSxDQUFDWixlQUFMLENBQXFCVyxLQUFyQjtBQUNIOztBQUVELGlCQUFPSCxLQUFQO0FBQ0gsU0EzQkQsTUE0Qks7QUFDRHBCLFVBQUFBLE1BQU0sQ0FBQ3lCLElBQVAsQ0FBWSx5Q0FBWjtBQUNBLGlCQUFPLElBQVA7QUFDSDtBQUNKLE9BcENNLENBQVA7QUFxQ0g7Ozs7OztBQUdMQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJyQixLQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9hY2VyL0Rlc2t0b3AvbWluYWNvaW4vbWluYWNvaW4vbWluYWNvaW4tc2VydmVyL3NyYy9saWIvbWluZXIvY2xhc3NlcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgTE9HX1RBRyA9ICdNTlInO1xuXG5jb25zdCBpb2MgPSByZXF1aXJlKCcuLi8uLi8uLi91dGlsL2lvY0NvbnRhaW5lcicpO1xuY29uc3QgeyBUcmFuc2FjdGlvbiwgV2FsbGV0IH0gPSByZXF1aXJlKCcuLi8uLi93YWxsZXQnKTtcblxuY29uc3QgbG9nZ2VyID0gaW9jLmxvZ2dlckZhY3RvcnkuY3JlYXRlTG9nZ2VyKExPR19UQUcpO1xuY29uc3QgZXhjZXB0aW9uID0gaW9jLmVoRmFjdG9yeS5jcmVhdGVIYW5kbGVyKGxvZ2dlcik7XG5cbi8qKlxuICogbWluYWNvaW46IE1pbmVyXG4gKiAtLS0tLS0tLS0tLS0tLS1cbiAqIGhhbmRsZXMgbWluaW5nIG5ldyBjb2lucyBcbiAqXG4gKiBhdXRob3I6IEpvaG4gUi4gS29zaW5za2lcbiAqL1xuY2xhc3MgTWluZXIge1xuICAgIGdldCBibG9ja2NoYWluKCkgeyByZXR1cm4gdGhpcy5fYmxvY2tjaGFpbjsgfVxuICAgIGdldCB0cmFuc2FjdGlvblBvb2woKSB7IHJldHVybiB0aGlzLl90cmFuc2FjdGlvblBvb2w7IH1cbiAgICBnZXQgd2FsbGV0KCkgeyByZXR1cm4gdGhpcy5fd2FsbGV0OyB9XG4gICAgZ2V0IHAycFNlcnZlcigpIHsgcmV0dXJuIHRoaXMuX3AycFNlcnZlcjsgfVxuXG4gICAgLyoqXG4gICAgICogY29uc3RydWN0b3IgXG4gICAgICogQHBhcmFtIHtCbG9ja2NoYWlufSBibG9ja2NoYWluIFxuICAgICAqIEBwYXJhbSB7VHJhbnNhY3Rpb25Qb29sfSB0cmFuc2FjdGlvblBvb2wgXG4gICAgICogQHBhcmFtIHtXYWxsZXR9IHdhbGxldCBcbiAgICAgKiBAcGFyYW0ge0lQMlBTZXJ2ZXJ9IHAycFNlcnZlciBcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihibG9ja2NoYWluLCB0cmFuc2FjdGlvblBvb2wsIHdhbGxldCwgcDJwU2VydmVyKSB7XG4gICAgICAgIHRoaXMuX2Jsb2NrY2hhaW4gPSBibG9ja2NoYWluO1xuICAgICAgICB0aGlzLl90cmFuc2FjdGlvblBvb2wgPSB0cmFuc2FjdGlvblBvb2w7XG4gICAgICAgIHRoaXMuX3dhbGxldCA9IHdhbGxldDtcbiAgICAgICAgdGhpcy5fcDJwU2VydmVyID0gcDJwU2VydmVyO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHNlbGVjdHMgdHJhbnNhY3Rpb25zIGZyb20gdGhlIHRyYW5zYWN0aW9uIHBvb2wgdG8gYWRkIHRvIGEgbmV3IGJsb2NrLCBjcmVhdGVzIFxuICAgICAqICYgYWRkcyB0aGUgbmV3IGJsb2NrIHRvIHRoZSBibG9ja2NoYWluLCBhbmQgcmV0dXJucyB0aGUgbmV3IGJsb2NrLiBcbiAgICAgKiBAcmV0dXJucyB7QmxvY2t9XG4gICAgICovXG4gICAgLypCbG9jayovIG1pbmUoKSB7XG4gICAgICAgIHJldHVybiBleGNlcHRpb24udHJ5KCgpID0+IHtcbiAgICAgICAgICAgIC8vZ2V0IHRyYW5zYWN0aW9ucyBmcm9tIHRyYW5zYWN0aW9uIHBvb2xcbiAgICAgICAgICAgIGNvbnN0IHZhbGlkVHJhbnNhY3Rpb25zID0gdGhpcy50cmFuc2FjdGlvblBvb2wudmFsaWRUcmFuc2FjdGlvbnMoKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKHZhbGlkVHJhbnNhY3Rpb25zICYmIHZhbGlkVHJhbnNhY3Rpb25zLmxlbmd0aCA+IDApICB7XG4gICAgICAgICAgICAgICAgLy9hZGQgYSByZXdhcmQgZm9yIHNlbGZcbiAgICAgICAgICAgICAgICB2YWxpZFRyYW5zYWN0aW9ucy5wdXNoKFRyYW5zYWN0aW9uLnJld2FyZFRyYW5zYWN0aW9uKHRoaXMud2FsbGV0LCBXYWxsZXQuYmxvY2tjaGFpbldhbGxldCgpKSk7XG4gICAgXG4gICAgICAgICAgICAgICAgLy9hZGQgdGhlbSBpbnRvIGEgYmxvY2tcbiAgICAgICAgICAgICAgICBjb25zdCBibG9jayA9IHRoaXMuYmxvY2tjaGFpbi5hZGRCbG9jayh2YWxpZFRyYW5zYWN0aW9ucyk7XG4gICAgXG4gICAgICAgICAgICAgICAgaWYgKGJsb2NrKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vc3luYyB0aGUgY2hhaW5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMucDJwU2VydmVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnAycFNlcnZlci5zeW5jQ2hhaW4oKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLy9jbGVhciB0aGUgdHJhbnNhY3Rpb24gcG9vbFxuICAgICAgICAgICAgICAgICAgICB0aGlzLnRyYW5zYWN0aW9uUG9vbC5jbGVhcigpO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLy9icm9hZGNhc3QgZGlyZWN0aXZlIHRvIGNsZWFyIHRyYW5zYWN0aW9uIHBvb2xcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMucDJwU2VydmVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnAycFNlcnZlci5icm9hZGNhc3RDbGVhclRyYW5zYWN0aW9ucygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvL2NsZWFyIHRoZSB0cmFuc2FjdGlvbiBwb29sOyBtYXliZSB3ZSBoYXZlIGFuIG9sZCBvciBjb3JydXB0IHBvb2xcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50cmFuc2FjdGlvblBvb2wuY2xlYXIoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICAgICAgcmV0dXJuIGJsb2NrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbG9nZ2VyLmluZm8oJ25vIHZhbGlkIHRyYW5zYWN0aW9ucyBhdmFpbGFibGUgdG8gbWluZScpOyBcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsgXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBNaW5lcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Miner.js"
      ],
      "names": [
        "LOG_TAG",
        "ioc",
        "require",
        "Transaction",
        "Wallet",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Miner",
        "_blockchain",
        "_transactionPool",
        "_wallet",
        "_p2pServer",
        "blockchain",
        "transactionPool",
        "wallet",
        "p2pServer",
        "validTransactions",
        "length",
        "push",
        "rewardTransaction",
        "blockchainWallet",
        "block",
        "addBlock",
        "syncChain",
        "clear",
        "broadcastClearTransactions",
        "info",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAG,KAAhB;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,4BAAD,CAAnB;;eACgCA,OAAO,CAAC,cAAD,C;IAA/BC,W,YAAAA,W;IAAaC,M,YAAAA,M;;AAErB,IAAMC,MAAM,GAAGJ,GAAG,CAACK,aAAJ,CAAkBC,YAAlB,CAA+BP,OAA/B,CAAf;AACA,IAAMQ,SAAS,GAAGP,GAAG,CAACQ,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;IAOMM,K;;;;;wBACe;AAAE,aAAO,KAAKC,WAAZ;AAA0B;;;wBACvB;AAAE,aAAO,KAAKC,gBAAZ;AAA+B;;;wBAC1C;AAAE,aAAO,KAAKC,OAAZ;AAAsB;;;wBACrB;AAAE,aAAO,KAAKC,UAAZ;AAAyB;AAE3C;;;;;;;;;;AAOA,iBAAYC,UAAZ,EAAwBC,eAAxB,EAAyCC,MAAzC,EAAiDC,SAAjD,EAA4D;AAAA;;AACxD,SAAKP,WAAL,GAAmBI,UAAnB;AACA,SAAKH,gBAAL,GAAwBI,eAAxB;AACA,SAAKH,OAAL,GAAeI,MAAf;AACA,SAAKH,UAAL,GAAkBI,SAAlB;AACH;AAED;;;;;;AAKA;;;;;2BAAiB;AAAA;;AACb,aAAOX,SAAS,OAAT,CAAc,YAAM;AACvB;AACA,YAAMY,iBAAiB,GAAG,KAAI,CAACH,eAAL,CAAqBG,iBAArB,EAA1B;;AAEA,YAAIA,iBAAiB,IAAIA,iBAAiB,CAACC,MAAlB,GAA2B,CAApD,EAAwD;AACpD;AACAD,UAAAA,iBAAiB,CAACE,IAAlB,CAAuBnB,WAAW,CAACoB,iBAAZ,CAA8B,KAAI,CAACL,MAAnC,EAA2Cd,MAAM,CAACoB,gBAAP,EAA3C,CAAvB,EAFoD,CAIpD;;AACA,cAAMC,KAAK,GAAG,KAAI,CAACT,UAAL,CAAgBU,QAAhB,CAAyBN,iBAAzB,CAAd;;AAEA,cAAIK,KAAJ,EAAW;AACP;AACA,gBAAI,KAAI,CAACN,SAAT,EAAoB;AAChB,cAAA,KAAI,CAACA,SAAL,CAAeQ,SAAf;AACH,aAJM,CAMP;;;AACA,YAAA,KAAI,CAACV,eAAL,CAAqBW,KAArB,GAPO,CASP;;;AACA,gBAAI,KAAI,CAACT,SAAT,EAAoB;AAChB,cAAA,KAAI,CAACA,SAAL,CAAeU,0BAAf;AACH;AACJ,WAbD,MAcK;AACD;AACA,YAAA,KAAI,CAACZ,eAAL,CAAqBW,KAArB;AACH;;AAED,iBAAOH,KAAP;AACH,SA3BD,MA4BK;AACDpB,UAAAA,MAAM,CAACyB,IAAP,CAAY,yCAAZ;AACA,iBAAO,IAAP;AACH;AACJ,OApCM,CAAP;AAqCH;;;;;;AAGLC,MAAM,CAACC,OAAP,GAAiBrB,KAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'MNR';\n\nconst ioc = require('../../../util/iocContainer');\nconst { Transaction, Wallet } = require('../../wallet');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: Miner\n * ---------------\n * handles mining new coins \n *\n * author: John R. Kosinski\n */\nclass Miner {\n    get blockchain() { return this._blockchain; }\n    get transactionPool() { return this._transactionPool; }\n    get wallet() { return this._wallet; }\n    get p2pServer() { return this._p2pServer; }\n\n    /**\n     * constructor \n     * @param {Blockchain} blockchain \n     * @param {TransactionPool} transactionPool \n     * @param {Wallet} wallet \n     * @param {IP2PServer} p2pServer \n     */\n    constructor(blockchain, transactionPool, wallet, p2pServer) {\n        this._blockchain = blockchain;\n        this._transactionPool = transactionPool;\n        this._wallet = wallet;\n        this._p2pServer = p2pServer;\n    }\n\n    /**\n     * selects transactions from the transaction pool to add to a new block, creates \n     * & adds the new block to the blockchain, and returns the new block. \n     * @returns {Block}\n     */\n    /*Block*/ mine() {\n        return exception.try(() => {\n            //get transactions from transaction pool\n            const validTransactions = this.transactionPool.validTransactions();\n            \n            if (validTransactions && validTransactions.length > 0)  {\n                //add a reward for self\n                validTransactions.push(Transaction.rewardTransaction(this.wallet, Wallet.blockchainWallet()));\n    \n                //add them into a block\n                const block = this.blockchain.addBlock(validTransactions);\n    \n                if (block) {\n                    //sync the chain\n                    if (this.p2pServer) {\n                        this.p2pServer.syncChain();\n                    }\n        \n                    //clear the transaction pool\n                    this.transactionPool.clear();\n        \n                    //broadcast directive to clear transaction pool\n                    if (this.p2pServer) {\n                        this.p2pServer.broadcastClearTransactions();\n                    }\n                }\n                else {\n                    //clear the transaction pool; maybe we have an old or corrupt pool\n                    this.transactionPool.clear();\n                }\n    \n                return block;\n            }\n            else {\n                logger.info('no valid transactions available to mine'); \n                return null; \n            }\n        });\n    }\n}\n\nmodule.exports = Miner;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567678203299
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/index.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar Transaction = require('./classes/Transaction');\n\nvar TransactionPool = require('./classes/TransactionPool');\n\nvar Wallet = require('./classes/Wallet');\n\nmodule.exports = {\n  Transaction: Transaction,\n  TransactionPool: TransactionPool,\n  Wallet: Wallet\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlRyYW5zYWN0aW9uIiwicmVxdWlyZSIsIlRyYW5zYWN0aW9uUG9vbCIsIldhbGxldCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLFdBQVcsR0FBR0MsT0FBTyxDQUFDLHVCQUFELENBQTNCOztBQUNBLElBQU1DLGVBQWUsR0FBR0QsT0FBTyxDQUFDLDJCQUFELENBQS9COztBQUNBLElBQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLGtCQUFELENBQXRCOztBQUVBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkwsRUFBQUEsV0FBVyxFQUFYQSxXQURhO0FBRWJFLEVBQUFBLGVBQWUsRUFBZkEsZUFGYTtBQUdiQyxFQUFBQSxNQUFNLEVBQU5BO0FBSGEsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21pbmFjb2luL21pbmFjb2luLXNlcnZlci9zcmMvbGliL3dhbGxldCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgVHJhbnNhY3Rpb24gPSByZXF1aXJlKCcuL2NsYXNzZXMvVHJhbnNhY3Rpb24nKTtcbmNvbnN0IFRyYW5zYWN0aW9uUG9vbCA9IHJlcXVpcmUoJy4vY2xhc3Nlcy9UcmFuc2FjdGlvblBvb2wnKTtcbmNvbnN0IFdhbGxldCA9IHJlcXVpcmUoJy4vY2xhc3Nlcy9XYWxsZXQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgVHJhbnNhY3Rpb24sXG4gICAgVHJhbnNhY3Rpb25Qb29sLFxuICAgIFdhbGxldFxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Transaction",
        "require",
        "TransactionPool",
        "Wallet",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,WAAW,GAAGC,OAAO,CAAC,uBAAD,CAA3B;;AACA,IAAMC,eAAe,GAAGD,OAAO,CAAC,2BAAD,CAA/B;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,kBAAD,CAAtB;;AAEAG,MAAM,CAACC,OAAP,GAAiB;AACbL,EAAAA,WAAW,EAAXA,WADa;AAEbE,EAAAA,eAAe,EAAfA,eAFa;AAGbC,EAAAA,MAAM,EAANA;AAHa,CAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet",
      "sourcesContent": [
        "'use strict';\n\nconst Transaction = require('./classes/Transaction');\nconst TransactionPool = require('./classes/TransactionPool');\nconst Wallet = require('./classes/Wallet');\n\nmodule.exports = {\n    Transaction,\n    TransactionPool,\n    Wallet\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1567269278063
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Transaction.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Transaction.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Transaction.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Transaction.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
        "sourceFileName": "Transaction.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'TRNS';\n\nvar cryptoUtil = require('../../../util/cryptoUtil');\n\nvar ioc = require('../../../util/iocContainer');\n\nvar _require = require('../../../config'),\n    MINING_REWARD = _require.MINING_REWARD;\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: Transaction\n * ---------------------\n * a transaction consists of one input and two outputs. The first output goes to the\n * recipient; the second output sends the change back to the sender. The sender's entire\n * wallet balance is the input to the transaction, the actual sent amount is the first\n * output (to the recipient), and the remainder is in the second output back to the sender.\n * \n * Input format: {\n *      timestamp: <int>,  //datetime in ms\n *      amount: <float>,   //full amount of sender's wallet\n *      address: <string>, //public key of sender wallet\n *      signature: <EC.Signature> //cryptographic signature of transaction \n * }\n * \n * Output format: {\n *      amount: <float>,   //amount to send to address\n *      address: <string>, //public key of recipient wallet\n * }\n *\n * author: John R. Kosinski\n */\n\nvar Transaction =\n/*#__PURE__*/\nfunction () {\n  /**\n   * constructor\n   */\n  function Transaction() {\n    _classCallCheck(this, Transaction);\n\n    this.id = cryptoUtil.id();\n    this.input = null;\n    this.outputs = [];\n    logger.info(\"created new transaction \".concat(this.id));\n  }\n  /*Transaction*/\n\n\n  _createClass(Transaction, [{\n    key: \"update\",\n    value: function update(senderWallet, recipient, amount) {\n      var _this = this;\n\n      return exception[\"try\"](function () {\n        logger.info(\"updating transaction \".concat(_this.id, \"...\"));\n\n        var senderOutput = _this.outputs.find(function (output) {\n          return output.address === senderWallet.publicKey;\n        });\n\n        if (amount > senderWallet.amount) {\n          logger.warn(\"amount \".concat(amount, \" exceeds balance\"));\n          return null;\n        }\n\n        senderOutput.amount = senderOutput.amount - amount;\n\n        _this.outputs.push({\n          amount: amount,\n          address: recipient\n        });\n\n        Transaction.signTransaction(_this, senderWallet);\n        return _this;\n      });\n    }\n    /**\n     * returns a json representation\n     */\n\n    /*json*/\n\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      return {\n        id: this.id,\n        input: serializeTxInput(this.input),\n        outputs: this.outputs\n      };\n    }\n    /**\n     * returns a json representation converted to string\n     */\n\n    /*string*/\n\n  }, {\n    key: \"toJsonString\",\n    value: function toJsonString() {\n      return JSON.stringify(this.toJson());\n    }\n  }], [{\n    key: \"signTransaction\",\n    value: function signTransaction(transaction, senderWallet) {\n      return exception[\"try\"](function () {\n        logger.info(\"signing transaction \".concat(transaction.id));\n        transaction.input = {\n          timestamp: Date.now(),\n          amount: senderWallet.balance,\n          address: senderWallet.publicKey,\n          signature: senderWallet.sign(cryptoUtil.hash(transaction.outputs))\n        };\n        return transaction;\n      });\n    }\n  }, {\n    key: \"newTransaction\",\n    value: function newTransaction(senderWallet, recipient, amount) {\n      return exception[\"try\"](function () {\n        if (amount > senderWallet.balance) {\n          logger.warn(\"amount \".concat(amount, \" exceeds balance\"));\n          return;\n        }\n\n        return Transaction.transactionWithOutputs(senderWallet, [{\n          amount: senderWallet.balance - amount,\n          address: senderWallet.publicKey\n        }, {\n          amount: amount,\n          address: recipient\n        }]);\n      });\n    }\n    /**\n     * cryptographically verifies the validity of the given Transaction \n     * @param {Transaction} transaction \n     * @returns {bool}\n     */\n\n  }, {\n    key: \"verifyTransaction\",\n    value: function verifyTransaction(transaction) {\n      return exception[\"try\"](function () {\n        var output = cryptoUtil.verifySignature(transaction.input.address, transaction.input.signature, cryptoUtil.hash(transaction.outputs));\n\n        if (!output) {\n          logger.warn(\"transaction \".concat(transaction.id, \" failed verification\"));\n        }\n\n        return output;\n      });\n    }\n    /**\n     * awards a small reward to the miner's wallet for mining a new block \n     * \n     * @param {Wallet} minerWallet the miner's wallet \n     * @param {Wallet} blockchainWallet a wallet to stand in as the wallet of the sender\n     * of the reward\n     * @returns {Transaction}\n     */\n\n  }, {\n    key: \"rewardTransaction\",\n    value: function rewardTransaction(minerWallet, blockchainWallet) {\n      return exception[\"try\"](function () {\n        return Transaction.transactionWithOutputs(blockchainWallet, [{\n          amount: MINING_REWARD,\n          address: minerWallet.publicKey\n        }]);\n      });\n    }\n    /**\n     * creates & signs a new Transaction instance with the given outputs\n     * @param {Wallet} senderWallet \n     * @param {Output[]} outputs \n     * @returns {Transaction}\n     */\n\n  }, {\n    key: \"transactionWithOutputs\",\n    value: function transactionWithOutputs(senderWallet, outputs) {\n      var _this2 = this;\n\n      return exception[\"try\"](function () {\n        var _transaction$outputs;\n\n        var transaction = new _this2();\n\n        (_transaction$outputs = transaction.outputs).push.apply(_transaction$outputs, _toConsumableArray(outputs));\n\n        Transaction.signTransaction(transaction, senderWallet);\n        return transaction;\n      });\n    }\n    /**\n     * deserializes a Transaction instance from JSON data\n     * @returns {Transaction}\n     * @param {json} json\n     */\n\n  }, {\n    key: \"fromJson\",\n    value: function fromJson(json) {\n      var _this3 = this;\n\n      return exception[\"try\"](function () {\n        var output = new _this3();\n        output.id = json.id;\n        output.input = deserializeTxInput(json.input);\n        output.outputs = json.outputs;\n        return output;\n      });\n    }\n  }, {\n    key: \"arrayToJson\",\n    value: function arrayToJson(array) {\n      return exception[\"try\"](function () {\n        var output = [];\n        array.forEach(function (t) {\n          output.push(t.toJson ? t.toJson() : t);\n        });\n        return output;\n      });\n    }\n  }]);\n\n  return Transaction;\n}();\n\nfunction serializeTxInput(txInput) {\n  return exception[\"try\"](function () {\n    var output = {\n      address: txInput.address,\n      amount: txInput.amount,\n      timestamp: txInput.timestamp\n    };\n\n    if (txInput.signature) {\n      output.signature = cryptoUtil.serializeSignature(txInput.signature);\n    }\n\n    return output;\n  });\n}\n\nfunction deserializeTxInput(txInput) {\n  return exception[\"try\"](function () {\n    var output = {\n      address: txInput.address,\n      amount: txInput.amount,\n      timestamp: txInput.timestamp\n    };\n\n    if (txInput.signature) {\n      output.signature = cryptoUtil.deserializeSignature(txInput.signature);\n    }\n\n    return output;\n  });\n}\n\nmodule.exports = Transaction;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Transaction.js"
      ],
      "names": [
        "LOG_TAG",
        "cryptoUtil",
        "require",
        "ioc",
        "MINING_REWARD",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Transaction",
        "id",
        "input",
        "outputs",
        "info",
        "senderWallet",
        "recipient",
        "amount",
        "senderOutput",
        "find",
        "output",
        "address",
        "publicKey",
        "warn",
        "push",
        "signTransaction",
        "serializeTxInput",
        "JSON",
        "stringify",
        "toJson",
        "transaction",
        "timestamp",
        "Date",
        "now",
        "balance",
        "signature",
        "sign",
        "hash",
        "transactionWithOutputs",
        "verifySignature",
        "minerWallet",
        "blockchainWallet",
        "json",
        "deserializeTxInput",
        "array",
        "forEach",
        "t",
        "txInput",
        "serializeSignature",
        "deserializeSignature",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,MAAhB;;AAEA,IAAMC,UAAU,GAAGC,OAAO,CAAC,0BAAD,CAA1B;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,4BAAD,CAAnB;;eAC2BA,OAAO,CAAC,iBAAD,C;IAA1BE,a,YAAAA,a;;AAER,IAAMC,MAAM,GAAGF,GAAG,CAACG,aAAJ,CAAkBC,YAAlB,CAA+BP,OAA/B,CAAf;AACA,IAAMQ,SAAS,GAAGL,GAAG,CAACM,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;;;;;;;;;;;;;;;;IAsBMM,W;;;AAEF;;;AAGA,yBAAa;AAAA;;AACT,SAAKC,EAAL,GAAUX,UAAU,CAACW,EAAX,EAAV;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,OAAL,GAAe,EAAf;AAEAT,IAAAA,MAAM,CAACU,IAAP,mCAAuC,KAAKH,EAA5C;AACH;AAED;;;;;2BAAuBI,Y,EAAcC,S,EAAWC,M,EAAQ;AAAA;;AACpD,aAAOV,SAAS,OAAT,CAAc,YAAM;AACvBH,QAAAA,MAAM,CAACU,IAAP,gCAAoC,KAAI,CAACH,EAAzC;;AACA,YAAMO,YAAY,GAAG,KAAI,CAACL,OAAL,CAAaM,IAAb,CAAkB,UAAAC,MAAM;AAAA,iBAAIA,MAAM,CAACC,OAAP,KAAmBN,YAAY,CAACO,SAApC;AAAA,SAAxB,CAArB;;AAEA,YAAIL,MAAM,GAAGF,YAAY,CAACE,MAA1B,EAAiC;AAC7Bb,UAAAA,MAAM,CAACmB,IAAP,kBAAsBN,MAAtB;AACA,iBAAO,IAAP;AACH;;AAEDC,QAAAA,YAAY,CAACD,MAAb,GAAuBC,YAAY,CAACD,MAAb,GAAsBA,MAA7C;;AACA,QAAA,KAAI,CAACJ,OAAL,CAAaW,IAAb,CAAkB;AAACP,UAAAA,MAAM,EAAEA,MAAT;AAAgBI,UAAAA,OAAO,EAAEL;AAAzB,SAAlB;;AACAN,QAAAA,WAAW,CAACe,eAAZ,CAA4B,KAA5B,EAAiCV,YAAjC;AAEA,eAAO,KAAP;AACH,OAdM,CAAP;AAeH;AAED;;;;AAGA;;;;6BAAkB;AACd,aAAO;AACHJ,QAAAA,EAAE,EAAE,KAAKA,EADN;AAEHC,QAAAA,KAAK,EAAEc,gBAAgB,CAAC,KAAKd,KAAN,CAFpB;AAGHC,QAAAA,OAAO,EAAE,KAAKA;AAHX,OAAP;AAKH;AAED;;;;AAGA;;;;mCAA0B;AACtB,aAAOc,IAAI,CAACC,SAAL,CAAe,KAAKC,MAAL,EAAf,CAAP;AACH;;;oCAEsCC,W,EAAaf,Y,EAAc;AAC9D,aAAOR,SAAS,OAAT,CAAc,YAAM;AACvBH,QAAAA,MAAM,CAACU,IAAP,+BAAmCgB,WAAW,CAACnB,EAA/C;AACAmB,QAAAA,WAAW,CAAClB,KAAZ,GAAoB;AAChBmB,UAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EADK;AAEhBhB,UAAAA,MAAM,EAAEF,YAAY,CAACmB,OAFL;AAGhBb,UAAAA,OAAO,EAAEN,YAAY,CAACO,SAHN;AAIhBa,UAAAA,SAAS,EAAEpB,YAAY,CAACqB,IAAb,CAAkBpC,UAAU,CAACqC,IAAX,CAAgBP,WAAW,CAACjB,OAA5B,CAAlB;AAJK,SAApB;AAMA,eAAOiB,WAAP;AACH,OATM,CAAP;AAUH;;;mCAEqCf,Y,EAAcC,S,EAAWC,M,EAAQ;AACnE,aAAOV,SAAS,OAAT,CAAc,YAAM;AACvB,YAAIU,MAAM,GAAGF,YAAY,CAACmB,OAA1B,EAAmC;AAC/B9B,UAAAA,MAAM,CAACmB,IAAP,kBAAsBN,MAAtB;AACA;AACH;;AAED,eAAOP,WAAW,CAAC4B,sBAAZ,CAAmCvB,YAAnC,EAAiD,CAAC;AACjDE,UAAAA,MAAM,EAAGF,YAAY,CAACmB,OAAb,GAAsBjB,MADkB;AAEjDI,UAAAA,OAAO,EAAEN,YAAY,CAACO;AAF2B,SAAD,EAGhD;AACAL,UAAAA,MAAM,EAAGA,MADT;AAEAI,UAAAA,OAAO,EAAEL;AAFT,SAHgD,CAAjD,CAAP;AAQH,OAdM,CAAP;AAeH;AAED;;;;;;;;sCAKkCc,W,EAAa;AAC3C,aAAOvB,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMa,MAAM,GAAGpB,UAAU,CAACuC,eAAX,CACXT,WAAW,CAAClB,KAAZ,CAAkBS,OADP,EAEXS,WAAW,CAAClB,KAAZ,CAAkBuB,SAFP,EAGXnC,UAAU,CAACqC,IAAX,CAAgBP,WAAW,CAACjB,OAA5B,CAHW,CAAf;;AAMA,YAAI,CAACO,MAAL,EAAa;AACThB,UAAAA,MAAM,CAACmB,IAAP,uBAA2BO,WAAW,CAACnB,EAAvC;AACH;;AAED,eAAOS,MAAP;AACH,OAZM,CAAP;AAaH;AAED;;;;;;;;;;;sCAQyCoB,W,EAAaC,gB,EAAkB;AACpE,aAAOlC,SAAS,OAAT,CAAc,YAAM;AACvB,eAAOG,WAAW,CAAC4B,sBAAZ,CAAmCG,gBAAnC,EAAqD,CAAC;AACrDxB,UAAAA,MAAM,EAAEd,aAD6C;AAErDkB,UAAAA,OAAO,EAAEmB,WAAW,CAAClB;AAFgC,SAAD,CAArD,CAAP;AAKH,OANM,CAAP;AAOH;AAED;;;;;;;;;2CAM8CP,Y,EAAcF,O,EAAS;AAAA;;AACjE,aAAON,SAAS,OAAT,CAAc,YAAM;AAAA;;AACvB,YAAMuB,WAAW,GAAG,IAAI,MAAJ,EAApB;;AACA,gCAAAA,WAAW,CAACjB,OAAZ,EAAoBW,IAApB,gDAA4BX,OAA5B;;AACAH,QAAAA,WAAW,CAACe,eAAZ,CAA4BK,WAA5B,EAAyCf,YAAzC;AACA,eAAOe,WAAP;AACH,OALM,CAAP;AAMH;AAED;;;;;;;;6BAKgCY,I,EAAM;AAAA;;AAClC,aAAOnC,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMa,MAAM,GAAG,IAAI,MAAJ,EAAf;AACAA,QAAAA,MAAM,CAACT,EAAP,GAAY+B,IAAI,CAAC/B,EAAjB;AACAS,QAAAA,MAAM,CAACR,KAAP,GAAgB+B,kBAAkB,CAACD,IAAI,CAAC9B,KAAN,CAAlC;AACAQ,QAAAA,MAAM,CAACP,OAAP,GAAiB6B,IAAI,CAAC7B,OAAtB;AAEA,eAAOO,MAAP;AACH,OAPM,CAAP;AAQH;;;gCAE6BwB,K,EAAO;AACjC,aAAOrC,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMa,MAAM,GAAG,EAAf;AACAwB,QAAAA,KAAK,CAACC,OAAN,CAAc,UAACC,CAAD,EAAO;AACjB1B,UAAAA,MAAM,CAACI,IAAP,CAAYsB,CAAC,CAACjB,MAAF,GAAWiB,CAAC,CAACjB,MAAF,EAAX,GAAwBiB,CAApC;AACH,SAFD;AAGA,eAAO1B,MAAP;AACH,OANM,CAAP;AAOH;;;;;;AAGL,SAASM,gBAAT,CAA0BqB,OAA1B,EAAmC;AAC/B,SAAOxC,SAAS,OAAT,CAAc,YAAM;AACvB,QAAMa,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE0B,OAAO,CAAC1B,OADN;AAEXJ,MAAAA,MAAM,EAAE8B,OAAO,CAAC9B,MAFL;AAGXc,MAAAA,SAAS,EAAEgB,OAAO,CAAChB;AAHR,KAAf;;AAMA,QAAIgB,OAAO,CAACZ,SAAZ,EAAuB;AACnBf,MAAAA,MAAM,CAACe,SAAP,GAAmBnC,UAAU,CAACgD,kBAAX,CAA8BD,OAAO,CAACZ,SAAtC,CAAnB;AACH;;AAED,WAAOf,MAAP;AACH,GAZM,CAAP;AAaH;;AAED,SAASuB,kBAAT,CAA4BI,OAA5B,EAAqC;AACjC,SAAOxC,SAAS,OAAT,CAAc,YAAM;AACvB,QAAMa,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE0B,OAAO,CAAC1B,OADN;AAEXJ,MAAAA,MAAM,EAAE8B,OAAO,CAAC9B,MAFL;AAGXc,MAAAA,SAAS,EAAEgB,OAAO,CAAChB;AAHR,KAAf;;AAMA,QAAIgB,OAAO,CAACZ,SAAZ,EAAuB;AACnBf,MAAAA,MAAM,CAACe,SAAP,GAAmBnC,UAAU,CAACiD,oBAAX,CAAgCF,OAAO,CAACZ,SAAxC,CAAnB;AACH;;AAED,WAAOf,MAAP;AACH,GAZM,CAAP;AAaH;;AAED8B,MAAM,CAACC,OAAP,GAAiBzC,WAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'TRNS';\n\nconst cryptoUtil = require('../../../util/cryptoUtil');\nconst ioc = require('../../../util/iocContainer');\nconst { MINING_REWARD }  = require('../../../config');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: Transaction\n * ---------------------\n * a transaction consists of one input and two outputs. The first output goes to the\n * recipient; the second output sends the change back to the sender. The sender's entire\n * wallet balance is the input to the transaction, the actual sent amount is the first\n * output (to the recipient), and the remainder is in the second output back to the sender.\n * \n * Input format: {\n *      timestamp: <int>,  //datetime in ms\n *      amount: <float>,   //full amount of sender's wallet\n *      address: <string>, //public key of sender wallet\n *      signature: <EC.Signature> //cryptographic signature of transaction \n * }\n * \n * Output format: {\n *      amount: <float>,   //amount to send to address\n *      address: <string>, //public key of recipient wallet\n * }\n *\n * author: John R. Kosinski\n */\nclass Transaction {\n\n    /**\n     * constructor\n     */\n    constructor(){\n        this.id = cryptoUtil.id();\n        this.input = null;\n        this.outputs = [];\n\n        logger.info(`created new transaction ${this.id}`);\n    }\n\n    /*Transaction*/ update(senderWallet, recipient, amount) {\n        return exception.try(() => {\n            logger.info(`updating transaction ${this.id}...`)\n            const senderOutput = this.outputs.find(output => output.address === senderWallet.publicKey);\n\n            if (amount > senderWallet.amount){\n                logger.warn(`amount ${amount} exceeds balance`);\n                return null;\n            }\n\n            senderOutput.amount = (senderOutput.amount - amount);\n            this.outputs.push({amount: amount,address: recipient});\n            Transaction.signTransaction(this,senderWallet);\n\n            return this;\n        });\n    }\n\n    /**\n     * returns a json representation\n     */\n    /*json*/ toJson() {\n        return {\n            id: this.id,\n            input: serializeTxInput(this.input),\n            outputs: this.outputs\n        }\n    }\n\n    /**\n     * returns a json representation converted to string\n     */\n    /*string*/ toJsonString() {\n        return JSON.stringify(this.toJson());\n    }\n\n    static /*Transaction*/ signTransaction(transaction, senderWallet) {\n        return exception.try(() => {\n            logger.info(`signing transaction ${transaction.id}`);\n            transaction.input = {\n                timestamp: Date.now(),\n                amount: senderWallet.balance,\n                address: senderWallet.publicKey,\n                signature: senderWallet.sign(cryptoUtil.hash(transaction.outputs))\n            };\n            return transaction;\n        });\n    }\n\n    static /*Transaction*/ newTransaction(senderWallet, recipient, amount) {\n        return exception.try(() => {\n            if (amount > senderWallet.balance) {\n                logger.warn(`amount ${amount} exceeds balance`);\n                return;\n            }\n\n            return Transaction.transactionWithOutputs(senderWallet, [{\n                    amount:  senderWallet.balance -amount,\n                    address: senderWallet.publicKey\n                },  {\n                    amount:  amount,\n                    address: recipient\n                }\n            ]);\n        });\n    }\n\n    /**\n     * cryptographically verifies the validity of the given Transaction \n     * @param {Transaction} transaction \n     * @returns {bool}\n     */\n    static /*bool*/ verifyTransaction(transaction) {\n        return exception.try(() => {\n            const output = cryptoUtil.verifySignature(\n                transaction.input.address,\n                transaction.input.signature,\n                cryptoUtil.hash(transaction.outputs)\n            );\n\n            if (!output) {\n                logger.warn(`transaction ${transaction.id} failed verification`);\n            }\n\n            return output;\n        });\n    }\n\n    /**\n     * awards a small reward to the miner's wallet for mining a new block \n     * \n     * @param {Wallet} minerWallet the miner's wallet \n     * @param {Wallet} blockchainWallet a wallet to stand in as the wallet of the sender\n     * of the reward\n     * @returns {Transaction}\n     */\n    static /*Transaction*/ rewardTransaction(minerWallet, blockchainWallet) {\n        return exception.try(() => {\n            return Transaction.transactionWithOutputs(blockchainWallet, [{\n                    amount: MINING_REWARD,\n                    address: minerWallet.publicKey\n                }]\n            );\n        });\n    }\n\n    /**\n     * creates & signs a new Transaction instance with the given outputs\n     * @param {Wallet} senderWallet \n     * @param {Output[]} outputs \n     * @returns {Transaction}\n     */\n    static /*Transaction*/ transactionWithOutputs(senderWallet, outputs) {\n        return exception.try(() => {\n            const transaction = new this();\n            transaction.outputs.push(...outputs);\n            Transaction.signTransaction(transaction, senderWallet);\n            return transaction;\n        });\n    }\n\n    /**\n     * deserializes a Transaction instance from JSON data\n     * @returns {Transaction}\n     * @param {json} json\n     */\n    static /*Transaction*/ fromJson(json) {\n        return exception.try(() => {\n            const output = new this();\n            output.id = json.id;\n            output.input =  deserializeTxInput(json.input); \n            output.outputs = json.outputs;\n\n            return output;\n        });\n    }\n    \n    static /*[json]*/ arrayToJson(array) {\n        return exception.try(() => {\n            const output = []; \n            array.forEach((t) => {\n                output.push(t.toJson ? t.toJson() : t); \n            });\n            return output; \n        });\n    }\n}\n\nfunction serializeTxInput(txInput) {\n    return exception.try(() => {\n        const output = { \n            address: txInput.address,\n            amount: txInput.amount,\n            timestamp: txInput.timestamp\n        }; \n        \n        if (txInput.signature) {\n            output.signature = cryptoUtil.serializeSignature(txInput.signature); \n        }\n        \n        return output; \n    });\n}\n\nfunction deserializeTxInput(txInput) {\n    return exception.try(() => {\n        const output = { \n            address: txInput.address,\n            amount: txInput.amount,\n            timestamp: txInput.timestamp\n        }; \n        \n        if (txInput.signature) {\n            output.signature = cryptoUtil.deserializeSignature(txInput.signature);\n        }\n        \n        return output; \n    });\n}\n\nmodule.exports = Transaction;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567747991961
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/cryptoUtil.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/cryptoUtil.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/cryptoUtil.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/cryptoUtil.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
        "sourceFileName": "cryptoUtil.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar LOG_TAG = 'CRPT';\n\nvar SHA256 = require('crypto-js/sha256');\n\nvar uuidV1 = require('uuid/v1');\n\nvar EC = require('elliptic').ec;\n\nvar ec = new EC('secp256k1'); //TODO: this is far from ideal\n\nvar Signature = require('../../node_modules/elliptic/lib/elliptic/ec/signature');\n/**\n * generates & returns a new elliptic keypair\n * @returns {KeyPair}\n */\n\n/*EC.KeyPair*/\n\n\nexports.generateKeyPair = function () {\n  return ec.genKeyPair();\n};\n/**\n * deserializes a key pair from string (hex) representations of its \n * public & private keys\n * @param pub string (hex) representation of public key\n * @param priv string (hex) representation of private key\n * @returns {KeyPair}\n */\n\n/*EC.KeyPair*/\n\n\nexports.deserializeKeyPair = function (pub, priv) {\n  return ec.keyPair({\n    priv: priv,\n    privEnc: 'hex',\n    pub: pub,\n    pubEnc: 'hex'\n  });\n};\n/**\n * generates & returns a new UUID\n * @returns {string}\n */\n\n/*string*/\n\n\nexports.id = function () {\n  return uuidV1();\n};\n/**\n * generates a SHA256 hash of given data \n * @param {json} data \n */\n\n/*string*/\n\n\nexports.hash = function (data) {\n  return SHA256(JSON.stringify(data)).toString();\n};\n/**\n * validates a signature \n * @param {string} publicKey\n * @param {string} signature\n * @param {string} dataHash\n * @returns {bool}\n */\n\n/*bool*/\n\n\nexports.verifySignature = function (publicKey, signature, dataHash) {\n  return ec.keyFromPublic(publicKey, 'hex').verify(dataHash, signature);\n};\n\nexports.serializeSignature = function (signature) {\n  return {\n    r: signature.r.toString('hex'),\n    s: signature.s.toString('hex')\n  };\n};\n\nexports.deserializeSignature = function (json) {\n  return new Signature(json, 'hex');\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyeXB0b1V0aWwuanMiXSwibmFtZXMiOlsiTE9HX1RBRyIsIlNIQTI1NiIsInJlcXVpcmUiLCJ1dWlkVjEiLCJFQyIsImVjIiwiU2lnbmF0dXJlIiwiZXhwb3J0cyIsImdlbmVyYXRlS2V5UGFpciIsImdlbktleVBhaXIiLCJkZXNlcmlhbGl6ZUtleVBhaXIiLCJwdWIiLCJwcml2Iiwia2V5UGFpciIsInByaXZFbmMiLCJwdWJFbmMiLCJpZCIsImhhc2giLCJkYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsInRvU3RyaW5nIiwidmVyaWZ5U2lnbmF0dXJlIiwicHVibGljS2V5Iiwic2lnbmF0dXJlIiwiZGF0YUhhc2giLCJrZXlGcm9tUHVibGljIiwidmVyaWZ5Iiwic2VyaWFsaXplU2lnbmF0dXJlIiwiciIsInMiLCJkZXNlcmlhbGl6ZVNpZ25hdHVyZSIsImpzb24iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLE9BQU8sR0FBRyxNQUFoQjs7QUFFQSxJQUFNQyxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxrQkFBRCxDQUF0Qjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQXRCOztBQUNBLElBQU1FLEVBQUUsR0FBR0YsT0FBTyxDQUFDLFVBQUQsQ0FBUCxDQUFvQkcsRUFBL0I7O0FBQ0EsSUFBTUEsRUFBRSxHQUFHLElBQUlELEVBQUosQ0FBTyxXQUFQLENBQVgsQyxDQUVBOztBQUNBLElBQU1FLFNBQVMsR0FBR0osT0FBTyxDQUFDLHVEQUFELENBQXpCO0FBRUE7Ozs7O0FBSUE7OztBQUFlSyxPQUFPLENBQUNDLGVBQVIsR0FBMEIsWUFBTTtBQUMzQyxTQUFPSCxFQUFFLENBQUNJLFVBQUgsRUFBUDtBQUNILENBRmM7QUFJZjs7Ozs7Ozs7QUFPQTs7O0FBQWVGLE9BQU8sQ0FBQ0csa0JBQVIsR0FBNkIsVUFBQ0MsR0FBRCxFQUFNQyxJQUFOLEVBQWU7QUFDdkQsU0FBT1AsRUFBRSxDQUFDUSxPQUFILENBQVc7QUFDZEQsSUFBQUEsSUFBSSxFQUFFQSxJQURRO0FBRWRFLElBQUFBLE9BQU8sRUFBRSxLQUZLO0FBR2RILElBQUFBLEdBQUcsRUFBRUEsR0FIUztBQUlkSSxJQUFBQSxNQUFNLEVBQUU7QUFKTSxHQUFYLENBQVA7QUFNSCxDQVBjO0FBU2Y7Ozs7O0FBSUE7OztBQUFXUixPQUFPLENBQUNTLEVBQVIsR0FBYSxZQUFNO0FBQzFCLFNBQU9iLE1BQU0sRUFBYjtBQUNILENBRlU7QUFJWDs7Ozs7QUFJQTs7O0FBQVdJLE9BQU8sQ0FBQ1UsSUFBUixHQUFlLFVBQUNDLElBQUQsRUFBVTtBQUNoQyxTQUFPakIsTUFBTSxDQUFDa0IsSUFBSSxDQUFDQyxTQUFMLENBQWVGLElBQWYsQ0FBRCxDQUFOLENBQTZCRyxRQUE3QixFQUFQO0FBQ0gsQ0FGVTtBQUlYOzs7Ozs7OztBQU9BOzs7QUFBU2QsT0FBTyxDQUFDZSxlQUFSLEdBQTBCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUF1QkMsUUFBdkIsRUFBb0M7QUFDbkUsU0FBT3BCLEVBQUUsQ0FBQ3FCLGFBQUgsQ0FBaUJILFNBQWpCLEVBQTJCLEtBQTNCLEVBQWtDSSxNQUFsQyxDQUF5Q0YsUUFBekMsRUFBbURELFNBQW5ELENBQVA7QUFDSCxDQUZROztBQUlUakIsT0FBTyxDQUFDcUIsa0JBQVIsR0FBNkIsVUFBQ0osU0FBRCxFQUFlO0FBQ3hDLFNBQU87QUFDSEssSUFBQUEsQ0FBQyxFQUFFTCxTQUFTLENBQUNLLENBQVYsQ0FBWVIsUUFBWixDQUFxQixLQUFyQixDQURBO0FBRUhTLElBQUFBLENBQUMsRUFBRU4sU0FBUyxDQUFDTSxDQUFWLENBQVlULFFBQVosQ0FBcUIsS0FBckI7QUFGQSxHQUFQO0FBSUgsQ0FMRDs7QUFPQWQsT0FBTyxDQUFDd0Isb0JBQVIsR0FBK0IsVUFBQ0MsSUFBRCxFQUFVO0FBQ3JDLFNBQU8sSUFBSTFCLFNBQUosQ0FBYzBCLElBQWQsRUFBb0IsS0FBcEIsQ0FBUDtBQUNILENBRkQiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21pbmFjb2luL21pbmFjb2luLXNlcnZlci9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgTE9HX1RBRyA9ICdDUlBUJztcblxuY29uc3QgU0hBMjU2ID0gcmVxdWlyZSgnY3J5cHRvLWpzL3NoYTI1NicpO1xuY29uc3QgdXVpZFYxID0gcmVxdWlyZSgndXVpZC92MScpO1xuY29uc3QgRUMgPSByZXF1aXJlKCdlbGxpcHRpYycpLmVjO1xuY29uc3QgZWMgPSBuZXcgRUMoJ3NlY3AyNTZrMScpO1xuXG4vL1RPRE86IHRoaXMgaXMgZmFyIGZyb20gaWRlYWxcbmNvbnN0IFNpZ25hdHVyZSA9IHJlcXVpcmUoJy4uLy4uL25vZGVfbW9kdWxlcy9lbGxpcHRpYy9saWIvZWxsaXB0aWMvZWMvc2lnbmF0dXJlJyk7XG5cbi8qKlxuICogZ2VuZXJhdGVzICYgcmV0dXJucyBhIG5ldyBlbGxpcHRpYyBrZXlwYWlyXG4gKiBAcmV0dXJucyB7S2V5UGFpcn1cbiAqL1xuLypFQy5LZXlQYWlyKi8gZXhwb3J0cy5nZW5lcmF0ZUtleVBhaXIgPSAoKSA9PiB7XG4gICAgcmV0dXJuIGVjLmdlbktleVBhaXIoKTtcbn07XG5cbi8qKlxuICogZGVzZXJpYWxpemVzIGEga2V5IHBhaXIgZnJvbSBzdHJpbmcgKGhleCkgcmVwcmVzZW50YXRpb25zIG9mIGl0cyBcbiAqIHB1YmxpYyAmIHByaXZhdGUga2V5c1xuICogQHBhcmFtIHB1YiBzdHJpbmcgKGhleCkgcmVwcmVzZW50YXRpb24gb2YgcHVibGljIGtleVxuICogQHBhcmFtIHByaXYgc3RyaW5nIChoZXgpIHJlcHJlc2VudGF0aW9uIG9mIHByaXZhdGUga2V5XG4gKiBAcmV0dXJucyB7S2V5UGFpcn1cbiAqL1xuLypFQy5LZXlQYWlyKi8gZXhwb3J0cy5kZXNlcmlhbGl6ZUtleVBhaXIgPSAocHViLCBwcml2KSA9PiB7XG4gICAgcmV0dXJuIGVjLmtleVBhaXIoe1xuICAgICAgICBwcml2OiBwcml2LFxuICAgICAgICBwcml2RW5jOiAnaGV4JyxcbiAgICAgICAgcHViOiBwdWIsXG4gICAgICAgIHB1YkVuYzogJ2hleCdcbiAgICB9KTtcbn07XG5cbi8qKlxuICogZ2VuZXJhdGVzICYgcmV0dXJucyBhIG5ldyBVVUlEXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG4vKnN0cmluZyovIGV4cG9ydHMuaWQgPSAoKSA9PiB7XG4gICAgcmV0dXJuIHV1aWRWMSgpO1xufTtcblxuLyoqXG4gKiBnZW5lcmF0ZXMgYSBTSEEyNTYgaGFzaCBvZiBnaXZlbiBkYXRhIFxuICogQHBhcmFtIHtqc29ufSBkYXRhIFxuICovXG4vKnN0cmluZyovIGV4cG9ydHMuaGFzaCA9IChkYXRhKSA9PiB7XG4gICAgcmV0dXJuIFNIQTI1NihKU09OLnN0cmluZ2lmeShkYXRhKSkudG9TdHJpbmcoKTtcbn1cblxuLyoqXG4gKiB2YWxpZGF0ZXMgYSBzaWduYXR1cmUgXG4gKiBAcGFyYW0ge3N0cmluZ30gcHVibGljS2V5XG4gKiBAcGFyYW0ge3N0cmluZ30gc2lnbmF0dXJlXG4gKiBAcGFyYW0ge3N0cmluZ30gZGF0YUhhc2hcbiAqIEByZXR1cm5zIHtib29sfVxuICovXG4vKmJvb2wqLyBleHBvcnRzLnZlcmlmeVNpZ25hdHVyZSA9IChwdWJsaWNLZXksIHNpZ25hdHVyZSwgZGF0YUhhc2gpID0+IHtcbiAgICByZXR1cm4gZWMua2V5RnJvbVB1YmxpYyhwdWJsaWNLZXksJ2hleCcpLnZlcmlmeShkYXRhSGFzaCwgc2lnbmF0dXJlKTtcbn1cblxuZXhwb3J0cy5zZXJpYWxpemVTaWduYXR1cmUgPSAoc2lnbmF0dXJlKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcjogc2lnbmF0dXJlLnIudG9TdHJpbmcoJ2hleCcpLCBcbiAgICAgICAgczogc2lnbmF0dXJlLnMudG9TdHJpbmcoJ2hleCcpXG4gICAgfTtcbn1cblxuZXhwb3J0cy5kZXNlcmlhbGl6ZVNpZ25hdHVyZSA9IChqc29uKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBTaWduYXR1cmUoanNvbiwgJ2hleCcpOyBcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "cryptoUtil.js"
      ],
      "names": [
        "LOG_TAG",
        "SHA256",
        "require",
        "uuidV1",
        "EC",
        "ec",
        "Signature",
        "exports",
        "generateKeyPair",
        "genKeyPair",
        "deserializeKeyPair",
        "pub",
        "priv",
        "keyPair",
        "privEnc",
        "pubEnc",
        "id",
        "hash",
        "data",
        "JSON",
        "stringify",
        "toString",
        "verifySignature",
        "publicKey",
        "signature",
        "dataHash",
        "keyFromPublic",
        "verify",
        "serializeSignature",
        "r",
        "s",
        "deserializeSignature",
        "json"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,OAAO,GAAG,MAAhB;;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAAtB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAME,EAAE,GAAGF,OAAO,CAAC,UAAD,CAAP,CAAoBG,EAA/B;;AACA,IAAMA,EAAE,GAAG,IAAID,EAAJ,CAAO,WAAP,CAAX,C,CAEA;;AACA,IAAME,SAAS,GAAGJ,OAAO,CAAC,uDAAD,CAAzB;AAEA;;;;;AAIA;;;AAAeK,OAAO,CAACC,eAAR,GAA0B,YAAM;AAC3C,SAAOH,EAAE,CAACI,UAAH,EAAP;AACH,CAFc;AAIf;;;;;;;;AAOA;;;AAAeF,OAAO,CAACG,kBAAR,GAA6B,UAACC,GAAD,EAAMC,IAAN,EAAe;AACvD,SAAOP,EAAE,CAACQ,OAAH,CAAW;AACdD,IAAAA,IAAI,EAAEA,IADQ;AAEdE,IAAAA,OAAO,EAAE,KAFK;AAGdH,IAAAA,GAAG,EAAEA,GAHS;AAIdI,IAAAA,MAAM,EAAE;AAJM,GAAX,CAAP;AAMH,CAPc;AASf;;;;;AAIA;;;AAAWR,OAAO,CAACS,EAAR,GAAa,YAAM;AAC1B,SAAOb,MAAM,EAAb;AACH,CAFU;AAIX;;;;;AAIA;;;AAAWI,OAAO,CAACU,IAAR,GAAe,UAACC,IAAD,EAAU;AAChC,SAAOjB,MAAM,CAACkB,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAD,CAAN,CAA6BG,QAA7B,EAAP;AACH,CAFU;AAIX;;;;;;;;AAOA;;;AAASd,OAAO,CAACe,eAAR,GAA0B,UAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAoC;AACnE,SAAOpB,EAAE,CAACqB,aAAH,CAAiBH,SAAjB,EAA2B,KAA3B,EAAkCI,MAAlC,CAAyCF,QAAzC,EAAmDD,SAAnD,CAAP;AACH,CAFQ;;AAITjB,OAAO,CAACqB,kBAAR,GAA6B,UAACJ,SAAD,EAAe;AACxC,SAAO;AACHK,IAAAA,CAAC,EAAEL,SAAS,CAACK,CAAV,CAAYR,QAAZ,CAAqB,KAArB,CADA;AAEHS,IAAAA,CAAC,EAAEN,SAAS,CAACM,CAAV,CAAYT,QAAZ,CAAqB,KAArB;AAFA,GAAP;AAIH,CALD;;AAOAd,OAAO,CAACwB,oBAAR,GAA+B,UAACC,IAAD,EAAU;AACrC,SAAO,IAAI1B,SAAJ,CAAc0B,IAAd,EAAoB,KAApB,CAAP;AACH,CAFD",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'CRPT';\n\nconst SHA256 = require('crypto-js/sha256');\nconst uuidV1 = require('uuid/v1');\nconst EC = require('elliptic').ec;\nconst ec = new EC('secp256k1');\n\n//TODO: this is far from ideal\nconst Signature = require('../../node_modules/elliptic/lib/elliptic/ec/signature');\n\n/**\n * generates & returns a new elliptic keypair\n * @returns {KeyPair}\n */\n/*EC.KeyPair*/ exports.generateKeyPair = () => {\n    return ec.genKeyPair();\n};\n\n/**\n * deserializes a key pair from string (hex) representations of its \n * public & private keys\n * @param pub string (hex) representation of public key\n * @param priv string (hex) representation of private key\n * @returns {KeyPair}\n */\n/*EC.KeyPair*/ exports.deserializeKeyPair = (pub, priv) => {\n    return ec.keyPair({\n        priv: priv,\n        privEnc: 'hex',\n        pub: pub,\n        pubEnc: 'hex'\n    });\n};\n\n/**\n * generates & returns a new UUID\n * @returns {string}\n */\n/*string*/ exports.id = () => {\n    return uuidV1();\n};\n\n/**\n * generates a SHA256 hash of given data \n * @param {json} data \n */\n/*string*/ exports.hash = (data) => {\n    return SHA256(JSON.stringify(data)).toString();\n}\n\n/**\n * validates a signature \n * @param {string} publicKey\n * @param {string} signature\n * @param {string} dataHash\n * @returns {bool}\n */\n/*bool*/ exports.verifySignature = (publicKey, signature, dataHash) => {\n    return ec.keyFromPublic(publicKey,'hex').verify(dataHash, signature);\n}\n\nexports.serializeSignature = (signature) => {\n    return {\n        r: signature.r.toString('hex'), \n        s: signature.s.toString('hex')\n    };\n}\n\nexports.deserializeSignature = (json) => {\n    return new Signature(json, 'hex'); \n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1567778128268
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/config.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nexports.DIFFICULTY = 3;\nexports.MINE_RATE = 100000;\nexports.INITIAL_BALANCE = 500; //TODO: remove initial balance (set to 0)\n\nexports.HTTP_PORT = process.env.HTTP_PORT || 3001;\nexports.P2P_PORT = process.env.P2P_PORT || 5001;\nexports.MINING_REWARD = 50;\nexports.USE_DATABASE = false;\nexports.PEER_LIMIT = 3;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJleHBvcnRzIiwiRElGRklDVUxUWSIsIk1JTkVfUkFURSIsIklOSVRJQUxfQkFMQU5DRSIsIkhUVFBfUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJQMlBfUE9SVCIsIk1JTklOR19SRVdBUkQiLCJVU0VfREFUQUJBU0UiLCJQRUVSX0xJTUlUIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQUEsT0FBTyxDQUFDQyxVQUFSLEdBQXFCLENBQXJCO0FBQ0FELE9BQU8sQ0FBQ0UsU0FBUixHQUFvQixNQUFwQjtBQUNBRixPQUFPLENBQUNHLGVBQVIsR0FBMEIsR0FBMUIsQyxDQUErQjs7QUFDL0JILE9BQU8sQ0FBQ0ksU0FBUixHQUFvQkMsT0FBTyxDQUFDQyxHQUFSLENBQVlGLFNBQVosSUFBeUIsSUFBN0M7QUFDQUosT0FBTyxDQUFDTyxRQUFSLEdBQW1CRixPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBWixJQUF3QixJQUEzQztBQUNBUCxPQUFPLENBQUNRLGFBQVIsR0FBd0IsRUFBeEI7QUFDQVIsT0FBTyxDQUFDUyxZQUFSLEdBQXVCLEtBQXZCO0FBQ0FULE9BQU8sQ0FBQ1UsVUFBUixHQUFxQixDQUFyQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9hY2VyL0Rlc2t0b3AvbWluYWNvaW4vbWluYWNvaW4vbWluYWNvaW4tc2VydmVyL3NyYyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5ESUZGSUNVTFRZID0gMztcbmV4cG9ydHMuTUlORV9SQVRFID0gMTAwMDAwO1xuZXhwb3J0cy5JTklUSUFMX0JBTEFOQ0UgPSA1MDA7IC8vVE9ETzogcmVtb3ZlIGluaXRpYWwgYmFsYW5jZSAoc2V0IHRvIDApXG5leHBvcnRzLkhUVFBfUE9SVCA9IHByb2Nlc3MuZW52LkhUVFBfUE9SVCB8fCAzMDAxO1xuZXhwb3J0cy5QMlBfUE9SVCA9IHByb2Nlc3MuZW52LlAyUF9QT1JUIHx8IDUwMDE7XG5leHBvcnRzLk1JTklOR19SRVdBUkQgPSA1MDtcbmV4cG9ydHMuVVNFX0RBVEFCQVNFID0gZmFsc2U7XG5leHBvcnRzLlBFRVJfTElNSVQgPSAzOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "exports",
        "DIFFICULTY",
        "MINE_RATE",
        "INITIAL_BALANCE",
        "HTTP_PORT",
        "process",
        "env",
        "P2P_PORT",
        "MINING_REWARD",
        "USE_DATABASE",
        "PEER_LIMIT"
      ],
      "mappings": "AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,CAArB;AACAD,OAAO,CAACE,SAAR,GAAoB,MAApB;AACAF,OAAO,CAACG,eAAR,GAA0B,GAA1B,C,CAA+B;;AAC/BH,OAAO,CAACI,SAAR,GAAoBC,OAAO,CAACC,GAAR,CAAYF,SAAZ,IAAyB,IAA7C;AACAJ,OAAO,CAACO,QAAR,GAAmBF,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwB,IAA3C;AACAP,OAAO,CAACQ,aAAR,GAAwB,EAAxB;AACAR,OAAO,CAACS,YAAR,GAAuB,KAAvB;AACAT,OAAO,CAACU,UAAR,GAAqB,CAArB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "sourcesContent": [
        "'use strict';\n\nexports.DIFFICULTY = 3;\nexports.MINE_RATE = 100000;\nexports.INITIAL_BALANCE = 500; //TODO: remove initial balance (set to 0)\nexports.HTTP_PORT = process.env.HTTP_PORT || 3001;\nexports.P2P_PORT = process.env.P2P_PORT || 5001;\nexports.MINING_REWARD = 50;\nexports.USE_DATABASE = false;\nexports.PEER_LIMIT = 3;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567669795392
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/winstonLogger.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/winstonLogger.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/winstonLogger.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/winstonLogger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
        "sourceFileName": "winstonLogger.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n/**\n * ------------------------\n * implements a logger factory, returning a logger that implements winston.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('winston'),\n    transports = _require.transports,\n    createLogger = _require.createLogger,\n    format = _require.format; //create winston logger\n\n\nvar logger = createLogger({\n  format: format.combine(format.timestamp(), format.json()),\n  transports: [new transports.Console({\n    handleExceptions: true,\n    timestamp: true\n  })],\n  exitOnError: false\n});\n/**\n * generic logger, wraps winston\n */\n\nvar WinstonLogger =\n/*#__PURE__*/\nfunction () {\n  function WinstonLogger(tag) {\n    _classCallCheck(this, WinstonLogger);\n\n    this.tag = tag;\n  }\n\n  _createClass(WinstonLogger, [{\n    key: \"debug\",\n    value: function debug(s) {\n      logger.debug(formatMessage(this.tag, s));\n    }\n  }, {\n    key: \"info\",\n    value: function info(s) {\n      logger.info(formatMessage(this.tag, s));\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(s) {\n      logger.warn(formatMessage(this.tag, s));\n    }\n  }, {\n    key: \"error\",\n    value: function error(s) {\n      logger.error(formatMessage(this.tag, s));\n    }\n  }]);\n\n  return WinstonLogger;\n}();\n\nfunction formatMessage(tag, message) {\n  return \"\".concat(tag, \": \").concat(message);\n}\n\nexports.createLogger = function (tag) {\n  return new WinstonLogger(tag);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndpbnN0b25Mb2dnZXIuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsInRyYW5zcG9ydHMiLCJjcmVhdGVMb2dnZXIiLCJmb3JtYXQiLCJsb2dnZXIiLCJjb21iaW5lIiwidGltZXN0YW1wIiwianNvbiIsIkNvbnNvbGUiLCJoYW5kbGVFeGNlcHRpb25zIiwiZXhpdE9uRXJyb3IiLCJXaW5zdG9uTG9nZ2VyIiwidGFnIiwicyIsImRlYnVnIiwiZm9ybWF0TWVzc2FnZSIsImluZm8iLCJ3YXJuIiwiZXJyb3IiLCJtZXNzYWdlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTs7Ozs7Ozs7Ozs7Ozs7ZUFRMkNBLE9BQU8sQ0FBQyxTQUFELEM7SUFBM0NDLFUsWUFBQUEsVTtJQUFZQyxZLFlBQUFBLFk7SUFBY0MsTSxZQUFBQSxNLEVBRWpDOzs7QUFDQSxJQUFNQyxNQUFNLEdBQUdGLFlBQVksQ0FBQztBQUN4QkMsRUFBQUEsTUFBTSxFQUFFQSxNQUFNLENBQUNFLE9BQVAsQ0FDSkYsTUFBTSxDQUFDRyxTQUFQLEVBREksRUFFSkgsTUFBTSxDQUFDSSxJQUFQLEVBRkksQ0FEZ0I7QUFLeEJOLEVBQUFBLFVBQVUsRUFBRSxDQUNWLElBQUlBLFVBQVUsQ0FBQ08sT0FBZixDQUF1QjtBQUNyQkMsSUFBQUEsZ0JBQWdCLEVBQUUsSUFERztBQUVyQkgsSUFBQUEsU0FBUyxFQUFFO0FBRlUsR0FBdkIsQ0FEVSxDQUxZO0FBV3hCSSxFQUFBQSxXQUFXLEVBQUU7QUFYVyxDQUFELENBQTNCO0FBY0E7Ozs7SUFHTUMsYTs7O0FBRUYseUJBQVlDLEdBQVosRUFBaUI7QUFBQTs7QUFDYixTQUFLQSxHQUFMLEdBQVdBLEdBQVg7QUFDSDs7OzswQkFFS0MsQyxFQUFHO0FBQ0xULE1BQUFBLE1BQU0sQ0FBQ1UsS0FBUCxDQUFhQyxhQUFhLENBQUMsS0FBS0gsR0FBTixFQUFXQyxDQUFYLENBQTFCO0FBQ0g7Ozt5QkFFSUEsQyxFQUFHO0FBQ0pULE1BQUFBLE1BQU0sQ0FBQ1ksSUFBUCxDQUFZRCxhQUFhLENBQUMsS0FBS0gsR0FBTixFQUFXQyxDQUFYLENBQXpCO0FBQ0g7Ozt5QkFFSUEsQyxFQUFHO0FBQ0pULE1BQUFBLE1BQU0sQ0FBQ2EsSUFBUCxDQUFZRixhQUFhLENBQUMsS0FBS0gsR0FBTixFQUFXQyxDQUFYLENBQXpCO0FBQ0g7OzswQkFFS0EsQyxFQUFHO0FBQ0xULE1BQUFBLE1BQU0sQ0FBQ2MsS0FBUCxDQUFhSCxhQUFhLENBQUMsS0FBS0gsR0FBTixFQUFXQyxDQUFYLENBQTFCO0FBQ0g7Ozs7OztBQUdMLFNBQVNFLGFBQVQsQ0FBdUJILEdBQXZCLEVBQTRCTyxPQUE1QixFQUFxQztBQUNqQyxtQkFBVVAsR0FBVixlQUFrQk8sT0FBbEI7QUFDSDs7QUFFREMsT0FBTyxDQUFDbEIsWUFBUixHQUF1QixVQUFDVSxHQUFELEVBQVM7QUFBRSxTQUFPLElBQUlELGFBQUosQ0FBa0JDLEdBQWxCLENBQVA7QUFBZ0MsQ0FBbEUiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21pbmFjb2luL21pbmFjb2luLXNlcnZlci9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIGltcGxlbWVudHMgYSBsb2dnZXIgZmFjdG9yeSwgcmV0dXJuaW5nIGEgbG9nZ2VyIHRoYXQgaW1wbGVtZW50cyB3aW5zdG9uLlxuICpcbiAqIEF1dGhvcjogSm9obiBSLiBLb3NpbnNraVxuICogRGF0ZTogMjcgQXVnIDIwMTlcbiAqL1xuXG5jb25zdCB7dHJhbnNwb3J0cywgY3JlYXRlTG9nZ2VyLCBmb3JtYXR9ID0gcmVxdWlyZSgnd2luc3RvbicpO1xuXG4vL2NyZWF0ZSB3aW5zdG9uIGxvZ2dlclxuY29uc3QgbG9nZ2VyID0gY3JlYXRlTG9nZ2VyKHtcbiAgICBmb3JtYXQ6IGZvcm1hdC5jb21iaW5lKFxuICAgICAgICBmb3JtYXQudGltZXN0YW1wKCksXG4gICAgICAgIGZvcm1hdC5qc29uKClcbiAgICApLFxuICAgIHRyYW5zcG9ydHM6IFtcbiAgICAgIG5ldyB0cmFuc3BvcnRzLkNvbnNvbGUoe1xuICAgICAgICBoYW5kbGVFeGNlcHRpb25zOiB0cnVlLFxuICAgICAgICB0aW1lc3RhbXA6IHRydWVcbiAgICAgIH0pXG4gICAgXSxcbiAgICBleGl0T25FcnJvcjogZmFsc2Vcbn0pO1xuXG4vKipcbiAqIGdlbmVyaWMgbG9nZ2VyLCB3cmFwcyB3aW5zdG9uXG4gKi9cbmNsYXNzIFdpbnN0b25Mb2dnZXIge1xuXG4gICAgY29uc3RydWN0b3IodGFnKSB7XG4gICAgICAgIHRoaXMudGFnID0gdGFnO1xuICAgIH1cblxuICAgIGRlYnVnKHMpIHtcbiAgICAgICAgbG9nZ2VyLmRlYnVnKGZvcm1hdE1lc3NhZ2UodGhpcy50YWcsIHMpKTtcbiAgICB9XG5cbiAgICBpbmZvKHMpIHtcbiAgICAgICAgbG9nZ2VyLmluZm8oZm9ybWF0TWVzc2FnZSh0aGlzLnRhZywgcykpO1xuICAgIH1cblxuICAgIHdhcm4ocykge1xuICAgICAgICBsb2dnZXIud2Fybihmb3JtYXRNZXNzYWdlKHRoaXMudGFnLCBzKSk7XG4gICAgfVxuXG4gICAgZXJyb3Iocykge1xuICAgICAgICBsb2dnZXIuZXJyb3IoZm9ybWF0TWVzc2FnZSh0aGlzLnRhZywgcykpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZm9ybWF0TWVzc2FnZSh0YWcsIG1lc3NhZ2UpIHtcbiAgICByZXR1cm4gYCR7dGFnfTogJHttZXNzYWdlfWA7XG59XG5cbmV4cG9ydHMuY3JlYXRlTG9nZ2VyID0gKHRhZykgPT4geyByZXR1cm4gbmV3IFdpbnN0b25Mb2dnZXIodGFnKTsgfTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "winstonLogger.js"
      ],
      "names": [
        "require",
        "transports",
        "createLogger",
        "format",
        "logger",
        "combine",
        "timestamp",
        "json",
        "Console",
        "handleExceptions",
        "exitOnError",
        "WinstonLogger",
        "tag",
        "s",
        "debug",
        "formatMessage",
        "info",
        "warn",
        "error",
        "message",
        "exports"
      ],
      "mappings": "AAAA;AAEA;;;;;;;;;;;;;;eAQ2CA,OAAO,CAAC,SAAD,C;IAA3CC,U,YAAAA,U;IAAYC,Y,YAAAA,Y;IAAcC,M,YAAAA,M,EAEjC;;;AACA,IAAMC,MAAM,GAAGF,YAAY,CAAC;AACxBC,EAAAA,MAAM,EAAEA,MAAM,CAACE,OAAP,CACJF,MAAM,CAACG,SAAP,EADI,EAEJH,MAAM,CAACI,IAAP,EAFI,CADgB;AAKxBN,EAAAA,UAAU,EAAE,CACV,IAAIA,UAAU,CAACO,OAAf,CAAuB;AACrBC,IAAAA,gBAAgB,EAAE,IADG;AAErBH,IAAAA,SAAS,EAAE;AAFU,GAAvB,CADU,CALY;AAWxBI,EAAAA,WAAW,EAAE;AAXW,CAAD,CAA3B;AAcA;;;;IAGMC,a;;;AAEF,yBAAYC,GAAZ,EAAiB;AAAA;;AACb,SAAKA,GAAL,GAAWA,GAAX;AACH;;;;0BAEKC,C,EAAG;AACLT,MAAAA,MAAM,CAACU,KAAP,CAAaC,aAAa,CAAC,KAAKH,GAAN,EAAWC,CAAX,CAA1B;AACH;;;yBAEIA,C,EAAG;AACJT,MAAAA,MAAM,CAACY,IAAP,CAAYD,aAAa,CAAC,KAAKH,GAAN,EAAWC,CAAX,CAAzB;AACH;;;yBAEIA,C,EAAG;AACJT,MAAAA,MAAM,CAACa,IAAP,CAAYF,aAAa,CAAC,KAAKH,GAAN,EAAWC,CAAX,CAAzB;AACH;;;0BAEKA,C,EAAG;AACLT,MAAAA,MAAM,CAACc,KAAP,CAAaH,aAAa,CAAC,KAAKH,GAAN,EAAWC,CAAX,CAA1B;AACH;;;;;;AAGL,SAASE,aAAT,CAAuBH,GAAvB,EAA4BO,OAA5B,EAAqC;AACjC,mBAAUP,GAAV,eAAkBO,OAAlB;AACH;;AAEDC,OAAO,CAAClB,YAAR,GAAuB,UAACU,GAAD,EAAS;AAAE,SAAO,IAAID,aAAJ,CAAkBC,GAAlB,CAAP;AAAgC,CAAlE",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "sourcesContent": [
        "'use strict';\n\n/**\n * ------------------------\n * implements a logger factory, returning a logger that implements winston.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\n\nconst {transports, createLogger, format} = require('winston');\n\n//create winston logger\nconst logger = createLogger({\n    format: format.combine(\n        format.timestamp(),\n        format.json()\n    ),\n    transports: [\n      new transports.Console({\n        handleExceptions: true,\n        timestamp: true\n      })\n    ],\n    exitOnError: false\n});\n\n/**\n * generic logger, wraps winston\n */\nclass WinstonLogger {\n\n    constructor(tag) {\n        this.tag = tag;\n    }\n\n    debug(s) {\n        logger.debug(formatMessage(this.tag, s));\n    }\n\n    info(s) {\n        logger.info(formatMessage(this.tag, s));\n    }\n\n    warn(s) {\n        logger.warn(formatMessage(this.tag, s));\n    }\n\n    error(s) {\n        logger.error(formatMessage(this.tag, s));\n    }\n}\n\nfunction formatMessage(tag, message) {\n    return `${tag}: ${message}`;\n}\n\nexports.createLogger = (tag) => { return new WinstonLogger(tag); };"
      ]
    },
    "sourceType": "script",
    "mtime": 1567608962550
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/exceptionHandler.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/exceptionHandler.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/exceptionHandler.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/exceptionHandler.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
        "sourceFileName": "exceptionHandler.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n/**\n * ------------------------\n * generic exception handler: wraps try/catch. Is easier on the eyes, in my opinion,\n * than try/catch.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ExceptionHandler =\n/*#__PURE__*/\nfunction () {\n  function ExceptionHandler(logger) {\n    _classCallCheck(this, ExceptionHandler);\n\n    this.logger = logger;\n  }\n  /**\n   * wraps the given expression in a try/catch, and provides standard handling for any errors.\n   *\n   * @param {fn} expr\n   * @param {json} options:  {\n   *      defaultValue: null,\n   *      onError: (e) => {},\n   *      finally: (e) => {},\n   *      functionName: ''\n   *  }\n   * @returns {*} return value of given expression\n   */\n\n\n  _createClass(ExceptionHandler, [{\n    key: \"try\",\n    value: function _try(expr, options) {\n      try {\n        return expr();\n      } catch (err) {\n        this.handleError(err);\n        if (options && options.onError) return options.onError(err);\n        return options ? options.defaultValue : null;\n      } finally {\n        if (options && options[\"finally\"]) return options[\"finally\"](err);\n      }\n    }\n    /**\n     * wraps the expression as in try(*), but in such a way as to allow for awaiting async code.\n     *\n     * @param {fn} expr\n     * @param {json} options: see try(expr, options)\n     */\n\n  }, {\n    key: \"tryAsync\",\n    value: function () {\n      var _tryAsync = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(expr, options) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return expr();\n\n              case 3:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                this.handleError(_context.t0);\n\n                if (!(options && options.onError)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", options.onError(_context.t0));\n\n              case 11:\n                return _context.abrupt(\"return\", options ? options.defaultValue : null);\n\n              case 12:\n                _context.prev = 12;\n\n                if (!(options && options[\"finally\"])) {\n                  _context.next = 15;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", options[\"finally\"]());\n\n              case 15:\n                return _context.finish(12);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 6, 12, 16]]);\n      }));\n\n      function tryAsync(_x, _x2) {\n        return _tryAsync.apply(this, arguments);\n      }\n\n      return tryAsync;\n    }()\n    /**\n     * provides standard handling for any errors.\n     *\n     * @param {*} err\n     * @param {*} functionName\n     */\n\n  }, {\n    key: \"handleError\",\n    value: function handleError(err, functionName) {\n      var prefix = functionName && functionName.length ? ' [' + functionName + '] ' : '';\n\n      if (this.logger) {\n        this.logger.error(JSON.stringify(err) + ' ' + err);\n      }\n\n      if (err.stack) console.log(err.stack);\n    }\n  }]);\n\n  return ExceptionHandler;\n}();\n\nexports.createHandler = function (logger) {\n  return new ExceptionHandler(logger);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4Y2VwdGlvbkhhbmRsZXIuanMiXSwibmFtZXMiOlsiRXhjZXB0aW9uSGFuZGxlciIsImxvZ2dlciIsImV4cHIiLCJvcHRpb25zIiwiZXJyIiwiaGFuZGxlRXJyb3IiLCJvbkVycm9yIiwiZGVmYXVsdFZhbHVlIiwiZnVuY3Rpb25OYW1lIiwicHJlZml4IiwibGVuZ3RoIiwiZXJyb3IiLCJKU09OIiwic3RyaW5naWZ5Iiwic3RhY2siLCJjb25zb2xlIiwibG9nIiwiZXhwb3J0cyIsImNyZWF0ZUhhbmRsZXIiXSwibWFwcGluZ3MiOiJBQUFBO0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFTTUEsZ0I7OztBQUNGLDRCQUFZQyxNQUFaLEVBQW9CO0FBQUE7O0FBQ2hCLFNBQUtBLE1BQUwsR0FBY0EsTUFBZDtBQUNIO0FBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7eUJBWUlDLEksRUFBTUMsTyxFQUFTO0FBQ2YsVUFBRztBQUNDLGVBQU9ELElBQUksRUFBWDtBQUNILE9BRkQsQ0FHQSxPQUFNRSxHQUFOLEVBQVU7QUFDTixhQUFLQyxXQUFMLENBQWlCRCxHQUFqQjtBQUNBLFlBQUlELE9BQU8sSUFBSUEsT0FBTyxDQUFDRyxPQUF2QixFQUNJLE9BQU9ILE9BQU8sQ0FBQ0csT0FBUixDQUFnQkYsR0FBaEIsQ0FBUDtBQUVKLGVBQU9ELE9BQU8sR0FBR0EsT0FBTyxDQUFDSSxZQUFYLEdBQTBCLElBQXhDO0FBQ0gsT0FURCxTQVVRO0FBQ0osWUFBSUosT0FBTyxJQUFJQSxPQUFPLFdBQXRCLEVBQ0ksT0FBT0EsT0FBTyxXQUFQLENBQWdCQyxHQUFoQixDQUFQO0FBQ1A7QUFDSjtBQUVEOzs7Ozs7Ozs7Ozs7K0NBTWVGLEksRUFBTUMsTzs7Ozs7Ozt1QkFFQUQsSUFBSSxFOzs7Ozs7OztBQUdqQixxQkFBS0csV0FBTDs7c0JBQ0lGLE9BQU8sSUFBSUEsT0FBTyxDQUFDRyxPOzs7OztpREFDWkgsT0FBTyxDQUFDRyxPQUFSLGE7OztpREFFSkgsT0FBTyxHQUFHQSxPQUFPLENBQUNJLFlBQVgsR0FBMEIsSTs7Ozs7c0JBR3BDSixPQUFPLElBQUlBLE9BQU8sVzs7Ozs7aURBQ1hBLE9BQU8sV0FBUCxFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSW5COzs7Ozs7Ozs7Z0NBTVlDLEcsRUFBS0ksWSxFQUFjO0FBQzNCLFVBQUlDLE1BQU0sR0FBSUQsWUFBWSxJQUFJQSxZQUFZLENBQUNFLE1BQTdCLEdBQXNDLE9BQU9GLFlBQVAsR0FBc0IsSUFBNUQsR0FBbUUsRUFBakY7O0FBRUEsVUFBSSxLQUFLUCxNQUFULEVBQWlCO0FBQ2IsYUFBS0EsTUFBTCxDQUFZVSxLQUFaLENBQWtCQyxJQUFJLENBQUNDLFNBQUwsQ0FBZVQsR0FBZixJQUFzQixHQUF0QixHQUE0QkEsR0FBOUM7QUFDSDs7QUFDRCxVQUFJQSxHQUFHLENBQUNVLEtBQVIsRUFDSUMsT0FBTyxDQUFDQyxHQUFSLENBQVlaLEdBQUcsQ0FBQ1UsS0FBaEI7QUFDUDs7Ozs7O0FBSUxHLE9BQU8sQ0FBQ0MsYUFBUixHQUF3QixVQUFDakIsTUFBRCxFQUFZO0FBQUUsU0FBTyxJQUFJRCxnQkFBSixDQUFxQkMsTUFBckIsQ0FBUDtBQUFzQyxDQUE1RSIsInNvdXJjZVJvb3QiOiIvaG9tZS9hY2VyL0Rlc2t0b3AvbWluYWNvaW4vbWluYWNvaW4vbWluYWNvaW4tc2VydmVyL3NyYy91dGlsIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogZ2VuZXJpYyBleGNlcHRpb24gaGFuZGxlcjogd3JhcHMgdHJ5L2NhdGNoLiBJcyBlYXNpZXIgb24gdGhlIGV5ZXMsIGluIG15IG9waW5pb24sXG4gKiB0aGFuIHRyeS9jYXRjaC5cbiAqXG4gKiBBdXRob3I6IEpvaG4gUi4gS29zaW5za2lcbiAqIERhdGU6IDI3IEF1ZyAyMDE5XG4gKi9cblxuY2xhc3MgRXhjZXB0aW9uSGFuZGxlciB7XG4gICAgY29uc3RydWN0b3IobG9nZ2VyKSB7XG4gICAgICAgIHRoaXMubG9nZ2VyID0gbG9nZ2VyO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHdyYXBzIHRoZSBnaXZlbiBleHByZXNzaW9uIGluIGEgdHJ5L2NhdGNoLCBhbmQgcHJvdmlkZXMgc3RhbmRhcmQgaGFuZGxpbmcgZm9yIGFueSBlcnJvcnMuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge2ZufSBleHByXG4gICAgICogQHBhcmFtIHtqc29ufSBvcHRpb25zOiAge1xuICAgICAqICAgICAgZGVmYXVsdFZhbHVlOiBudWxsLFxuICAgICAqICAgICAgb25FcnJvcjogKGUpID0+IHt9LFxuICAgICAqICAgICAgZmluYWxseTogKGUpID0+IHt9LFxuICAgICAqICAgICAgZnVuY3Rpb25OYW1lOiAnJ1xuICAgICAqICB9XG4gICAgICogQHJldHVybnMgeyp9IHJldHVybiB2YWx1ZSBvZiBnaXZlbiBleHByZXNzaW9uXG4gICAgICovXG4gICAgdHJ5KGV4cHIsIG9wdGlvbnMpIHtcbiAgICAgICAgdHJ5e1xuICAgICAgICAgICAgcmV0dXJuIGV4cHIoKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaChlcnIpe1xuICAgICAgICAgICAgdGhpcy5oYW5kbGVFcnJvcihlcnIpO1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5vbkVycm9yKVxuICAgICAgICAgICAgICAgIHJldHVybiBvcHRpb25zLm9uRXJyb3IoZXJyKTtcblxuICAgICAgICAgICAgcmV0dXJuIG9wdGlvbnMgPyBvcHRpb25zLmRlZmF1bHRWYWx1ZSA6IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLmZpbmFsbHkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIG9wdGlvbnMuZmluYWxseShlcnIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogd3JhcHMgdGhlIGV4cHJlc3Npb24gYXMgaW4gdHJ5KCopLCBidXQgaW4gc3VjaCBhIHdheSBhcyB0byBhbGxvdyBmb3IgYXdhaXRpbmcgYXN5bmMgY29kZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7Zm59IGV4cHJcbiAgICAgKiBAcGFyYW0ge2pzb259IG9wdGlvbnM6IHNlZSB0cnkoZXhwciwgb3B0aW9ucylcbiAgICAgKi9cbiAgICBhc3luYyB0cnlBc3luYyhleHByLCBvcHRpb25zKSB7XG4gICAgICAgIHRyeXtcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCBleHByKCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2goZXJyKXtcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlRXJyb3IoZXJyKTtcbiAgICAgICAgICAgIGlmIChvcHRpb25zICYmIG9wdGlvbnMub25FcnJvcilcbiAgICAgICAgICAgICAgICByZXR1cm4gb3B0aW9ucy5vbkVycm9yKGVycik7XG5cbiAgICAgICAgICAgIHJldHVybiBvcHRpb25zID8gb3B0aW9ucy5kZWZhdWx0VmFsdWUgOiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5maW5hbGx5KVxuICAgICAgICAgICAgICAgIHJldHVybiBvcHRpb25zLmZpbmFsbHkoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHByb3ZpZGVzIHN0YW5kYXJkIGhhbmRsaW5nIGZvciBhbnkgZXJyb3JzLlxuICAgICAqXG4gICAgICogQHBhcmFtIHsqfSBlcnJcbiAgICAgKiBAcGFyYW0geyp9IGZ1bmN0aW9uTmFtZVxuICAgICAqL1xuICAgIGhhbmRsZUVycm9yKGVyciwgZnVuY3Rpb25OYW1lKSB7XG4gICAgICAgIGxldCBwcmVmaXggPSAoZnVuY3Rpb25OYW1lICYmIGZ1bmN0aW9uTmFtZS5sZW5ndGggPyAnIFsnICsgZnVuY3Rpb25OYW1lICsgJ10gJyA6ICcnKTtcblxuICAgICAgICBpZiAodGhpcy5sb2dnZXIpIHtcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLmVycm9yKEpTT04uc3RyaW5naWZ5KGVycikgKyAnICcgKyBlcnIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChlcnIuc3RhY2spXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIuc3RhY2spO1xuICAgIH1cbn1cblxuXG5leHBvcnRzLmNyZWF0ZUhhbmRsZXIgPSAobG9nZ2VyKSA9PiB7IHJldHVybiBuZXcgRXhjZXB0aW9uSGFuZGxlcihsb2dnZXIpOyB9OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "exceptionHandler.js"
      ],
      "names": [
        "ExceptionHandler",
        "logger",
        "expr",
        "options",
        "err",
        "handleError",
        "onError",
        "defaultValue",
        "functionName",
        "prefix",
        "length",
        "error",
        "JSON",
        "stringify",
        "stack",
        "console",
        "log",
        "exports",
        "createHandler"
      ],
      "mappings": "AAAA;AAEA;;;;;;;;;;;;;;;;;;;IASMA,gB;;;AACF,4BAAYC,MAAZ,EAAoB;AAAA;;AAChB,SAAKA,MAAL,GAAcA,MAAd;AACH;AAED;;;;;;;;;;;;;;;;yBAYIC,I,EAAMC,O,EAAS;AACf,UAAG;AACC,eAAOD,IAAI,EAAX;AACH,OAFD,CAGA,OAAME,GAAN,EAAU;AACN,aAAKC,WAAL,CAAiBD,GAAjB;AACA,YAAID,OAAO,IAAIA,OAAO,CAACG,OAAvB,EACI,OAAOH,OAAO,CAACG,OAAR,CAAgBF,GAAhB,CAAP;AAEJ,eAAOD,OAAO,GAAGA,OAAO,CAACI,YAAX,GAA0B,IAAxC;AACH,OATD,SAUQ;AACJ,YAAIJ,OAAO,IAAIA,OAAO,WAAtB,EACI,OAAOA,OAAO,WAAP,CAAgBC,GAAhB,CAAP;AACP;AACJ;AAED;;;;;;;;;;;;+CAMeF,I,EAAMC,O;;;;;;;uBAEAD,IAAI,E;;;;;;;;AAGjB,qBAAKG,WAAL;;sBACIF,OAAO,IAAIA,OAAO,CAACG,O;;;;;iDACZH,OAAO,CAACG,OAAR,a;;;iDAEJH,OAAO,GAAGA,OAAO,CAACI,YAAX,GAA0B,I;;;;;sBAGpCJ,OAAO,IAAIA,OAAO,W;;;;;iDACXA,OAAO,WAAP,E;;;;;;;;;;;;;;;;;;;AAInB;;;;;;;;;gCAMYC,G,EAAKI,Y,EAAc;AAC3B,UAAIC,MAAM,GAAID,YAAY,IAAIA,YAAY,CAACE,MAA7B,GAAsC,OAAOF,YAAP,GAAsB,IAA5D,GAAmE,EAAjF;;AAEA,UAAI,KAAKP,MAAT,EAAiB;AACb,aAAKA,MAAL,CAAYU,KAAZ,CAAkBC,IAAI,CAACC,SAAL,CAAeT,GAAf,IAAsB,GAAtB,GAA4BA,GAA9C;AACH;;AACD,UAAIA,GAAG,CAACU,KAAR,EACIC,OAAO,CAACC,GAAR,CAAYZ,GAAG,CAACU,KAAhB;AACP;;;;;;AAILG,OAAO,CAACC,aAAR,GAAwB,UAACjB,MAAD,EAAY;AAAE,SAAO,IAAID,gBAAJ,CAAqBC,MAArB,CAAP;AAAsC,CAA5E",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "sourcesContent": [
        "'use strict';\n\n/**\n * ------------------------\n * generic exception handler: wraps try/catch. Is easier on the eyes, in my opinion,\n * than try/catch.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\n\nclass ExceptionHandler {\n    constructor(logger) {\n        this.logger = logger;\n    }\n\n    /**\n     * wraps the given expression in a try/catch, and provides standard handling for any errors.\n     *\n     * @param {fn} expr\n     * @param {json} options:  {\n     *      defaultValue: null,\n     *      onError: (e) => {},\n     *      finally: (e) => {},\n     *      functionName: ''\n     *  }\n     * @returns {*} return value of given expression\n     */\n    try(expr, options) {\n        try{\n            return expr();\n        }\n        catch(err){\n            this.handleError(err);\n            if (options && options.onError)\n                return options.onError(err);\n\n            return options ? options.defaultValue : null;\n        }\n        finally {\n            if (options && options.finally)\n                return options.finally(err);\n        }\n    }\n\n    /**\n     * wraps the expression as in try(*), but in such a way as to allow for awaiting async code.\n     *\n     * @param {fn} expr\n     * @param {json} options: see try(expr, options)\n     */\n    async tryAsync(expr, options) {\n        try{\n            return await expr();\n        }\n        catch(err){\n            this.handleError(err);\n            if (options && options.onError)\n                return options.onError(err);\n\n            return options ? options.defaultValue : null;\n        }\n        finally {\n            if (options && options.finally)\n                return options.finally();\n        }\n    }\n\n    /**\n     * provides standard handling for any errors.\n     *\n     * @param {*} err\n     * @param {*} functionName\n     */\n    handleError(err, functionName) {\n        let prefix = (functionName && functionName.length ? ' [' + functionName + '] ' : '');\n\n        if (this.logger) {\n            this.logger.error(JSON.stringify(err) + ' ' + err);\n        }\n        if (err.stack)\n            console.log(err.stack);\n    }\n}\n\n\nexports.createHandler = (logger) => { return new ExceptionHandler(logger); };"
      ]
    },
    "sourceType": "script",
    "mtime": 1567271964391
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/TransactionPool.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/TransactionPool.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/TransactionPool.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/TransactionPool.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
        "sourceFileName": "TransactionPool.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'TXPL';\n\nvar Transaction = require('./Transaction');\n\nvar ioc = require('../../../util/iocContainer');\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: TransactionPool\n * -------------------------\n * pool of transactions that have not yet been included in the blockchain\n * (but may be eligible to be mined)\n *\n * author: John R. Kosinski\n */\n\nvar TransactionPool =\n/*#__PURE__*/\nfunction () {\n  _createClass(TransactionPool, [{\n    key: \"transactions\",\n    get: function get() {\n      return this._transactions;\n    }\n  }, {\n    key: \"txCount\",\n    get: function get() {\n      return this._transactions.length;\n    }\n    /**\n     * constructor\n     */\n\n  }]);\n\n  function TransactionPool() {\n    _classCallCheck(this, TransactionPool);\n\n    this._transactions = [];\n  }\n\n  _createClass(TransactionPool, [{\n    key: \"updateOrAddTransaction\",\n    value: function updateOrAddTransaction(transaction) {\n      var _this = this;\n\n      exception[\"try\"](function () {\n        //get existing trans if exists\n        var existing = _this.transactions.find(function (t) {\n          return t.id === transaction.id;\n        });\n\n        if (existing) {\n          logger.info(\"updating transaction \".concat(transaction.id, \": \").concat(transaction));\n          _this.transactions[_this.transactions.indexOf(existing)] = transaction;\n        } else {\n          logger.info(\"creating new transaction: \".concat(transaction));\n\n          _this.transactions.push(transaction);\n        }\n      });\n    }\n    /*Transaction*/\n\n  }, {\n    key: \"existingTransaction\",\n    value: function existingTransaction(address) {\n      var _this2 = this;\n\n      return exception[\"try\"](function () {\n        return _this2.transactions.find(function (t) {\n          return t.input.address === address;\n        });\n      });\n    }\n    /*Transaction[]*/\n\n  }, {\n    key: \"pendingTransactions\",\n    value: function pendingTransactions(address) {\n      var _this3 = this;\n\n      return exception[\"try\"](function () {\n        return _this3.transactions.filter(function (t) {\n          return t.input.address === address;\n        });\n      });\n    }\n    /**\n     * gets a list of valid transactions; ones whose total output is equal to input\n     * with valid signature\n     * @param {Blockchain} blockchain (optional) if specified, will check for duplicate transaction \n     * id in chain (transaction duplicate is not valid)\n     * @returns {Transaction[]}\n     */\n\n    /*Transaction[]*/\n\n  }, {\n    key: \"validTransactions\",\n    value: function validTransactions(blockchain) {\n      return this.transactions.filter(function (transaction) {\n        return exception[\"try\"](function () {\n          // calculate total of all outputs\n          var outputTotal = transaction.outputs ? transaction.outputs.reduce(function (total, output) {\n            return total + output.amount;\n          }, 0) : 0; //make sure the transaction hasn't already been added to the chain\n\n          if (blockchain && blockchain.containsTransaction(transaction.id)) {\n            logger.warn(\"transaction \".concat(transaction.id, \" already exists on the chain and should not be included\"));\n            return;\n          } //check that outputs == input\n\n\n          if (transaction.input.amount !== outputTotal) {\n            logger.warn(\"invalid transaction \".concat(transaction.id, \" from \").concat(transaction.input.address));\n            return;\n          } //check valid signature\n\n\n          if (!Transaction.verifyTransaction(transaction)) {\n            logger.warn(\"invalid signature for transaction \".concat(transaction.id, \" from \").concat(transaction.input.address));\n            return;\n          }\n\n          return transaction;\n        });\n      });\n    }\n    /**\n     * clears all transactions from pool\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._transactions = [];\n    }\n  }]);\n\n  return TransactionPool;\n}();\n\nmodule.exports = TransactionPool;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "TransactionPool.js"
      ],
      "names": [
        "LOG_TAG",
        "Transaction",
        "require",
        "ioc",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "TransactionPool",
        "_transactions",
        "length",
        "transaction",
        "existing",
        "transactions",
        "find",
        "t",
        "id",
        "info",
        "indexOf",
        "push",
        "address",
        "input",
        "filter",
        "blockchain",
        "outputTotal",
        "outputs",
        "reduce",
        "total",
        "output",
        "amount",
        "containsTransaction",
        "warn",
        "verifyTransaction",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAG,MAAhB;;AAEA,IAAMC,WAAW,GAAGC,OAAO,CAAC,eAAD,CAA3B;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,4BAAD,CAAnB;;AAEA,IAAME,MAAM,GAAGD,GAAG,CAACE,aAAJ,CAAkBC,YAAlB,CAA+BN,OAA/B,CAAf;AACA,IAAMO,SAAS,GAAGJ,GAAG,CAACK,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;;IAQMM,e;;;;;wBACiB;AAAE,aAAO,KAAKC,aAAZ;AAA4B;;;wBACnC;AAAE,aAAO,KAAKA,aAAL,CAAmBC,MAA1B;AAAmC;AAEnD;;;;;;AAGA,6BAAc;AAAA;;AACV,SAAKD,aAAL,GAAqB,EAArB;AACH;;;;2CAEsBE,W,EAAa;AAAA;;AAChCN,MAAAA,SAAS,OAAT,CAAc,YAAM;AAChB;AACA,YAAIO,QAAQ,GAAG,KAAI,CAACC,YAAL,CAAkBC,IAAlB,CAAuB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,EAAF,KAASL,WAAW,CAACK,EAAzB;AAAA,SAAxB,CAAf;;AAEA,YAAIJ,QAAJ,EAAc;AACVV,UAAAA,MAAM,CAACe,IAAP,gCAAoCN,WAAW,CAACK,EAAhD,eAAuDL,WAAvD;AACA,UAAA,KAAI,CAACE,YAAL,CAAkB,KAAI,CAACA,YAAL,CAAkBK,OAAlB,CAA0BN,QAA1B,CAAlB,IAAyDD,WAAzD;AACH,SAHD,MAIK;AACDT,UAAAA,MAAM,CAACe,IAAP,qCAAyCN,WAAzC;;AACA,UAAA,KAAI,CAACE,YAAL,CAAkBM,IAAlB,CAAuBR,WAAvB;AACH;AACJ,OAZD;AAaH;AAED;;;;wCAAoCS,O,EAAS;AAAA;;AACzC,aAAOf,SAAS,OAAT,CAAc,YAAM;AACvB,eAAO,MAAI,CAACQ,YAAL,CAAkBC,IAAlB,CAAuB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACM,KAAF,CAAQD,OAAR,KAAoBA,OAAxB;AAAA,SAAxB,CAAP;AACH,OAFM,CAAP;AAGH;AAED;;;;wCAAsCA,O,EAAS;AAAA;;AAC3C,aAAOf,SAAS,OAAT,CAAc,YAAM;AACvB,eAAO,MAAI,CAACQ,YAAL,CAAkBS,MAAlB,CAAyB,UAAAP,CAAC;AAAA,iBAAIA,CAAC,CAACM,KAAF,CAAQD,OAAR,KAAoBA,OAAxB;AAAA,SAA1B,CAAP;AACH,OAFM,CAAP;AAGH;AAED;;;;;;;;AAOA;;;;sCAAoCG,U,EAAY;AAC5C,aAAO,KAAKV,YAAL,CAAkBS,MAAlB,CAAyB,UAAAX,WAAW,EAAI;AAC3C,eAAON,SAAS,OAAT,CAAc,YAAM;AACvB;AACA,cAAMmB,WAAW,GAAGb,WAAW,CAACc,OAAZ,GAChBd,WAAW,CAACc,OAAZ,CAAoBC,MAApB,CAA2B,UAACC,KAAD,EAAQC,MAAR,EAAiB;AACxC,mBAAOD,KAAK,GAAGC,MAAM,CAACC,MAAtB;AACH,WAFD,EAEE,CAFF,CADgB,GAId,CAJN,CAFuB,CAQvB;;AACA,cAAIN,UAAU,IAAIA,UAAU,CAACO,mBAAX,CAA+BnB,WAAW,CAACK,EAA3C,CAAlB,EAAiE;AAC7Dd,YAAAA,MAAM,CAAC6B,IAAP,uBAA2BpB,WAAW,CAACK,EAAvC;AACA;AACH,WAZsB,CAcvB;;;AACA,cAAIL,WAAW,CAACU,KAAZ,CAAkBQ,MAAlB,KAA6BL,WAAjC,EAA+C;AAC3CtB,YAAAA,MAAM,CAAC6B,IAAP,+BAAmCpB,WAAW,CAACK,EAA/C,mBAA0DL,WAAW,CAACU,KAAZ,CAAkBD,OAA5E;AACA;AACH,WAlBsB,CAoBvB;;;AACA,cAAI,CAACrB,WAAW,CAACiC,iBAAZ,CAA8BrB,WAA9B,CAAL,EAAiD;AAC7CT,YAAAA,MAAM,CAAC6B,IAAP,6CAAiDpB,WAAW,CAACK,EAA7D,mBAAwEL,WAAW,CAACU,KAAZ,CAAkBD,OAA1F;AACA;AACH;;AAED,iBAAOT,WAAP;AACH,SA3BM,CAAP;AA4BH,OA7BM,CAAP;AA8BH;AAED;;;;;;4BAGQ;AACJ,WAAKF,aAAL,GAAqB,EAArB;AACH;;;;;;AAGLwB,MAAM,CAACC,OAAP,GAAiB1B,eAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'TXPL';\n\nconst Transaction = require('./Transaction');\nconst ioc = require('../../../util/iocContainer');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: TransactionPool\n * -------------------------\n * pool of transactions that have not yet been included in the blockchain\n * (but may be eligible to be mined)\n *\n * author: John R. Kosinski\n */\nclass TransactionPool {\n    get transactions() { return this._transactions; }\n    get txCount() { return this._transactions.length; }\n\n    /**\n     * constructor\n     */\n    constructor() {\n        this._transactions = [];\n    }\n\n    updateOrAddTransaction(transaction) {\n        exception.try(() => {\n            //get existing trans if exists\n            let existing = this.transactions.find(t => t.id === transaction.id);\n\n            if (existing) {\n                logger.info(`updating transaction ${transaction.id}: ${transaction}`);\n                this.transactions[this.transactions.indexOf(existing)] = transaction;\n            }\n            else {\n                logger.info(`creating new transaction: ${transaction}`);\n                this.transactions.push(transaction);\n            }\n        });\n    }\n\n    /*Transaction*/ existingTransaction(address) {\n        return exception.try(() => {\n            return this.transactions.find(t => t.input.address === address);\n        });\n    }\n    \n    /*Transaction[]*/ pendingTransactions(address) {\n        return exception.try(() => {\n            return this.transactions.filter(t => t.input.address === address);\n        });\n    }\n\n    /**\n     * gets a list of valid transactions; ones whose total output is equal to input\n     * with valid signature\n     * @param {Blockchain} blockchain (optional) if specified, will check for duplicate transaction \n     * id in chain (transaction duplicate is not valid)\n     * @returns {Transaction[]}\n     */\n    /*Transaction[]*/ validTransactions(blockchain) {\n        return this.transactions.filter(transaction => {\n            return exception.try(() => {\n                // calculate total of all outputs\n                const outputTotal = transaction.outputs ?\n                    transaction.outputs.reduce((total, output)=>{\n                        return total + output.amount;\n                    },0)\n                    : 0;\n                \n                //make sure the transaction hasn't already been added to the chain\n                if (blockchain && blockchain.containsTransaction(transaction.id)){\n                    logger.warn(`transaction ${transaction.id} already exists on the chain and should not be included`); \n                    return;\n                }\n\n                //check that outputs == input\n                if (transaction.input.amount !== outputTotal ) {\n                    logger.warn(`invalid transaction ${transaction.id} from ${transaction.input.address}`);\n                    return;\n                }\n\n                //check valid signature\n                if (!Transaction.verifyTransaction(transaction)) {\n                    logger.warn(`invalid signature for transaction ${transaction.id} from ${transaction.input.address}`);\n                    return;\n                }\n\n                return transaction;\n            });\n        });\n    }\n\n    /**\n     * clears all transactions from pool\n     */\n    clear() {\n        this._transactions = [];\n    }\n}\n\nmodule.exports = TransactionPool;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567749101029
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Wallet.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Wallet.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Wallet.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Wallet.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
        "sourceFileName": "Wallet.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'WAL';\n\nvar _require = require('../../../config'),\n    INITIAL_BALANCE = _require.INITIAL_BALANCE;\n\nvar cryptoUtil = require('../../../util/cryptoUtil');\n\nvar ioc = require('../../../util/iocContainer');\n\nvar Transaction = require('./Transaction');\n\nvar EventEmitter = require('events');\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: Wallet\n * ----------------\n * wallet class with public/private key pair and balance\n *\n * supports these events:\n * - update\n *\n * author: John R. Kosinski\n */\n\nvar Wallet =\n/*#__PURE__*/\nfunction () {\n  _createClass(Wallet, [{\n    key: \"balance\",\n    get: function get() {\n      return this._balance;\n    }\n  }, {\n    key: \"keyPair\",\n    get: function get() {\n      return this._keyPair;\n    }\n  }, {\n    key: \"publicKey\",\n    get: function get() {\n      return this._publicKey;\n    }\n    /**\n     * constructor\n     */\n\n  }]);\n\n  function Wallet() {\n    _classCallCheck(this, Wallet);\n\n    this._balance = INITIAL_BALANCE;\n    this._keyPair = cryptoUtil.generateKeyPair();\n    this._publicKey = this.keyPair.getPublic().encode('hex');\n    this._emitter = new EventEmitter();\n    logger.info(\"wallet created: public key is \".concat(this._publicKey.toString()));\n  }\n  /**\n   * signs the given data using the wallet's keypair\n   * @param {string} data\n   * @returns {string}\n   */\n\n  /*Signature*/\n\n\n  _createClass(Wallet, [{\n    key: \"sign\",\n    value: function sign(data) {\n      return this.keyPair.sign(data);\n    }\n    /**\n     * originates a transaction to send funds from this wallet to a specified \n     * wallet; creates the transaction, signs it, adds it to the tx pool, and \n     * returns it. \n     * @param {string} recipient public key of recipient wallet\n     * @param {float} amount amount to send\n     * @param {Blockchain} blockchain \n     * @param {TransactionPool} transactionPool \n     * @returns {Transaction}\n     */\n\n    /*Transaction*/\n\n  }, {\n    key: \"createTransaction\",\n    value: function createTransaction(recipient, amount, blockchain, transactionPool) {\n      var _this = this;\n\n      return exception[\"try\"](function () {\n        logger.info(\"creating transaction: send \".concat(amount, \" to \").concat(recipient)); //update balance\n\n        _this.updateBalance(blockchain); //disallow transactions to myself \n\n\n        if (recipient === _this.publicKey) {\n          logger.warn('cannot send a transaction to yourself!');\n          return;\n        } //disallow transaction if more than balance\n\n\n        if (amount > _this.balance) {\n          logger.warn(\"amount: \".concat(amount, \" exceeds the current balance: \").concat(_this.balance));\n          return;\n        } //get existing transaction\n\n\n        var transaction = transactionPool.existingTransaction(_this.publicKey);\n\n        if (transaction) {\n          //if existing transaction, we have to take its amount into account \n          //when calculating the balance \n          var combinedAmount = amount + transaction.outputs[0].amount;\n\n          if (combinedAmount > _this.balance) {\n            logger.warn(\"combined amount: \".concat(combinedAmount, \" exceeds the current balance: \").concat(_this.balance));\n            return;\n          }\n\n          transaction.update(_this, recipient, amount);\n        } else {\n          transaction = Transaction.newTransaction(_this, recipient, amount);\n          transactionPool.updateOrAddTransaction(transaction);\n        }\n\n        return transaction;\n      });\n    }\n    /**\n     * recalculates the wallet's balance according to the transactions in the given blockchain\n     * @returns {float} the calculated balance\n     * @param {Blockchain} blockchain\n     */\n\n    /*float*/\n\n  }, {\n    key: \"calculateBalance\",\n    value: function calculateBalance(blockchain) {\n      var _this2 = this;\n\n      return exception[\"try\"](function () {\n        //existing balance\n        var balance = INITIAL_BALANCE; // store all the transactions in blockchain, in temp array\n\n        var transactions = [];\n        blockchain.chain.forEach(function (block) {\n          return block.data.forEach(function (transaction) {\n            transactions.push(transaction);\n          });\n        }); //get all transactions sent from this wallet\n\n        var inputTransactions = transactions.filter(function (t) {\n          return t.input.address === _this2.publicKey;\n        });\n        var lastTransTime = 0;\n\n        if (inputTransactions.length > 0) {\n          //get latest transaction\n          var recentInputTrans = inputTransactions.reduce(function (prev, current) {\n            return prev.input.timestamp > current.input.timestamp ? prev : current;\n          }); //balance is output back to sender\n\n          balance = recentInputTrans.outputs.find(function (output) {\n            return output.address === _this2.publicKey;\n          }).amount; // save the timestamp of the latest transaction made by the wallet\n\n          lastTransTime = recentInputTrans.input.timestamp;\n        } // get the transactions that were addressed to this wallet ie somebody sent some moeny\n        // and add its ouputs.\n        // since we save the timestamp we would only add the outputs of the transactions received\n        // only after the latest transactions made by us\n\n\n        transactions.forEach(function (transaction) {\n          if (transaction.input.timestamp > lastTransTime) {\n            transaction.outputs.find(function (output) {\n              if (output.address === _this2.publicKey) {\n                balance += output.amount;\n              }\n            });\n          }\n        });\n        return balance;\n      });\n    }\n    /**\n     * recalculates the wallet's balance according to the transactions in the given blockchain\n     * and replaces the current balance with the calculated balance\n     * @param {Blockchain} blockchain\n     */\n\n  }, {\n    key: \"updateBalance\",\n    value: function updateBalance(blockchain) {\n      var _this3 = this;\n\n      exception[\"try\"](function () {\n        var newBalance = _this3.calculateBalance(blockchain);\n\n        if (newBalance !== _this3._balance) {\n          _this3._balance = _this3.calculateBalance(blockchain);\n\n          _this3._emitter.emit('update');\n        }\n      });\n    }\n    /**\n     * subscribe to an event\n     * @param {string} eventName\n     * @param {fn} callback\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(eventName, callback) {\n      if (eventName && callback) {\n        this._emitter.on(eventName, callback);\n      }\n    }\n    /**\n     * returns a string representation\n     */\n\n    /*string*/\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Wallet -\\n        publicKey: \".concat(this.publicKey.toString(), \",\\n        balance  : \").concat(this.balance);\n    }\n    /**\n     * returns a json representation\n     */\n\n    /*json*/\n\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      return {\n        publicKey: this.publicKey.toString(),\n        privateKey: this.keyPair.priv.toString(16, 2),\n        balance: this.balance\n      };\n    }\n    /**\n     * returns a json representation converted to string\n     */\n\n    /*string*/\n\n  }, {\n    key: \"toJsonString\",\n    value: function toJsonString() {\n      return JSON.stringify(this.toJson());\n    }\n    /**\n     * creates a new wallet to be used as the sender when awarding the mining reward\n     * @returns {Wallet}\n     */\n\n  }], [{\n    key: \"blockchainWallet\",\n    value: function blockchainWallet() {\n      var _this4 = this;\n\n      return exception[\"try\"](function () {\n        var blockchainWallet = new _this4();\n        blockchainWallet.address = 'blockchain-wallet';\n        return blockchainWallet;\n      });\n    }\n    /**\n     * deserializes a wallet instance from JSON data\n     * @returns {Wallet}\n     * @param {json} json\n     */\n\n  }, {\n    key: \"fromJson\",\n    value: function fromJson(json) {\n      var _this5 = this;\n\n      return exception[\"try\"](function () {\n        var output = new _this5();\n        output._balance = json.balance;\n        output._keyPair = cryptoUtil.deserializeKeyPair(json.publicKey, json.privateKey);\n        output._publicKey = output.keyPair.getPublic().encode('hex');\n        return output;\n      });\n    }\n  }]);\n\n  return Wallet;\n}();\n\nmodule.exports = Wallet;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Wallet.js"
      ],
      "names": [
        "LOG_TAG",
        "require",
        "INITIAL_BALANCE",
        "cryptoUtil",
        "ioc",
        "Transaction",
        "EventEmitter",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Wallet",
        "_balance",
        "_keyPair",
        "_publicKey",
        "generateKeyPair",
        "keyPair",
        "getPublic",
        "encode",
        "_emitter",
        "info",
        "toString",
        "data",
        "sign",
        "recipient",
        "amount",
        "blockchain",
        "transactionPool",
        "updateBalance",
        "publicKey",
        "warn",
        "balance",
        "transaction",
        "existingTransaction",
        "combinedAmount",
        "outputs",
        "update",
        "newTransaction",
        "updateOrAddTransaction",
        "transactions",
        "chain",
        "forEach",
        "block",
        "push",
        "inputTransactions",
        "filter",
        "t",
        "input",
        "address",
        "lastTransTime",
        "length",
        "recentInputTrans",
        "reduce",
        "prev",
        "current",
        "timestamp",
        "find",
        "output",
        "newBalance",
        "calculateBalance",
        "emit",
        "eventName",
        "callback",
        "on",
        "privateKey",
        "priv",
        "JSON",
        "stringify",
        "toJson",
        "blockchainWallet",
        "json",
        "deserializeKeyPair",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAG,KAAhB;;eAE4BC,OAAO,CAAC,iBAAD,C;IAA3BC,e,YAAAA,e;;AACR,IAAMC,UAAU,GAAGF,OAAO,CAAC,0BAAD,CAA1B;;AACA,IAAMG,GAAG,GAAGH,OAAO,CAAC,4BAAD,CAAnB;;AACA,IAAMI,WAAW,GAAGJ,OAAO,CAAC,eAAD,CAA3B;;AACA,IAAMK,YAAY,GAAGL,OAAO,CAAC,QAAD,CAA5B;;AAEA,IAAMM,MAAM,GAAGH,GAAG,CAACI,aAAJ,CAAkBC,YAAlB,CAA+BT,OAA/B,CAAf;AACA,IAAMU,SAAS,GAAGN,GAAG,CAACO,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;;;;IAUMM,M;;;;;wBACY;AAAE,aAAO,KAAKC,QAAZ;AAAuB;;;wBACzB;AAAE,aAAO,KAAKC,QAAZ;AAAuB;;;wBACvB;AAAE,aAAO,KAAKC,UAAZ;AAAyB;AAE3C;;;;;;AAGA,oBAAc;AAAA;;AACV,SAAKF,QAAL,GAAgBZ,eAAhB;AACA,SAAKa,QAAL,GAAgBZ,UAAU,CAACc,eAAX,EAAhB;AACA,SAAKD,UAAL,GAAkB,KAAKE,OAAL,CAAaC,SAAb,GAAyBC,MAAzB,CAAgC,KAAhC,CAAlB;AACA,SAAKC,QAAL,GAAgB,IAAIf,YAAJ,EAAhB;AAEAC,IAAAA,MAAM,CAACe,IAAP,yCAA6C,KAAKN,UAAL,CAAgBO,QAAhB,EAA7C;AACH;AAED;;;;;;AAKA;;;;;yBAAmBC,I,EAAM;AACrB,aAAO,KAAKN,OAAL,CAAaO,IAAb,CAAkBD,IAAlB,CAAP;AACH;AAED;;;;;;;;;;;AAUA;;;;sCAAkCE,S,EAAWC,M,EAAQC,U,EAAYC,e,EAAiB;AAAA;;AAC9E,aAAOnB,SAAS,OAAT,CAAc,YAAM;AACvBH,QAAAA,MAAM,CAACe,IAAP,sCAA0CK,MAA1C,iBAAuDD,SAAvD,GADuB,CAGvB;;AACA,QAAA,KAAI,CAACI,aAAL,CAAmBF,UAAnB,EAJuB,CAMvB;;;AACA,YAAIF,SAAS,KAAK,KAAI,CAACK,SAAvB,EAAkC;AAC9BxB,UAAAA,MAAM,CAACyB,IAAP,CAAY,wCAAZ;AACA;AACH,SAVsB,CAYvB;;;AACA,YAAIL,MAAM,GAAG,KAAI,CAACM,OAAlB,EAA2B;AACvB1B,UAAAA,MAAM,CAACyB,IAAP,mBAAuBL,MAAvB,2CAA8D,KAAI,CAACM,OAAnE;AACA;AACH,SAhBsB,CAkBvB;;;AACA,YAAIC,WAAW,GAAGL,eAAe,CAACM,mBAAhB,CAAoC,KAAI,CAACJ,SAAzC,CAAlB;;AAEA,YAAIG,WAAJ,EAAiB;AACb;AACA;AACA,cAAME,cAAc,GAAIT,MAAM,GAAGO,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuBV,MAAxD;;AACA,cAAIS,cAAc,GAAG,KAAI,CAACH,OAA1B,EAAmC;AAC/B1B,YAAAA,MAAM,CAACyB,IAAP,4BAAgCI,cAAhC,2CAA+E,KAAI,CAACH,OAApF;AACA;AACH;;AAEDC,UAAAA,WAAW,CAACI,MAAZ,CAAmB,KAAnB,EAAyBZ,SAAzB,EAAoCC,MAApC;AACH,SAVD,MAWK;AACDO,UAAAA,WAAW,GAAG7B,WAAW,CAACkC,cAAZ,CAA2B,KAA3B,EAAiCb,SAAjC,EAA4CC,MAA5C,CAAd;AACAE,UAAAA,eAAe,CAACW,sBAAhB,CAAuCN,WAAvC;AACH;;AAED,eAAOA,WAAP;AACH,OAtCM,CAAP;AAuCH;AAED;;;;;;AAKA;;;;qCAA2BN,U,EAAY;AAAA;;AACnC,aAAOlB,SAAS,OAAT,CAAc,YAAM;AAEvB;AACA,YAAIuB,OAAO,GAAG/B,eAAd,CAHuB,CAKvB;;AACA,YAAIuC,YAAY,GAAG,EAAnB;AACAb,QAAAA,UAAU,CAACc,KAAX,CAAiBC,OAAjB,CAAyB,UAAAC,KAAK;AAAA,iBAAIA,KAAK,CAACpB,IAAN,CAAWmB,OAAX,CAAmB,UAAAT,WAAW,EAAI;AAChEO,YAAAA,YAAY,CAACI,IAAb,CAAkBX,WAAlB;AACH,WAFiC,CAAJ;AAAA,SAA9B,EAPuB,CAWvB;;AACA,YAAMY,iBAAiB,GAAGL,YAAY,CAACM,MAAb,CACtB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,KAAF,CAAQC,OAAR,KAAoB,MAAI,CAACnB,SAA7B;AAAA,SADqB,CAA1B;AAIA,YAAIoB,aAAa,GAAG,CAApB;;AAEA,YAAIL,iBAAiB,CAACM,MAAlB,GAA2B,CAA/B,EAAkC;AAE9B;AACA,cAAMC,gBAAgB,GAAGP,iBAAiB,CAACQ,MAAlB,CACrB,UAACC,IAAD,EAAMC,OAAN;AAAA,mBAAiBD,IAAI,CAACN,KAAL,CAAWQ,SAAX,GAAuBD,OAAO,CAACP,KAAR,CAAcQ,SAArC,GAAiDF,IAAjD,GAAwDC,OAAzE;AAAA,WADqB,CAAzB,CAH8B,CAO9B;;AACAvB,UAAAA,OAAO,GAAGoB,gBAAgB,CAAChB,OAAjB,CAAyBqB,IAAzB,CAA8B,UAAAC,MAAM;AAAA,mBAAIA,MAAM,CAACT,OAAP,KAAmB,MAAI,CAACnB,SAA5B;AAAA,WAApC,EAA2EJ,MAArF,CAR8B,CAU9B;;AACAwB,UAAAA,aAAa,GAAGE,gBAAgB,CAACJ,KAAjB,CAAuBQ,SAAvC;AACH,SA9BsB,CAgCvB;AACA;AACA;AACA;;;AACAhB,QAAAA,YAAY,CAACE,OAAb,CAAqB,UAAAT,WAAW,EAAI;AAChC,cAAIA,WAAW,CAACe,KAAZ,CAAkBQ,SAAlB,GAA8BN,aAAlC,EAAiD;AAC7CjB,YAAAA,WAAW,CAACG,OAAZ,CAAoBqB,IAApB,CAAyB,UAAAC,MAAM,EAAI;AAC/B,kBAAIA,MAAM,CAACT,OAAP,KAAmB,MAAI,CAACnB,SAA5B,EAAuC;AACnCE,gBAAAA,OAAO,IAAI0B,MAAM,CAAChC,MAAlB;AACH;AACJ,aAJD;AAKH;AACJ,SARD;AAUA,eAAOM,OAAP;AACH,OA/CM,CAAP;AAgDH;AAED;;;;;;;;kCAKcL,U,EAAY;AAAA;;AACtBlB,MAAAA,SAAS,OAAT,CAAc,YAAM;AAChB,YAAMkD,UAAU,GAAG,MAAI,CAACC,gBAAL,CAAsBjC,UAAtB,CAAnB;;AACA,YAAIgC,UAAU,KAAK,MAAI,CAAC9C,QAAxB,EAAkC;AAC9B,UAAA,MAAI,CAACA,QAAL,GAAgB,MAAI,CAAC+C,gBAAL,CAAsBjC,UAAtB,CAAhB;;AACA,UAAA,MAAI,CAACP,QAAL,CAAcyC,IAAd,CAAmB,QAAnB;AACH;AACJ,OAND;AAOH;AAED;;;;;;;;uBAKGC,S,EAAWC,Q,EAAU;AACpB,UAAID,SAAS,IAAIC,QAAjB,EAA2B;AACvB,aAAK3C,QAAL,CAAc4C,EAAd,CAAiBF,SAAjB,EAA4BC,QAA5B;AACH;AACJ;AAED;;;;AAGA;;;;+BAAsB;AAClB,oDACa,KAAKjC,SAAL,CAAeR,QAAf,EADb,mCAEa,KAAKU,OAFlB;AAGH;AAED;;;;AAGA;;;;6BAAkB;AACd,aAAO;AACHF,QAAAA,SAAS,EAAE,KAAKA,SAAL,CAAeR,QAAf,EADR;AAEH2C,QAAAA,UAAU,EAAE,KAAKhD,OAAL,CAAaiD,IAAb,CAAkB5C,QAAlB,CAA2B,EAA3B,EAA8B,CAA9B,CAFT;AAGHU,QAAAA,OAAO,EAAE,KAAKA;AAHX,OAAP;AAKH;AAED;;;;AAGA;;;;mCAA0B;AACtB,aAAOmC,IAAI,CAACC,SAAL,CAAe,KAAKC,MAAL,EAAf,CAAP;AACH;AAED;;;;;;;uCAIqC;AAAA;;AACjC,aAAO5D,SAAS,OAAT,CAAc,YAAM;AACvB,YAAM6D,gBAAgB,GAAG,IAAI,MAAJ,EAAzB;AACAA,QAAAA,gBAAgB,CAACrB,OAAjB,GAA2B,mBAA3B;AACA,eAAOqB,gBAAP;AACH,OAJM,CAAP;AAKH;AAED;;;;;;;;6BAK2BC,I,EAAM;AAAA;;AAC7B,aAAO9D,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMiD,MAAM,GAAG,IAAI,MAAJ,EAAf;AAEAA,QAAAA,MAAM,CAAC7C,QAAP,GAAkB0D,IAAI,CAACvC,OAAvB;AACA0B,QAAAA,MAAM,CAAC5C,QAAP,GAAkBZ,UAAU,CAACsE,kBAAX,CAA8BD,IAAI,CAACzC,SAAnC,EAA8CyC,IAAI,CAACN,UAAnD,CAAlB;AACAP,QAAAA,MAAM,CAAC3C,UAAP,GAAoB2C,MAAM,CAACzC,OAAP,CAAeC,SAAf,GAA2BC,MAA3B,CAAkC,KAAlC,CAApB;AAEA,eAAOuC,MAAP;AACH,OARM,CAAP;AASH;;;;;;AAGLe,MAAM,CAACC,OAAP,GAAiB9D,MAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'WAL';\n\nconst { INITIAL_BALANCE } = require('../../../config');\nconst cryptoUtil = require('../../../util/cryptoUtil');\nconst ioc = require('../../../util/iocContainer');\nconst Transaction = require('./Transaction');\nconst EventEmitter = require('events');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: Wallet\n * ----------------\n * wallet class with public/private key pair and balance\n *\n * supports these events:\n * - update\n *\n * author: John R. Kosinski\n */\nclass Wallet {\n    get balance() { return this._balance; }\n    get keyPair() { return this._keyPair; }\n    get publicKey() { return this._publicKey; }\n\n    /**\n     * constructor\n     */\n    constructor() {\n        this._balance = INITIAL_BALANCE;\n        this._keyPair = cryptoUtil.generateKeyPair();\n        this._publicKey = this.keyPair.getPublic().encode('hex');\n        this._emitter = new EventEmitter();\n\n        logger.info(`wallet created: public key is ${this._publicKey.toString()}`);\n    }\n\n    /**\n     * signs the given data using the wallet's keypair\n     * @param {string} data\n     * @returns {string}\n     */\n    /*Signature*/ sign(data) {\n        return this.keyPair.sign(data);\n    }\n\n    /**\n     * originates a transaction to send funds from this wallet to a specified \n     * wallet; creates the transaction, signs it, adds it to the tx pool, and \n     * returns it. \n     * @param {string} recipient public key of recipient wallet\n     * @param {float} amount amount to send\n     * @param {Blockchain} blockchain \n     * @param {TransactionPool} transactionPool \n     * @returns {Transaction}\n     */\n    /*Transaction*/ createTransaction(recipient, amount, blockchain, transactionPool) {\n        return exception.try(() => {\n            logger.info(`creating transaction: send ${amount} to ${recipient}`);\n\n            //update balance\n            this.updateBalance(blockchain);\n            \n            //disallow transactions to myself \n            if (recipient === this.publicKey) {\n                logger.warn('cannot send a transaction to yourself!'); \n                return; \n            }\n\n            //disallow transaction if more than balance\n            if (amount > this.balance) {\n                logger.warn(`amount: ${amount} exceeds the current balance: ${this.balance}`);\n                return;\n            }\n\n            //get existing transaction\n            let transaction = transactionPool.existingTransaction(this.publicKey);\n\n            if (transaction) {\n                //if existing transaction, we have to take its amount into account \n                //when calculating the balance \n                const combinedAmount = (amount + transaction.outputs[0].amount);\n                if (combinedAmount > this.balance) {\n                    logger.warn(`combined amount: ${combinedAmount} exceeds the current balance: ${this.balance}`);\n                    return;\n                }\n                \n                transaction.update(this, recipient, amount);\n            }\n            else {\n                transaction = Transaction.newTransaction(this, recipient, amount);\n                transactionPool.updateOrAddTransaction(transaction);\n            }\n\n            return transaction;\n        });\n    }\n\n    /**\n     * recalculates the wallet's balance according to the transactions in the given blockchain\n     * @returns {float} the calculated balance\n     * @param {Blockchain} blockchain\n     */\n    /*float*/ calculateBalance(blockchain) {\n        return exception.try(() => {\n\n            //existing balance\n            let balance = INITIAL_BALANCE;\n\n            // store all the transactions in blockchain, in temp array\n            let transactions = [];\n            blockchain.chain.forEach(block => block.data.forEach(transaction => {\n                transactions.push(transaction);\n            }));\n\n            //get all transactions sent from this wallet\n            const inputTransactions = transactions.filter(\n                t => t.input.address === this.publicKey\n            );\n\n            let lastTransTime = 0;\n\n            if (inputTransactions.length > 0) {\n\n                //get latest transaction\n                const recentInputTrans = inputTransactions.reduce(\n                    (prev,current)=> prev.input.timestamp > current.input.timestamp ? prev : current\n                );\n\n                //balance is output back to sender\n                balance = recentInputTrans.outputs.find(output => output.address === this.publicKey).amount;\n\n                // save the timestamp of the latest transaction made by the wallet\n                lastTransTime = recentInputTrans.input.timestamp;\n            }\n\n            // get the transactions that were addressed to this wallet ie somebody sent some moeny\n            // and add its ouputs.\n            // since we save the timestamp we would only add the outputs of the transactions received\n            // only after the latest transactions made by us\n            transactions.forEach(transaction => {\n                if (transaction.input.timestamp > lastTransTime) {\n                    transaction.outputs.find(output => {\n                        if (output.address === this.publicKey) {\n                            balance += output.amount;\n                        }\n                    })\n                }\n            });\n\n            return balance;\n        });\n    }\n\n    /**\n     * recalculates the wallet's balance according to the transactions in the given blockchain\n     * and replaces the current balance with the calculated balance\n     * @param {Blockchain} blockchain\n     */\n    updateBalance(blockchain) {\n        exception.try(() => {\n            const newBalance = this.calculateBalance(blockchain);\n            if (newBalance !== this._balance) {\n                this._balance = this.calculateBalance(blockchain);\n                this._emitter.emit('update');\n            }\n        });\n    }\n\n    /**\n     * subscribe to an event\n     * @param {string} eventName\n     * @param {fn} callback\n     */\n    on(eventName, callback) {\n        if (eventName && callback) {\n            this._emitter.on(eventName, callback);\n        }\n    }\n\n    /**\n     * returns a string representation\n     */\n    /*string*/ toString() {\n        return `Wallet -\n        publicKey: ${this.publicKey.toString()},\n        balance  : ${this.balance}`;\n    }\n\n    /**\n     * returns a json representation\n     */\n    /*json*/ toJson() {\n        return {\n            publicKey: this.publicKey.toString(),\n            privateKey: this.keyPair.priv.toString(16,2),\n            balance: this.balance\n        };\n    }\n\n    /**\n     * returns a json representation converted to string\n     */\n    /*string*/ toJsonString() {\n        return JSON.stringify(this.toJson());\n    }\n\n    /**\n     * creates a new wallet to be used as the sender when awarding the mining reward\n     * @returns {Wallet}\n     */\n    static /*Wallet*/ blockchainWallet() {\n        return exception.try(() => {\n            const blockchainWallet = new this();\n            blockchainWallet.address = 'blockchain-wallet';\n            return blockchainWallet;\n        });\n    }\n\n    /**\n     * deserializes a wallet instance from JSON data\n     * @returns {Wallet}\n     * @param {json} json\n     */\n    static /*Wallet*/ fromJson(json) {\n        return exception.try(() => {\n            const output = new this();\n\n            output._balance = json.balance;\n            output._keyPair = cryptoUtil.deserializeKeyPair(json.publicKey, json.privateKey);\n            output._publicKey = output.keyPair.getPublic().encode('hex');\n\n            return output;\n        });\n    }\n}\n\nmodule.exports = Wallet;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567745375588
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/index.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar Block = require('./classes/Block');\n\nvar Blockchain = require('./classes/Blockchain');\n\nmodule.exports = {\n  Block: Block,\n  Blockchain: Blockchain\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkJsb2NrIiwicmVxdWlyZSIsIkJsb2NrY2hhaW4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxpQkFBRCxDQUFyQjs7QUFDQSxJQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQyxzQkFBRCxDQUExQjs7QUFFQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JKLEVBQUFBLEtBQUssRUFBTEEsS0FEYTtBQUViRSxFQUFBQSxVQUFVLEVBQVZBO0FBRmEsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21pbmFjb2luL21pbmFjb2luLXNlcnZlci9zcmMvbGliL2Jsb2NrY2hhaW4iLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IEJsb2NrID0gcmVxdWlyZSgnLi9jbGFzc2VzL0Jsb2NrJyk7XG5jb25zdCBCbG9ja2NoYWluID0gcmVxdWlyZSgnLi9jbGFzc2VzL0Jsb2NrY2hhaW4nKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgQmxvY2ssXG4gICAgQmxvY2tjaGFpblxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Block",
        "require",
        "Blockchain",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,iBAAD,CAArB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,sBAAD,CAA1B;;AAEAE,MAAM,CAACC,OAAP,GAAiB;AACbJ,EAAAA,KAAK,EAALA,KADa;AAEbE,EAAAA,UAAU,EAAVA;AAFa,CAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain",
      "sourcesContent": [
        "'use strict';\n\nconst Block = require('./classes/Block');\nconst Blockchain = require('./classes/Blockchain');\n\nmodule.exports = {\n    Block,\n    Blockchain\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1567354951998
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Block.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Block.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Block.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Block.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes",
        "sourceFileName": "Block.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'BLK';\n\nvar cryptoUtil = require('../../../util/cryptoUtil');\n\nvar _require = require('../../../config.js'),\n    DIFFICULTY = _require.DIFFICULTY,\n    MINE_RATE = _require.MINE_RATE;\n\nvar ioc = require('../../../util/iocContainer');\n\nvar _require2 = require('../../wallet'),\n    Transaction = _require2.Transaction;\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: Block\n * ---------------\n * implementation of a Blockchain block. \n *\n * author: John R. Kosinski\n */\n\nvar Block =\n/*#__PURE__*/\nfunction () {\n  _createClass(Block, [{\n    key: \"timestamp\",\n    get: function get() {\n      return this._timestamp;\n    }\n  }, {\n    key: \"lastHash\",\n    get: function get() {\n      return this._lastHash;\n    }\n  }, {\n    key: \"hash\",\n    get: function get() {\n      return this._hash;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._data;\n    }\n  }, {\n    key: \"nonce\",\n    get: function get() {\n      return this._nonce;\n    }\n  }, {\n    key: \"difficulty\",\n    get: function get() {\n      return this._difficulty;\n    }\n  }]);\n\n  function Block(timestamp, lastHash, hash, data, nonce, difficulty) {\n    _classCallCheck(this, Block);\n\n    this._timestamp = timestamp;\n    this._lastHash = lastHash;\n    this._hash = hash;\n    this._data = data;\n    this._nonce = nonce;\n    this._difficulty = difficulty || DIFFICULTY;\n    logger.info('block created: ' + this.toJsonString());\n  }\n\n  _createClass(Block, [{\n    key: \"toString\",\n\n    /**\n     * returns a string representation\n     */\n    value: function toString() {\n      var _this = this;\n\n      return exception[\"try\"](function () {\n        return \"Block -\\n            Timestamp : \".concat(_this.timestamp, \"\\n            Last Hash : \").concat(_this.lastHash.substring(0, 10), \"\\n            Hash      : \").concat(_this.hash.substring(0, 10), \"\\n            Data      : \").concat(_this.data, \"\\n            Difficulty: \").concat(_this.difficulty);\n      });\n    }\n    /**\n     * returns a json representation\n     */\n\n    /*json*/\n\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      var output = {\n        timestamp: this.timestamp,\n        lastHash: this.lastHash,\n        hash: this.hash,\n        difficulty: this.difficulty,\n        nonce: this.nonce,\n        data: []\n      };\n\n      if (this.data && this.data.length) {\n        this.data.forEach(function (t) {\n          if (t.toJson) output.data.push(t.toJson());\n        });\n      }\n\n      return output;\n    }\n    /**\n     * returns a json representation converted to string\n     */\n\n    /*string*/\n\n  }, {\n    key: \"toJsonString\",\n    value: function toJsonString() {\n      return JSON.stringify(this.toJson());\n    }\n    /**\n     * deserializes a Block instance from JSON data\n     * @returns {Block}\n     * @param {json} json\n     */\n\n  }, {\n    key: \"data\",\n    set: function set(d) {\n      this._data = d;\n    }\n    /**\n     * creates the special genesis block\n     * @returns {Block}\n     */\n\n  }], [{\n    key: \"genesis\",\n    value: function genesis() {\n      var _this2 = this;\n\n      return exception[\"try\"](function () {\n        return new _this2('Genesis time', '----', 'f1574-h4gh', [], 0, DIFFICULTY);\n      });\n    }\n    /**\n     * creates & returns a hash of the given data\n     * \n     * @param {int} timestamp block timestamp\n     * @param {string} lastHash hash of intended parent block\n     * @param {Transaction[]} data the data to include in the block\n     * @param {int} nonce created during mining\n     * @param {int} difficulty block mining difficulty\n     * @returns {string}\n     */\n\n  }, {\n    key: \"hash\",\n    value: function hash(timestamp, lastHash, data, nonce, difficulty) {\n      return exception[\"try\"](function () {\n        return cryptoUtil.hash({\n          timestamp: timestamp,\n          lastHash: lastHash,\n          data: Transaction.arrayToJson(data),\n          nonce: nonce,\n          difficulty: difficulty\n        });\n      });\n    }\n    /**\n     * mines a new block to be added to the chain, and returns it (without adding it to\n     * the blockchain)\n     *\n     * @param {Block} lastBlock the parent block (should be most recent block in chain)\n     * @param {Transaction[]} data transactions to be included in the block\n     */\n\n  }, {\n    key: \"mineBlock\",\n    value: function mineBlock(lastBlock, data) {\n      var _this3 = this;\n\n      return exception[\"try\"](function () {\n        var hash;\n        var timestamp = Date.now();\n        var lastHash = lastBlock.hash;\n        var difficulty = lastBlock.difficulty;\n        var nonce = 0;\n\n        do {\n          nonce++;\n          timestamp = Date.now();\n          difficulty = Block.adjustDifficulty(lastBlock, timestamp);\n          hash = Block.hash(timestamp, lastHash, data, nonce, difficulty);\n        } while (hash.substring(0, difficulty) !== '0'.repeat(difficulty));\n\n        logger.info(\"block \".concat(hash, \" mined\"));\n        return new _this3(timestamp, lastHash, hash, data, nonce, difficulty);\n      });\n    }\n    /**\n     * creates & returns a hash of the given block's essential data\n     * @returns string\n     * @param {Block} block\n     */\n\n  }, {\n    key: \"blockHash\",\n    value: function blockHash(block) {\n      return exception[\"try\"](function () {\n        //destructuring\n        var timestamp = block.timestamp,\n            lastHash = block.lastHash,\n            data = block.data,\n            nonce = block.nonce,\n            difficulty = block.difficulty;\n        return Block.hash(timestamp, lastHash, data, nonce, difficulty);\n      });\n    }\n  }, {\n    key: \"adjustDifficulty\",\n    value: function adjustDifficulty(lastBlock, currentTime) {\n      return exception[\"try\"](function () {\n        var difficulty = lastBlock.difficulty;\n        difficulty = lastBlock.timestamp + MINE_RATE > currentTime ? difficulty + 1 : difficulty - 1;\n        return difficulty;\n      });\n    }\n  }, {\n    key: \"fromJson\",\n    value: function fromJson(json) {\n      var _this4 = this;\n\n      return exception[\"try\"](function () {\n        var output = new _this4(json.timestamp, json.lastHash, json.hash, [], json.nonce, json.difficulty);\n\n        if (json.data) {\n          json.data.forEach(function (t) {\n            output.data.push(Transaction.fromJson(t));\n          });\n        }\n\n        return output;\n      });\n    }\n  }]);\n\n  return Block;\n}();\n\nmodule.exports = Block;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Block.js"
      ],
      "names": [
        "LOG_TAG",
        "cryptoUtil",
        "require",
        "DIFFICULTY",
        "MINE_RATE",
        "ioc",
        "Transaction",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Block",
        "_timestamp",
        "_lastHash",
        "_hash",
        "_data",
        "_nonce",
        "_difficulty",
        "timestamp",
        "lastHash",
        "hash",
        "data",
        "nonce",
        "difficulty",
        "info",
        "toJsonString",
        "substring",
        "output",
        "length",
        "forEach",
        "t",
        "toJson",
        "push",
        "JSON",
        "stringify",
        "d",
        "arrayToJson",
        "lastBlock",
        "Date",
        "now",
        "adjustDifficulty",
        "repeat",
        "block",
        "currentTime",
        "json",
        "fromJson",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAG,KAAhB;;AAEA,IAAMC,UAAU,GAAGC,OAAO,CAAC,0BAAD,CAA1B;;eACiCA,OAAO,CAAC,oBAAD,C;IAAhCC,U,YAAAA,U;IAAWC,S,YAAAA,S;;AACnB,IAAMC,GAAG,GAAGH,OAAO,CAAC,4BAAD,CAAnB;;gBACwBA,OAAO,CAAC,cAAD,C;IAAvBI,W,aAAAA,W;;AAER,IAAMC,MAAM,GAAGF,GAAG,CAACG,aAAJ,CAAkBC,YAAlB,CAA+BT,OAA/B,CAAf;AACA,IAAMU,SAAS,GAAGL,GAAG,CAACM,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;IAOMM,K;;;;;wBACc;AAAE,aAAO,KAAKC,UAAZ;AAAyB;;;wBAC5B;AAAE,aAAO,KAAKC,SAAZ;AAAwB;;;wBAC9B;AAAE,aAAO,KAAKC,KAAZ;AAAoB;;;wBACtB;AAAE,aAAO,KAAKC,KAAZ;AAAoB;;;wBACrB;AAAE,aAAO,KAAKC,MAAZ;AAAqB;;;wBAClB;AAAE,aAAO,KAAKC,WAAZ;AAA0B;;;AAE7C,iBAAYC,SAAZ,EAAuBC,QAAvB,EAAiCC,IAAjC,EAAuCC,IAAvC,EAA6CC,KAA7C,EAAoDC,UAApD,EAA+D;AAAA;;AAC3D,SAAKX,UAAL,GAAkBM,SAAlB;AACA,SAAKL,SAAL,GAAiBM,QAAjB;AACA,SAAKL,KAAL,GAAaM,IAAb;AACA,SAAKL,KAAL,GAAaM,IAAb;AACA,SAAKL,MAAL,GAAcM,KAAd;AACA,SAAKL,WAAL,GAAmBM,UAAU,IAAItB,UAAjC;AAEAI,IAAAA,MAAM,CAACmB,IAAP,CAAY,oBAAoB,KAAKC,YAAL,EAAhC;AACH;;;;;AAoFD;;;+BAGW;AAAA;;AACP,aAAOjB,SAAS,OAAT,CAAc,YAAM;AACvB,0DACc,KAAI,CAACU,SADnB,uCAEc,KAAI,CAACC,QAAL,CAAcO,SAAd,CAAwB,CAAxB,EAA0B,EAA1B,CAFd,uCAGc,KAAI,CAACN,IAAL,CAAUM,SAAV,CAAoB,CAApB,EAAsB,EAAtB,CAHd,uCAIc,KAAI,CAACL,IAJnB,uCAKc,KAAI,CAACE,UALnB;AAMH,OAPM,CAAP;AAQH;AAED;;;;AAGA;;;;6BAAkB;AACd,UAAMI,MAAM,GAAG;AACXT,QAAAA,SAAS,EAAE,KAAKA,SADL;AAEXC,QAAAA,QAAQ,EAAE,KAAKA,QAFJ;AAGXC,QAAAA,IAAI,EAAE,KAAKA,IAHA;AAIXG,QAAAA,UAAU,EAAE,KAAKA,UAJN;AAKXD,QAAAA,KAAK,EAAE,KAAKA,KALD;AAMXD,QAAAA,IAAI,EAAE;AANK,OAAf;;AAWA,UAAI,KAAKA,IAAL,IAAa,KAAKA,IAAL,CAAUO,MAA3B,EAAmC;AAC/B,aAAKP,IAAL,CAAUQ,OAAV,CAAkB,UAAAC,CAAC,EAAI;AACnB,cAAIA,CAAC,CAACC,MAAN,EACIJ,MAAM,CAACN,IAAP,CAAYW,IAAZ,CAAiBF,CAAC,CAACC,MAAF,EAAjB;AACP,SAHD;AAIH;;AAED,aAAOJ,MAAP;AACH;AAED;;;;AAGA;;;;mCAA0B;AACtB,aAAOM,IAAI,CAACC,SAAL,CAAe,KAAKH,MAAL,EAAf,CAAP;AACH;AAED;;;;;;;;sBAhISI,C,EAAG;AAAE,WAAKpB,KAAL,GAAaoB,CAAb;AAAiB;AAE/B;;;;;;;8BAI2B;AAAA;;AACvB,aAAO3B,SAAS,OAAT,CAAc,YAAM;AACvB,eAAO,IAAI,MAAJ,CAAS,cAAT,EAAwB,MAAxB,EAA+B,YAA/B,EAA4C,EAA5C,EAA+C,CAA/C,EAAiDP,UAAjD,CAAP;AACH,OAFM,CAAP;AAGH;AAED;;;;;;;;;;;;;yBAUuBiB,S,EAAWC,Q,EAAUE,I,EAAMC,K,EAAOC,U,EAAW;AAChE,aAAOf,SAAS,OAAT,CAAc,YAAM;AACvB,eAAOT,UAAU,CAACqB,IAAX,CAAgB;AACnBF,UAAAA,SAAS,EAATA,SADmB;AAEnBC,UAAAA,QAAQ,EAARA,QAFmB;AAGnBE,UAAAA,IAAI,EAAEjB,WAAW,CAACgC,WAAZ,CAAwBf,IAAxB,CAHa;AAInBC,UAAAA,KAAK,EAALA,KAJmB;AAKnBC,UAAAA,UAAU,EAAVA;AALmB,SAAhB,CAAP;AAOH,OARM,CAAP;AASH;AAED;;;;;;;;;;8BAO2Bc,S,EAAWhB,I,EAAK;AAAA;;AACvC,aAAOb,SAAS,OAAT,CAAc,YAAM;AACvB,YAAIY,IAAJ;AACA,YAAIF,SAAS,GAAGoB,IAAI,CAACC,GAAL,EAAhB;AACA,YAAMpB,QAAQ,GAAGkB,SAAS,CAACjB,IAA3B;AAHuB,YAIjBG,UAJiB,GAIFc,SAJE,CAIjBd,UAJiB;AAKvB,YAAID,KAAK,GAAG,CAAZ;;AAEA,WAAG;AACCA,UAAAA,KAAK;AACLJ,UAAAA,SAAS,GAAGoB,IAAI,CAACC,GAAL,EAAZ;AACAhB,UAAAA,UAAU,GAAGZ,KAAK,CAAC6B,gBAAN,CAAuBH,SAAvB,EAAkCnB,SAAlC,CAAb;AACAE,UAAAA,IAAI,GAAGT,KAAK,CAACS,IAAN,CAAWF,SAAX,EAAsBC,QAAtB,EAAgCE,IAAhC,EAAsCC,KAAtC,EAA6CC,UAA7C,CAAP;AACH,SALD,QAKQH,IAAI,CAACM,SAAL,CAAe,CAAf,EAAiBH,UAAjB,MAAiC,IAAIkB,MAAJ,CAAWlB,UAAX,CALzC;;AAOAlB,QAAAA,MAAM,CAACmB,IAAP,iBAAqBJ,IAArB;AACA,eAAO,IAAI,MAAJ,CAASF,SAAT,EAAoBC,QAApB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,KAA1C,EAAiDC,UAAjD,CAAP;AACH,OAhBM,CAAP;AAiBH;AAED;;;;;;;;8BAK4BmB,K,EAAM;AAC9B,aAAOlC,SAAS,OAAT,CAAc,YAAM;AACvB;AADuB,YAEfU,SAFe,GAEkCwB,KAFlC,CAEfxB,SAFe;AAAA,YAEJC,QAFI,GAEkCuB,KAFlC,CAEJvB,QAFI;AAAA,YAEME,IAFN,GAEkCqB,KAFlC,CAEMrB,IAFN;AAAA,YAEYC,KAFZ,GAEkCoB,KAFlC,CAEYpB,KAFZ;AAAA,YAEmBC,UAFnB,GAEkCmB,KAFlC,CAEmBnB,UAFnB;AAGvB,eAAOZ,KAAK,CAACS,IAAN,CAAWF,SAAX,EAAsBC,QAAtB,EAAgCE,IAAhC,EAAsCC,KAAtC,EAA6CC,UAA7C,CAAP;AACH,OAJM,CAAP;AAKH;;;qCAE+Bc,S,EAAWM,W,EAAY;AACnD,aAAOnC,SAAS,OAAT,CAAc,YAAM;AAAA,YACjBe,UADiB,GACFc,SADE,CACjBd,UADiB;AAEvBA,QAAAA,UAAU,GAAGc,SAAS,CAACnB,SAAV,GAAsBhB,SAAtB,GAAkCyC,WAAlC,GAAgDpB,UAAU,GAAG,CAA7D,GAAiEA,UAAU,GAAG,CAA3F;AACA,eAAOA,UAAP;AACH,OAJM,CAAP;AAKH;;;6BAqDyBqB,I,EAAM;AAAA;;AAC5B,aAAOpC,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMmB,MAAM,GAAG,IAAI,MAAJ,CAASiB,IAAI,CAAC1B,SAAd,EAAyB0B,IAAI,CAACzB,QAA9B,EAAwCyB,IAAI,CAACxB,IAA7C,EAAmD,EAAnD,EAAuDwB,IAAI,CAACtB,KAA5D,EAAmEsB,IAAI,CAACrB,UAAxE,CAAf;;AAEA,YAAIqB,IAAI,CAACvB,IAAT,EAAe;AACXuB,UAAAA,IAAI,CAACvB,IAAL,CAAUQ,OAAV,CAAkB,UAAAC,CAAC,EAAI;AACnBH,YAAAA,MAAM,CAACN,IAAP,CAAYW,IAAZ,CAAiB5B,WAAW,CAACyC,QAAZ,CAAqBf,CAArB,CAAjB;AACH,WAFD;AAGH;;AAED,eAAOH,MAAP;AACH,OAVM,CAAP;AAWH;;;;;;AAILmB,MAAM,CAACC,OAAP,GAAiBpC,KAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'BLK';\n\nconst cryptoUtil = require('../../../util/cryptoUtil');\nconst { DIFFICULTY,MINE_RATE } = require('../../../config.js');\nconst ioc = require('../../../util/iocContainer');\nconst { Transaction } = require('../../wallet');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: Block\n * ---------------\n * implementation of a Blockchain block. \n *\n * author: John R. Kosinski\n */\nclass Block{\n    get timestamp() { return this._timestamp; }\n    get lastHash() { return this._lastHash; }\n    get hash() { return this._hash; }\n    get data() { return this._data; }\n    get nonce() { return this._nonce; }\n    get difficulty() { return this._difficulty; }\n\n    constructor(timestamp, lastHash, hash, data, nonce, difficulty){\n        this._timestamp = timestamp;\n        this._lastHash = lastHash;\n        this._hash = hash;\n        this._data = data;\n        this._nonce = nonce;\n        this._difficulty = difficulty || DIFFICULTY;\n\n        logger.info('block created: ' + this.toJsonString());\n    }\n\n    set data(d) { this._data = d; }\n\n    /**\n     * creates the special genesis block\n     * @returns {Block}\n     */\n    static /*Block*/ genesis() {\n        return exception.try(() => {\n            return new this('Genesis time','----','f1574-h4gh',[],0,DIFFICULTY);\n        });\n    }\n\n    /**\n     * creates & returns a hash of the given data\n     * \n     * @param {int} timestamp block timestamp\n     * @param {string} lastHash hash of intended parent block\n     * @param {Transaction[]} data the data to include in the block\n     * @param {int} nonce created during mining\n     * @param {int} difficulty block mining difficulty\n     * @returns {string}\n     */\n    static /*string*/ hash(timestamp, lastHash, data, nonce, difficulty){\n        return exception.try(() => {\n            return cryptoUtil.hash({\n                timestamp, \n                lastHash, \n                data: Transaction.arrayToJson(data), \n                nonce, \n                difficulty\n            });\n        });\n    }\n\n    /**\n     * mines a new block to be added to the chain, and returns it (without adding it to\n     * the blockchain)\n     *\n     * @param {Block} lastBlock the parent block (should be most recent block in chain)\n     * @param {Transaction[]} data transactions to be included in the block\n     */\n    static /*Block*/ mineBlock(lastBlock, data){\n        return exception.try(() => {\n            let hash;\n            let timestamp = Date.now();\n            const lastHash = lastBlock.hash;\n            let { difficulty } = lastBlock;\n            let nonce = 0;  \n\n            do {\n                nonce++;\n                timestamp = Date.now();\n                difficulty = Block.adjustDifficulty(lastBlock, timestamp);\n                hash = Block.hash(timestamp, lastHash, data, nonce, difficulty);\n            } while(hash.substring(0,difficulty) !== '0'.repeat(difficulty));\n\n            logger.info(`block ${hash} mined`);\n            return new this(timestamp, lastHash, hash, data, nonce, difficulty);\n        });\n    }\n\n    /**\n     * creates & returns a hash of the given block's essential data\n     * @returns string\n     * @param {Block} block\n     */\n    static /*string*/ blockHash(block){\n        return exception.try(() => {\n            //destructuring\n            const { timestamp, lastHash, data, nonce, difficulty } = block;\n            return Block.hash(timestamp, lastHash, data, nonce, difficulty);\n        });\n    }\n\n    static /*int*/ adjustDifficulty(lastBlock, currentTime){\n        return exception.try(() => {\n            let { difficulty } = lastBlock;\n            difficulty = lastBlock.timestamp + MINE_RATE > currentTime ? difficulty + 1 : difficulty - 1;\n            return difficulty;\n        });\n    }\n\n    /**\n     * returns a string representation\n     */\n    toString() {\n        return exception.try(() => {\n            return `Block -\n            Timestamp : ${this.timestamp}\n            Last Hash : ${this.lastHash.substring(0,10)}\n            Hash      : ${this.hash.substring(0,10)}\n            Data      : ${this.data}\n            Difficulty: ${this.difficulty}`;\n        });\n    }\n\n    /**\n     * returns a json representation\n     */\n    /*json*/ toJson() {\n        const output = {\n            timestamp: this.timestamp,\n            lastHash: this.lastHash,\n            hash: this.hash,\n            difficulty: this.difficulty,\n            nonce: this.nonce,\n            data: [\n\n            ]\n        };\n\n        if (this.data && this.data.length) {\n            this.data.forEach(t => {\n                if (t.toJson) \n                    output.data.push(t.toJson());\n            });\n        }\n\n        return output;\n    }\n\n    /**\n     * returns a json representation converted to string\n     */\n    /*string*/ toJsonString() {\n        return JSON.stringify(this.toJson());\n    }\n\n    /**\n     * deserializes a Block instance from JSON data\n     * @returns {Block}\n     * @param {json} json\n     */\n    static /*Block*/ fromJson(json) {\n        return exception.try(() => {\n            const output = new this(json.timestamp, json.lastHash, json.hash, [], json.nonce, json.difficulty);\n\n            if (json.data) {\n                json.data.forEach(t => {\n                    output.data.push(Transaction.fromJson(t));\n                });\n            }\n\n            return output;\n        });\n    }\n}\n\n\nmodule.exports = Block;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567748078467
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Blockchain.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Blockchain.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Blockchain.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Blockchain.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes",
        "sourceFileName": "Blockchain.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'BLKCH';\n\nvar Block = require('./Block');\n\nvar ioc = require('../../../util/iocContainer');\n\nvar EventEmitter = require('events');\n\nvar R = require('ramda');\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: Blockchain\n * --------------------\n * container for all blocks. supports these events: \n * - update\n * - replace \n *\n * author: John R. Kosinski\n */\n\nvar Blockchain =\n/*#__PURE__*/\nfunction () {\n  _createClass(Blockchain, [{\n    key: \"chain\",\n    get: function get() {\n      return this._chain;\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this._chain.length;\n    }\n    /**\n     * constructor \n     */\n\n  }]);\n\n  function Blockchain() {\n    _classCallCheck(this, Blockchain);\n\n    this._emitter = new EventEmitter();\n    this._chain = [Block.genesis()];\n    this._emitter = new EventEmitter();\n  }\n  /**\n   * returns a list of all transactions, in all blocks, sorted first by block number \n   * and then by timestamp. \n   */\n\n  /*Transaction*/\n\n\n  _createClass(Blockchain, [{\n    key: \"allTransactions\",\n    value: function allTransactions() {\n      return extractTransactionsFromBlocks(this.chain);\n    }\n    /**\n     * searches the blockchain to see if a transaction with the same id exists.\n     * @param {string} id id of the transaction in question\n     * @returns {bool} true if a transaction with the same id exists\n     */\n\n    /*bool*/\n\n  }, {\n    key: \"containsTransaction\",\n    value: function containsTransaction(id) {\n      return this.findTransaction(id);\n    }\n    /**\n     * the opposite of containsTransaction(id). this one will return the block index \n     * (1-based) of the block that contains the specified transaction.  \n     * @param {string} id \n     * @returns {int} the 1-based block index of the found transaction \n     * (return value of 0 indicates transaction is not found)\n     */\n\n    /*int*/\n\n  }, {\n    key: \"findTransaction\",\n    value: function findTransaction(id) {\n      var _this = this;\n\n      return exception[\"try\"](function () {\n        var allTransactions = _this.allTransactions().reverse();\n\n        for (var n = 0; n < allTransactions.length; n++) {\n          var t = allTransactions[n];\n\n          if (id === t.id) {\n            return n + 1;\n          }\n        }\n\n        return 0;\n      });\n    }\n    /**\n     * mines a new block, includes the given transactions, and appends it to the chain. \n     * @param {Transaction[]} data transactions to add to the new block\n     * @returns {Block}\n     */\n\n    /*Block*/\n\n  }, {\n    key: \"addBlock\",\n    value: function addBlock(data) {\n      var _this2 = this;\n\n      return exception[\"try\"](function () {\n        var block = Block.mineBlock(_this2.chain[_this2.chain.length - 1], data); //check here to make sure that duplicate transactions don't exist\n\n        if (data) {\n          for (var t in data) {\n            if (_this2.containsTransaction(t.id)) {\n              //reject block\n              logger.warn(\"block is being rejected, because transaction \".concat(t.id, \" is a duplicate\"));\n              return null;\n            }\n          }\n\n          ;\n        }\n\n        _this2.chain.push(block);\n\n        logger.info(\"block \".concat(block.hash, \" added to chain. new chain height: \").concat(_this2.height));\n\n        _this2._emitter.emit('update');\n\n        return block;\n      });\n    }\n    /**\n     * validates each block in the chain. \n     * @param {Blockchain} chain \n     * @returns {bool} false if chain is invalid \n     */\n\n    /*bool*/\n\n  }, {\n    key: \"isValidChain\",\n    value: function isValidChain(chain) {\n      return exception[\"try\"](function () {\n        if (JSON.stringify(chain[0]) !== JSON.stringify(Block.genesis())) {\n          logger.warn('invalid chain: invalid genesis block');\n          return false;\n        } //if the last block has a transaction that exists elsewhere in the chain, then \n        // the chain is invalid \n\n\n        if (chain.length > 1) {\n          //get all transactions from ALL BUT LAST block\n          var allTrans = extractTransactionsFromBlocks(R.init(chain)); //examine all transactions in last block for duplicity\n\n          var lastBlock = chain[chain.length - 1];\n\n          for (var i = 0; i < lastBlock.data.length; i++) {\n            var t = lastBlock.data[i];\n\n            if (R.find(R.propEq('id', t.id))(allTrans)) {\n              logger.warn(\"invalid chain: transaction \".concat(t.id, \" is duplicated\"));\n              return false;\n            }\n          }\n        } //if the chain has any invalid blocks, then the chain is invalid\n        //TODO: redo with ramda\n\n\n        for (var _i = 1; _i < chain.length; _i++) {\n          var block = chain[_i];\n          var _lastBlock = chain[_i - 1];\n\n          if (block.lastHash !== _lastBlock.hash || block.hash !== Block.blockHash(block)) {\n            logger.warn(\"invalid chain: invalid block \".concat(block.hash));\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n    /**\n     * replace the entire existing chain with the given one \n     * @param {BlockChain} newChain \n     */\n\n  }, {\n    key: \"replaceChain\",\n    value: function replaceChain(newChain) {\n      var _this3 = this;\n\n      exception[\"try\"](function () {\n        if (newChain.length <= _this3._chain.length) {\n          logger.info(\"received chain is not longer than the current chain\");\n          return;\n        } else if (!_this3.isValidChain(newChain)) {\n          logger.info(\"received chain is invalid\");\n          return;\n        }\n\n        logger.info(\"replacing the current chain with new chain\");\n        _this3._chain = newChain;\n\n        _this3._emitter.emit('update');\n      });\n    }\n    /**\n     * subscribe to an event \n     * @param {string} eventName \n     * @param {fn} callback \n     */\n\n  }, {\n    key: \"on\",\n    value: function on(eventName, callback) {\n      if (eventName && callback) {\n        this._emitter.on(eventName, callback);\n      }\n    }\n    /**\n     * returns a json representation\n     */\n\n    /*json*/\n\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      var output = {\n        chain: []\n      };\n\n      this._chain.forEach(function (b) {\n        output.chain.push(b.toJson());\n      });\n\n      return output;\n    }\n    /**\n     * deserializes a Blockchain instance from JSON data\n     * @returns {Blockchain}\n     * @param {json} json\n     */\n\n  }], [{\n    key: \"fromJson\",\n    value: function fromJson(json) {\n      var _this4 = this;\n\n      return exception[\"try\"](function () {\n        var output = new _this4();\n        output._chain = [];\n\n        if (json && json.chain && json.chain.length) {\n          json.chain.forEach(function (b) {\n            output._chain.push(Block.fromJson(b));\n          });\n        }\n\n        return output;\n      });\n    }\n  }]);\n\n  return Blockchain;\n}();\n\nfunction extractTransactionsFromBlocks(blocks) {\n  return exception[\"try\"](function () {\n    var output = [];\n    blocks.forEach(function (block) {\n      output.push.apply(output, _toConsumableArray(block.data.sort(function (a, b) {\n        return a.input.timestamp < b.input.timestamp;\n      })));\n    });\n    return output;\n  });\n}\n\nmodule.exports = Blockchain;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Blockchain.js"
      ],
      "names": [
        "LOG_TAG",
        "Block",
        "require",
        "ioc",
        "EventEmitter",
        "R",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Blockchain",
        "_chain",
        "length",
        "_emitter",
        "genesis",
        "extractTransactionsFromBlocks",
        "chain",
        "id",
        "findTransaction",
        "allTransactions",
        "reverse",
        "n",
        "t",
        "data",
        "block",
        "mineBlock",
        "containsTransaction",
        "warn",
        "push",
        "info",
        "hash",
        "height",
        "emit",
        "JSON",
        "stringify",
        "allTrans",
        "init",
        "lastBlock",
        "i",
        "find",
        "propEq",
        "lastHash",
        "blockHash",
        "newChain",
        "isValidChain",
        "eventName",
        "callback",
        "on",
        "output",
        "forEach",
        "b",
        "toJson",
        "json",
        "fromJson",
        "blocks",
        "sort",
        "a",
        "input",
        "timestamp",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,OAAhB;;AAEA,IAAMC,KAAK,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,4BAAD,CAAnB;;AACA,IAAME,YAAY,GAAGF,OAAO,CAAC,QAAD,CAA5B;;AACA,IAAMG,CAAC,GAAGH,OAAO,CAAC,OAAD,CAAjB;;AAEA,IAAMI,MAAM,GAAGH,GAAG,CAACI,aAAJ,CAAkBC,YAAlB,CAA+BR,OAA/B,CAAf;AACA,IAAMS,SAAS,GAAGN,GAAG,CAACO,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;;;IASMM,U;;;;;wBACU;AAAE,aAAO,KAAKC,MAAZ;AAAqB;;;wBACtB;AAAE,aAAO,KAAKA,MAAL,CAAYC,MAAnB;AAA4B;AAE3C;;;;;;AAGA,wBAAa;AAAA;;AACT,SAAKC,QAAL,GAAgB,IAAIX,YAAJ,EAAhB;AACA,SAAKS,MAAL,GAAc,CAACZ,KAAK,CAACe,OAAN,EAAD,CAAd;AACA,SAAKD,QAAL,GAAgB,IAAIX,YAAJ,EAAhB;AACH;AAED;;;;;AAIA;;;;;sCAAkC;AAC9B,aAAOa,6BAA6B,CAAC,KAAKC,KAAN,CAApC;AACH;AAED;;;;;;AAKA;;;;wCAA6BC,E,EAAI;AAC7B,aAAO,KAAKC,eAAL,CAAqBD,EAArB,CAAP;AACH;AAED;;;;;;;;AAOA;;;;oCAAwBA,E,EAAI;AAAA;;AACxB,aAAOV,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMY,eAAe,GAAG,KAAI,CAACA,eAAL,GAAuBC,OAAvB,EAAxB;;AACA,aAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACF,eAAe,CAACP,MAAhC,EAAwCS,CAAC,EAAzC,EAA6C;AACzC,cAAMC,CAAC,GAAGH,eAAe,CAACE,CAAD,CAAzB;;AACA,cAAIJ,EAAE,KAAKK,CAAC,CAACL,EAAb,EAAiB;AACb,mBAAQI,CAAC,GAAC,CAAV;AACH;AACJ;;AAED,eAAO,CAAP;AACH,OAVM,CAAP;AAWH;AAED;;;;;;AAKA;;;;6BAAmBE,I,EAAK;AAAA;;AACpB,aAAOhB,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMiB,KAAK,GAAGzB,KAAK,CAAC0B,SAAN,CAAgB,MAAI,CAACT,KAAL,CAAW,MAAI,CAACA,KAAL,CAAWJ,MAAX,GAAkB,CAA7B,CAAhB,EAAiDW,IAAjD,CAAd,CADuB,CAGvB;;AACA,YAAIA,IAAJ,EAAU;AACN,eAAK,IAAID,CAAT,IAAcC,IAAd,EAAoB;AAChB,gBAAI,MAAI,CAACG,mBAAL,CAAyBJ,CAAC,CAACL,EAA3B,CAAJ,EAAoC;AAChC;AACAb,cAAAA,MAAM,CAACuB,IAAP,wDAA4DL,CAAC,CAACL,EAA9D;AACA,qBAAO,IAAP;AACH;AACJ;;AAAA;AACJ;;AAED,QAAA,MAAI,CAACD,KAAL,CAAWY,IAAX,CAAgBJ,KAAhB;;AACApB,QAAAA,MAAM,CAACyB,IAAP,iBAAqBL,KAAK,CAACM,IAA3B,gDAAqE,MAAI,CAACC,MAA1E;;AAEA,QAAA,MAAI,CAAClB,QAAL,CAAcmB,IAAd,CAAmB,QAAnB;;AACA,eAAOR,KAAP;AACH,OAnBM,CAAP;AAoBH;AAED;;;;;;AAKA;;;;iCAAsBR,K,EAAO;AACzB,aAAOT,SAAS,OAAT,CAAc,YAAM;AACvB,YAAI0B,IAAI,CAACC,SAAL,CAAelB,KAAK,CAAC,CAAD,CAApB,MAA6BiB,IAAI,CAACC,SAAL,CAAenC,KAAK,CAACe,OAAN,EAAf,CAAjC,EAAkE;AAC9DV,UAAAA,MAAM,CAACuB,IAAP,CAAY,sCAAZ;AACA,iBAAO,KAAP;AACH,SAJsB,CAMvB;AACA;;;AACA,YAAIX,KAAK,CAACJ,MAAN,GAAe,CAAnB,EAAsB;AAClB;AACA,cAAMuB,QAAQ,GAAGpB,6BAA6B,CAACZ,CAAC,CAACiC,IAAF,CAAOpB,KAAP,CAAD,CAA9C,CAFkB,CAIlB;;AACA,cAAMqB,SAAS,GAAGrB,KAAK,CAACA,KAAK,CAACJ,MAAN,GAAa,CAAd,CAAvB;;AACA,eAAI,IAAI0B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACD,SAAS,CAACd,IAAV,CAAeX,MAA9B,EAAsC0B,CAAC,EAAvC,EAA2C;AACvC,gBAAMhB,CAAC,GAAGe,SAAS,CAACd,IAAV,CAAee,CAAf,CAAV;;AACA,gBAAInC,CAAC,CAACoC,IAAF,CAAOpC,CAAC,CAACqC,MAAF,CAAS,IAAT,EAAelB,CAAC,CAACL,EAAjB,CAAP,EAA6BkB,QAA7B,CAAJ,EAA4C;AACxC/B,cAAAA,MAAM,CAACuB,IAAP,sCAA0CL,CAAC,CAACL,EAA5C;AACA,qBAAO,KAAP;AACH;AACJ;AACJ,SArBsB,CAuBvB;AACA;;;AACA,aAAK,IAAIqB,EAAC,GAAC,CAAX,EAAcA,EAAC,GAACtB,KAAK,CAACJ,MAAtB,EAA8B0B,EAAC,EAA/B,EAAmC;AAC/B,cAAMd,KAAK,GAAGR,KAAK,CAACsB,EAAD,CAAnB;AACA,cAAMD,UAAS,GAAGrB,KAAK,CAACsB,EAAC,GAAC,CAAH,CAAvB;;AAEA,cAAKd,KAAK,CAACiB,QAAN,KAAmBJ,UAAS,CAACP,IAA9B,IAAwCN,KAAK,CAACM,IAAN,KAAe/B,KAAK,CAAC2C,SAAN,CAAgBlB,KAAhB,CAA3D,EAAoF;AAChFpB,YAAAA,MAAM,CAACuB,IAAP,wCAA4CH,KAAK,CAACM,IAAlD;AACA,mBAAO,KAAP;AACH;AACJ;;AAED,eAAO,IAAP;AACH,OApCM,CAAP;AAqCH;AAED;;;;;;;iCAIaa,Q,EAAS;AAAA;;AAClBpC,MAAAA,SAAS,OAAT,CAAc,YAAM;AAChB,YAAIoC,QAAQ,CAAC/B,MAAT,IAAmB,MAAI,CAACD,MAAL,CAAYC,MAAnC,EAA0C;AACtCR,UAAAA,MAAM,CAACyB,IAAP,CAAY,qDAAZ;AACA;AACH,SAHD,MAIK,IAAI,CAAC,MAAI,CAACe,YAAL,CAAkBD,QAAlB,CAAL,EAAiC;AAClCvC,UAAAA,MAAM,CAACyB,IAAP,CAAY,2BAAZ;AACA;AACH;;AAEDzB,QAAAA,MAAM,CAACyB,IAAP,CAAY,4CAAZ;AACA,QAAA,MAAI,CAAClB,MAAL,GAAcgC,QAAd;;AAEA,QAAA,MAAI,CAAC9B,QAAL,CAAcmB,IAAd,CAAmB,QAAnB;AACH,OAdD;AAeH;AAED;;;;;;;;uBAKGa,S,EAAWC,Q,EAAU;AACpB,UAAID,SAAS,IAAIC,QAAjB,EAA2B;AACvB,aAAKjC,QAAL,CAAckC,EAAd,CAAiBF,SAAjB,EAA4BC,QAA5B;AACH;AACJ;AAED;;;;AAGA;;;;6BAAkB;AACd,UAAME,MAAM,GAAG;AACXhC,QAAAA,KAAK,EAAE;AADI,OAAf;;AAIA,WAAKL,MAAL,CAAYsC,OAAZ,CAAoB,UAAAC,CAAC,EAAI;AACrBF,QAAAA,MAAM,CAAChC,KAAP,CAAaY,IAAb,CAAkBsB,CAAC,CAACC,MAAF,EAAlB;AACH,OAFD;;AAIA,aAAOH,MAAP;AACH;AAED;;;;;;;;6BAK+BI,I,EAAM;AAAA;;AACjC,aAAO7C,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMyC,MAAM,GAAG,IAAI,MAAJ,EAAf;AAEAA,QAAAA,MAAM,CAACrC,MAAP,GAAgB,EAAhB;;AACA,YAAIyC,IAAI,IAAIA,IAAI,CAACpC,KAAb,IAAsBoC,IAAI,CAACpC,KAAL,CAAWJ,MAArC,EAA6C;AACzCwC,UAAAA,IAAI,CAACpC,KAAL,CAAWiC,OAAX,CAAmB,UAAAC,CAAC,EAAI;AACpBF,YAAAA,MAAM,CAACrC,MAAP,CAAciB,IAAd,CAAmB7B,KAAK,CAACsD,QAAN,CAAeH,CAAf,CAAnB;AACH,WAFD;AAGH;;AAED,eAAOF,MAAP;AACH,OAXM,CAAP;AAYH;;;;;;AAIL,SAASjC,6BAAT,CAAuCuC,MAAvC,EAA+C;AAC3C,SAAO/C,SAAS,OAAT,CAAc,YAAM;AACvB,QAAMyC,MAAM,GAAG,EAAf;AACAM,IAAAA,MAAM,CAACL,OAAP,CAAe,UAAAzB,KAAK,EAAI;AACpBwB,MAAAA,MAAM,CAACpB,IAAP,OAAAoB,MAAM,qBAASxB,KAAK,CAACD,IAAN,CAAWgC,IAAX,CAAgB,UAACC,CAAD,EAAGN,CAAH;AAAA,eAAUM,CAAC,CAACC,KAAF,CAAQC,SAAR,GAAoBR,CAAC,CAACO,KAAF,CAAQC,SAAtC;AAAA,OAAhB,CAAT,EAAN;AACH,KAFD;AAIA,WAAOV,MAAP;AACH,GAPM,CAAP;AAQH;;AAEDW,MAAM,CAACC,OAAP,GAAiBlD,UAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'BLKCH';\n\nconst Block = require('./Block');\nconst ioc = require('../../../util/iocContainer');\nconst EventEmitter = require('events');\nconst R = require('ramda');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: Blockchain\n * --------------------\n * container for all blocks. supports these events: \n * - update\n * - replace \n *\n * author: John R. Kosinski\n */\nclass Blockchain{\n    get chain() { return this._chain; }\n    get height() { return this._chain.length; }\n\n    /**\n     * constructor \n     */\n    constructor(){\n        this._emitter = new EventEmitter();\n        this._chain = [Block.genesis()];\n        this._emitter = new EventEmitter();\n    }\n    \n    /**\n     * returns a list of all transactions, in all blocks, sorted first by block number \n     * and then by timestamp. \n     */\n    /*Transaction*/ allTransactions() {\n        return extractTransactionsFromBlocks(this.chain);\n    }\n    \n    /**\n     * searches the blockchain to see if a transaction with the same id exists.\n     * @param {string} id id of the transaction in question\n     * @returns {bool} true if a transaction with the same id exists\n     */\n    /*bool*/ containsTransaction(id) {\n        return this.findTransaction(id);\n    }\n    \n    /**\n     * the opposite of containsTransaction(id). this one will return the block index \n     * (1-based) of the block that contains the specified transaction.  \n     * @param {string} id \n     * @returns {int} the 1-based block index of the found transaction \n     * (return value of 0 indicates transaction is not found)\n     */\n    /*int*/ findTransaction(id) {\n        return exception.try(() => {\n            const allTransactions = this.allTransactions().reverse(); \n            for (let n=0; n<allTransactions.length; n++) {\n                const t = allTransactions[n];\n                if (id === t.id) {\n                    return (n+1);\n                }\n            }\n            \n            return 0;\n        });\n    }\n\n    /**\n     * mines a new block, includes the given transactions, and appends it to the chain. \n     * @param {Transaction[]} data transactions to add to the new block\n     * @returns {Block}\n     */\n    /*Block*/ addBlock(data){\n        return exception.try(() => {\n            const block = Block.mineBlock(this.chain[this.chain.length-1], data);\n            \n            //check here to make sure that duplicate transactions don't exist\n            if (data) {\n                for (let t in data) {\n                    if (this.containsTransaction(t.id)) {\n                        //reject block\n                        logger.warn(`block is being rejected, because transaction ${t.id} is a duplicate`);\n                        return null;\n                    } \n                };\n            }\n            \n            this.chain.push(block);\n            logger.info(`block ${block.hash} added to chain. new chain height: ${this.height}`);\n\n            this._emitter.emit('update');\n            return block;\n        });\n    }\n\n    /**\n     * validates each block in the chain. \n     * @param {Blockchain} chain \n     * @returns {bool} false if chain is invalid \n     */\n    /*bool*/ isValidChain(chain) {\n        return exception.try(() => {\n            if (JSON.stringify(chain[0]) !== JSON.stringify(Block.genesis())) {\n                logger.warn('invalid chain: invalid genesis block');\n                return false;\n            }\n            \n            //if the last block has a transaction that exists elsewhere in the chain, then \n            // the chain is invalid \n            if (chain.length > 1) {\n                //get all transactions from ALL BUT LAST block\n                const allTrans = extractTransactionsFromBlocks(R.init(chain)); \n                \n                //examine all transactions in last block for duplicity\n                const lastBlock = chain[chain.length-1]; \n                for(let i=0; i<lastBlock.data.length; i++) {\n                    const t = lastBlock.data[i]; \n                    if (R.find(R.propEq('id', t.id))(allTrans)) {\n                        logger.warn(`invalid chain: transaction ${t.id} is duplicated`);\n                        return false;\n                    }\n                }\n            }\n\n            //if the chain has any invalid blocks, then the chain is invalid\n            //TODO: redo with ramda\n            for (let i=1; i<chain.length; i++) {\n                const block = chain[i];\n                const lastBlock = chain[i-1];\n    \n                if ((block.lastHash !== lastBlock.hash) || (block.hash !== Block.blockHash(block))) {\n                    logger.warn(`invalid chain: invalid block ${block.hash}`);\n                    return false;\n                }\n            }\n\n            return true;\n        });\n    }\n\n    /**\n     * replace the entire existing chain with the given one \n     * @param {BlockChain} newChain \n     */\n    replaceChain(newChain){\n        exception.try(() => {\n            if (newChain.length <= this._chain.length){\n                logger.info(\"received chain is not longer than the current chain\");\n                return;\n            }\n            else if (!this.isValidChain(newChain)){\n                logger.info(\"received chain is invalid\");\n                return;\n            }\n\n            logger.info(\"replacing the current chain with new chain\");\n            this._chain = newChain;\n\n            this._emitter.emit('update');\n        });\n    }\n\n    /**\n     * subscribe to an event \n     * @param {string} eventName \n     * @param {fn} callback \n     */\n    on(eventName, callback) {\n        if (eventName && callback) {\n            this._emitter.on(eventName, callback);\n        }\n    }\n\n    /**\n     * returns a json representation\n     */\n    /*json*/ toJson() {\n        const output = {\n            chain: []\n        };\n\n        this._chain.forEach(b => {\n            output.chain.push(b.toJson());\n        });\n\n        return output;\n    }\n\n    /**\n     * deserializes a Blockchain instance from JSON data\n     * @returns {Blockchain}\n     * @param {json} json\n     */\n    static /*Blockchain*/ fromJson(json) {\n        return exception.try(() => {\n            const output = new this();\n\n            output._chain = [];\n            if (json && json.chain && json.chain.length) {\n                json.chain.forEach(b => {\n                    output._chain.push(Block.fromJson(b));\n                });\n            }\n\n            return output;\n        });\n    }\n}\n\n\nfunction extractTransactionsFromBlocks(blocks) {    \n    return exception.try(() => {\n        const output = [];\n        blocks.forEach(block => {\n            output.push(...block.data.sort((a,b) => (a.input.timestamp < b.input.timestamp))); \n        });\n        \n        return output; \n    });\n}\n\nmodule.exports = Blockchain;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567745364234
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/httpServer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/httpServer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/httpServer.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/httpServer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
        "sourceFileName": "httpServer.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'HTTP';\n\nvar ioc = require('./util/iocContainer');\n\nvar cors = require('cors');\n\nvar express = require('express');\n\nvar config = require('./config');\n\nvar _require = require('./util/jsonUtil'),\n    convertJson = _require.convertJson;\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\nvar running = false;\n/**\n * minacoin: HttpServer\n * --------------------\n * encapsulates the main components of the server-side interface, such as the \n * web server and the p2p server. \n *\n * author: John R. Kosinski\n */\n\nvar HttpServer =\n/*#__PURE__*/\nfunction () {\n  /**\n   * constructor\n   * @param {Blockchain} blockchain\n   * @param {Wallet} wallet\n   * @param {IP2PServer} p2pServer\n   * @param {TransactionPool} txPool\n   * @param {Miner} miner\n   */\n  function HttpServer(blockchain, wallet, p2pServer, txPool, miner) {\n    _classCallCheck(this, HttpServer);\n\n    this.blockchain = blockchain;\n    this.wallet = wallet;\n    this.p2pServer = p2pServer;\n    this.txPool = txPool;\n    this.miner = miner;\n  }\n  /**\n   * starts the server running\n   */\n\n\n  _createClass(HttpServer, [{\n    key: \"start\",\n    value: function start() {\n      var _this = this;\n\n      exception[\"try\"](function () {\n        if (!running) {\n          logger.info('starting p2p server...');\n\n          _this.p2pServer.listen();\n\n          var app = express();\n          var port = config.HTTP_PORT;\n          app.use(express.json());\n          app.use(cors({\n            origin: 'http://localhost:3000'\n          }));\n          app.get('/transactions', function (req, res) {\n            exception[\"try\"](function () {\n              logger.info('GET /transactions');\n              res.json(convertJson(_this.txPool.transactions));\n            });\n          });\n          app.get('/public', function (req, res) {\n            exception[\"try\"](function () {\n              logger.info('GET /public');\n\n              _this.wallet.updateBalance(_this.blockchain);\n\n              res.json({\n                address: _this.wallet.publicKey,\n                balance: _this.wallet.balance,\n                chainSize: _this.blockchain.height,\n                peers: _this.p2pServer.peerList(),\n                transactionPool: {\n                  count: _this.txPool.txCount,\n                  pending: _this.txPool.pendingTransactions(_this.wallet.publicKey)\n                }\n              });\n            });\n          });\n          app.get('/blocks', function (req, res) {\n            exception[\"try\"](function () {\n              logger.info('GET /blocks');\n              res.json(_this.blockchain.toJson());\n            });\n          }); //pass in: recipient, amount\n\n          app.post('/transact', function (req, res) {\n            exception[\"try\"](function () {\n              logger.info('POST /transact');\n              var _req$body = req.body,\n                  recipient = _req$body.recipient,\n                  amount = _req$body.amount;\n\n              var transaction = _this.wallet.createTransaction(recipient, amount, _this.blockchain, _this.txPool);\n\n              _this.p2pServer.broadcastTransaction(transaction);\n\n              res.redirect('/transactions');\n            });\n          });\n          app.post('/mine-transactions', function (req, res) {\n            exception[\"try\"](function () {\n              logger.info('POST /mine-transactions');\n\n              var block = _this.miner.mine();\n\n              logger.info(\"new block added: \".concat(block.toJsonString()));\n              res.redirect('/blocks');\n            });\n          });\n          logger.info('starting web server...');\n          app.listen(port, function () {\n            logger.info(\"app running on port \".concat(port));\n          });\n          running = true;\n        }\n      });\n    }\n  }]);\n\n  return HttpServer;\n}();\n\nmodule.exports = {\n  HttpServer: HttpServer\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "httpServer.js"
      ],
      "names": [
        "LOG_TAG",
        "ioc",
        "require",
        "cors",
        "express",
        "config",
        "convertJson",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "running",
        "HttpServer",
        "blockchain",
        "wallet",
        "p2pServer",
        "txPool",
        "miner",
        "info",
        "listen",
        "app",
        "port",
        "HTTP_PORT",
        "use",
        "json",
        "origin",
        "get",
        "req",
        "res",
        "transactions",
        "updateBalance",
        "address",
        "publicKey",
        "balance",
        "chainSize",
        "height",
        "peers",
        "peerList",
        "transactionPool",
        "count",
        "txCount",
        "pending",
        "pendingTransactions",
        "toJson",
        "post",
        "body",
        "recipient",
        "amount",
        "transaction",
        "createTransaction",
        "broadcastTransaction",
        "redirect",
        "block",
        "mine",
        "toJsonString",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAG,MAAhB;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAnB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,UAAD,CAAtB;;eACwBA,OAAO,CAAC,iBAAD,C;IAAvBI,W,YAAAA,W;;AAER,IAAMC,MAAM,GAAGN,GAAG,CAACO,aAAJ,CAAkBC,YAAlB,CAA+BT,OAA/B,CAAf;AACA,IAAMU,SAAS,GAAGT,GAAG,CAACU,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA,IAAIM,OAAO,GAAG,KAAd;AAEA;;;;;;;;;IAQMC,U;;;AACF;;;;;;;;AAQA,sBAAYC,UAAZ,EAAwBC,MAAxB,EAAgCC,SAAhC,EAA2CC,MAA3C,EAAmDC,KAAnD,EAA0D;AAAA;;AACtD,SAAKJ,UAAL,GAAkBA,UAAlB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACH;AAED;;;;;;;4BAGQ;AAAA;;AACJT,MAAAA,SAAS,OAAT,CAAc,YAAM;AAChB,YAAI,CAACG,OAAL,EAAc;AACVN,UAAAA,MAAM,CAACa,IAAP,CAAY,wBAAZ;;AACA,UAAA,KAAI,CAACH,SAAL,CAAeI,MAAf;;AAEA,cAAMC,GAAG,GAAGlB,OAAO,EAAnB;AACA,cAAMmB,IAAI,GAAGlB,MAAM,CAACmB,SAApB;AAEAF,UAAAA,GAAG,CAACG,GAAJ,CAAQrB,OAAO,CAACsB,IAAR,EAAR;AACAJ,UAAAA,GAAG,CAACG,GAAJ,CAAQtB,IAAI,CAAC;AACTwB,YAAAA,MAAM,EAAE;AADC,WAAD,CAAZ;AAIAL,UAAAA,GAAG,CAACM,GAAJ,CAAQ,eAAR,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnCpB,YAAAA,SAAS,OAAT,CAAc,YAAM;AAChBH,cAAAA,MAAM,CAACa,IAAP,CAAY,mBAAZ;AAEAU,cAAAA,GAAG,CAACJ,IAAJ,CAASpB,WAAW,CAAC,KAAI,CAACY,MAAL,CAAYa,YAAb,CAApB;AACH,aAJD;AAKH,WAND;AAQAT,UAAAA,GAAG,CAACM,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7BpB,YAAAA,SAAS,OAAT,CAAc,YAAM;AAChBH,cAAAA,MAAM,CAACa,IAAP,CAAY,aAAZ;;AAEA,cAAA,KAAI,CAACJ,MAAL,CAAYgB,aAAZ,CAA0B,KAAI,CAACjB,UAA/B;;AACAe,cAAAA,GAAG,CAACJ,IAAJ,CAAS;AACLO,gBAAAA,OAAO,EAAE,KAAI,CAACjB,MAAL,CAAYkB,SADhB;AAELC,gBAAAA,OAAO,EAAE,KAAI,CAACnB,MAAL,CAAYmB,OAFhB;AAGLC,gBAAAA,SAAS,EAAE,KAAI,CAACrB,UAAL,CAAgBsB,MAHtB;AAILC,gBAAAA,KAAK,EAAE,KAAI,CAACrB,SAAL,CAAesB,QAAf,EAJF;AAKLC,gBAAAA,eAAe,EAAE;AACbC,kBAAAA,KAAK,EAAE,KAAI,CAACvB,MAAL,CAAYwB,OADN;AAEbC,kBAAAA,OAAO,EAAE,KAAI,CAACzB,MAAL,CAAY0B,mBAAZ,CAAgC,KAAI,CAAC5B,MAAL,CAAYkB,SAA5C;AAFI;AALZ,eAAT;AAUH,aAdD;AAeH,WAhBD;AAkBAZ,UAAAA,GAAG,CAACM,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7BpB,YAAAA,SAAS,OAAT,CAAc,YAAM;AAChBH,cAAAA,MAAM,CAACa,IAAP,CAAY,aAAZ;AAEAU,cAAAA,GAAG,CAACJ,IAAJ,CAAS,KAAI,CAACX,UAAL,CAAgB8B,MAAhB,EAAT;AACH,aAJD;AAKH,WAND,EAtCU,CA8CV;;AACAvB,UAAAA,GAAG,CAACwB,IAAJ,CAAS,WAAT,EAAsB,UAACjB,GAAD,EAAMC,GAAN,EAAc;AAChCpB,YAAAA,SAAS,OAAT,CAAc,YAAM;AAChBH,cAAAA,MAAM,CAACa,IAAP,CAAY,gBAAZ;AADgB,8BAGcS,GAAG,CAACkB,IAHlB;AAAA,kBAGRC,SAHQ,aAGRA,SAHQ;AAAA,kBAGGC,MAHH,aAGGA,MAHH;;AAIhB,kBAAMC,WAAW,GAAG,KAAI,CAAClC,MAAL,CAAYmC,iBAAZ,CAChBH,SADgB,EAEhBC,MAFgB,EAGhB,KAAI,CAAClC,UAHW,EAIhB,KAAI,CAACG,MAJW,CAApB;;AAOA,cAAA,KAAI,CAACD,SAAL,CAAemC,oBAAf,CAAoCF,WAApC;;AACApB,cAAAA,GAAG,CAACuB,QAAJ,CAAa,eAAb;AACH,aAbD;AAcH,WAfD;AAiBA/B,UAAAA,GAAG,CAACwB,IAAJ,CAAS,oBAAT,EAA8B,UAACjB,GAAD,EAAMC,GAAN,EAAY;AACtCpB,YAAAA,SAAS,OAAT,CAAc,YAAM;AAChBH,cAAAA,MAAM,CAACa,IAAP,CAAY,yBAAZ;;AAEA,kBAAMkC,KAAK,GAAG,KAAI,CAACnC,KAAL,CAAWoC,IAAX,EAAd;;AACAhD,cAAAA,MAAM,CAACa,IAAP,4BAAgCkC,KAAK,CAACE,YAAN,EAAhC;AACA1B,cAAAA,GAAG,CAACuB,QAAJ,CAAa,SAAb;AACH,aAND;AAOH,WARD;AAUA9C,UAAAA,MAAM,CAACa,IAAP,CAAY,wBAAZ;AACAE,UAAAA,GAAG,CAACD,MAAJ,CAAWE,IAAX,EAAiB,YAAM;AACnBhB,YAAAA,MAAM,CAACa,IAAP,+BAAmCG,IAAnC;AACH,WAFD;AAIAV,UAAAA,OAAO,GAAG,IAAV;AACH;AACJ,OAlFD;AAmFH;;;;;;AAGL4C,MAAM,CAACC,OAAP,GAAiB;AAAE5C,EAAAA,UAAU,EAAVA;AAAF,CAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'HTTP';\n\nconst ioc = require('./util/iocContainer');\nconst cors = require('cors');\nconst express = require('express');\nconst config = require('./config');\nconst { convertJson } = require('./util/jsonUtil');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\nlet running = false;\n\n/**\n * minacoin: HttpServer\n * --------------------\n * encapsulates the main components of the server-side interface, such as the \n * web server and the p2p server. \n *\n * author: John R. Kosinski\n */\nclass HttpServer {\n    /**\n     * constructor\n     * @param {Blockchain} blockchain\n     * @param {Wallet} wallet\n     * @param {IP2PServer} p2pServer\n     * @param {TransactionPool} txPool\n     * @param {Miner} miner\n     */\n    constructor(blockchain, wallet, p2pServer, txPool, miner) {\n        this.blockchain = blockchain;\n        this.wallet = wallet;\n        this.p2pServer = p2pServer;\n        this.txPool = txPool;\n        this.miner = miner;\n    }\n\n    /**\n     * starts the server running\n     */\n    start() {\n        exception.try(() => {\n            if (!running) {\n                logger.info('starting p2p server...');\n                this.p2pServer.listen();\n\n                const app = express();\n                const port = config.HTTP_PORT;\n\n                app.use(express.json());\n                app.use(cors({\n                    origin: 'http://localhost:3000'\n                }));\n\n                app.get('/transactions', (req, res) => {\n                    exception.try(() => {\n                        logger.info('GET /transactions');\n\n                        res.json(convertJson(this.txPool.transactions));\n                    });\n                });\n\n                app.get('/public', (req, res) => {\n                    exception.try(() => {\n                        logger.info('GET /public');\n\n                        this.wallet.updateBalance(this.blockchain);\n                        res.json({\n                            address: this.wallet.publicKey, \n                            balance: this.wallet.balance, \n                            chainSize: this.blockchain.height, \n                            peers: this.p2pServer.peerList(),\n                            transactionPool: {\n                                count: this.txPool.txCount, \n                                pending: this.txPool.pendingTransactions(this.wallet.publicKey)\n                            }\n                        });\n                    });\n                });\n                \n                app.get('/blocks', (req, res) => {\n                    exception.try(() => {\n                        logger.info('GET /blocks');\n                        \n                        res.json(this.blockchain.toJson()); \n                    });\n                }); \n\n                //pass in: recipient, amount\n                app.post('/transact', (req, res) => {\n                    exception.try(() => {\n                        logger.info('POST /transact');\n\n                        const { recipient, amount } = req.body;\n                        const transaction = this.wallet.createTransaction(\n                            recipient,\n                            amount,\n                            this.blockchain,\n                            this.txPool\n                        );\n\n                        this.p2pServer.broadcastTransaction(transaction);\n                        res.redirect('/transactions');\n                    });\n                });\n\n                app.post('/mine-transactions',(req, res)=>{\n                    exception.try(() => {\n                        logger.info('POST /mine-transactions');\n\n                        const block = this.miner.mine();\n                        logger.info(`new block added: ${block.toJsonString()}`);\n                        res.redirect('/blocks');\n                    });\n                })\n\n                logger.info('starting web server...');\n                app.listen(port, () => {\n                    logger.info(`app running on port ${port}`);\n                });\n\n                running = true;\n            }\n        });\n    }\n}\n\nmodule.exports = { HttpServer };\n\n\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567756422487
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/jsonUtil.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/jsonUtil.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/jsonUtil.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/jsonUtil.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
        "sourceFileName": "jsonUtil.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction convertJson(obj) {\n  if (Array.isArray(obj)) {\n    var output = [];\n    obj.forEach(function (i) {\n      output.push(convertJson(i));\n    });\n    return output;\n  }\n\n  if (obj.toJson) {\n    return obj.toJson();\n  }\n\n  return obj;\n}\n\nexports.convertJson = convertJson;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzb25VdGlsLmpzIl0sIm5hbWVzIjpbImNvbnZlcnRKc29uIiwib2JqIiwiQXJyYXkiLCJpc0FycmF5Iiwib3V0cHV0IiwiZm9yRWFjaCIsImkiLCJwdXNoIiwidG9Kc29uIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsU0FBU0EsV0FBVCxDQUFxQkMsR0FBckIsRUFBMEI7QUFDdEIsTUFBSUMsS0FBSyxDQUFDQyxPQUFOLENBQWNGLEdBQWQsQ0FBSixFQUF3QjtBQUNwQixRQUFNRyxNQUFNLEdBQUcsRUFBZjtBQUNBSCxJQUFBQSxHQUFHLENBQUNJLE9BQUosQ0FBWSxVQUFDQyxDQUFELEVBQU87QUFDZkYsTUFBQUEsTUFBTSxDQUFDRyxJQUFQLENBQVlQLFdBQVcsQ0FBQ00sQ0FBRCxDQUF2QjtBQUNILEtBRkQ7QUFHQSxXQUFPRixNQUFQO0FBQ0g7O0FBQ0QsTUFBSUgsR0FBRyxDQUFDTyxNQUFSLEVBQWdCO0FBQ1osV0FBT1AsR0FBRyxDQUFDTyxNQUFKLEVBQVA7QUFDSDs7QUFDRCxTQUFPUCxHQUFQO0FBQ0g7O0FBRURRLE9BQU8sQ0FBQ1QsV0FBUixHQUFzQkEsV0FBdEIiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21pbmFjb2luL21pbmFjb2luLXNlcnZlci9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY29udmVydEpzb24ob2JqKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkob2JqKSkge1xuICAgICAgICBjb25zdCBvdXRwdXQgPSBbXTtcbiAgICAgICAgb2JqLmZvckVhY2goKGkpID0+IHtcbiAgICAgICAgICAgIG91dHB1dC5wdXNoKGNvbnZlcnRKc29uKGkpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBvdXRwdXQ7XG4gICAgfVxuICAgIGlmIChvYmoudG9Kc29uKSB7XG4gICAgICAgIHJldHVybiBvYmoudG9Kc29uKCk7XG4gICAgfVxuICAgIHJldHVybiBvYmo7XG59XG5cbmV4cG9ydHMuY29udmVydEpzb24gPSBjb252ZXJ0SnNvbjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "jsonUtil.js"
      ],
      "names": [
        "convertJson",
        "obj",
        "Array",
        "isArray",
        "output",
        "forEach",
        "i",
        "push",
        "toJson",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,SAASA,WAAT,CAAqBC,GAArB,EAA0B;AACtB,MAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;AACpB,QAAMG,MAAM,GAAG,EAAf;AACAH,IAAAA,GAAG,CAACI,OAAJ,CAAY,UAACC,CAAD,EAAO;AACfF,MAAAA,MAAM,CAACG,IAAP,CAAYP,WAAW,CAACM,CAAD,CAAvB;AACH,KAFD;AAGA,WAAOF,MAAP;AACH;;AACD,MAAIH,GAAG,CAACO,MAAR,EAAgB;AACZ,WAAOP,GAAG,CAACO,MAAJ,EAAP;AACH;;AACD,SAAOP,GAAP;AACH;;AAEDQ,OAAO,CAACT,WAAR,GAAsBA,WAAtB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "sourcesContent": [
        "'use strict';\n\nfunction convertJson(obj) {\n    if (Array.isArray(obj)) {\n        const output = [];\n        obj.forEach((i) => {\n            output.push(convertJson(i));\n        });\n        return output;\n    }\n    if (obj.toJson) {\n        return obj.toJson();\n    }\n    return obj;\n}\n\nexports.convertJson = convertJson;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567696974850
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/LocalJsonDb.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/LocalJsonDb.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/LocalJsonDb.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/LocalJsonDb.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes",
        "sourceFileName": "LocalJsonDb.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\n\nvar LOG_TAG = \"LDB\";\n\nvar ioc = require('../../../util/iocContainer');\n\nvar fs = require('fs');\n\nvar IDatabase = require('./IDatabase.ts');\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: LocalJsonDb\n * ---------------------\n * implementation of IDatabase that reads/writes local files. \n *\n * author: John R. Kosinski\n */\n\nvar LocalFileDb =\n/*#__PURE__*/\nfunction (_IDatabase) {\n  _inherits(LocalFileDb, _IDatabase);\n\n  function LocalFileDb() {\n    var _this;\n\n    _classCallCheck(this, LocalFileDb);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LocalFileDb).call(this));\n\n    _save.add(_assertThisInitialized(_this));\n\n    return _this;\n  }\n  /**\n   * serialize & save the given blockchain to data source\n   * @param {Blockchain} blockchain\n   */\n\n\n  _createClass(LocalFileDb, [{\n    key: \"saveBlockchain\",\n    value: function () {\n      var _saveBlockchain = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(blockchain) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _classPrivateMethodGet(this, _save, _save2).call(this, 'blockchain', blockchain);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function saveBlockchain(_x) {\n        return _saveBlockchain.apply(this, arguments);\n      }\n\n      return saveBlockchain;\n    }()\n    /**\n     * read blockchain data from data source and return as json\n     * @returns {json}\n     */\n\n    /*json*/\n\n  }, {\n    key: \"getBlockchain\",\n    value: function () {\n      var _getBlockchain = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.read('blockchain');\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getBlockchain() {\n        return _getBlockchain.apply(this, arguments);\n      }\n\n      return getBlockchain;\n    }()\n    /**\n     * serialize & save the given wallet to data source\n     * @param {Wallet} wallet\n     */\n\n  }, {\n    key: \"saveWallet\",\n    value: function () {\n      var _saveWallet = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(wallet) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _classPrivateMethodGet(this, _save, _save2).call(this, 'wallet', wallet);\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function saveWallet(_x2) {\n        return _saveWallet.apply(this, arguments);\n      }\n\n      return saveWallet;\n    }()\n    /**\n     * read wallet data from data source and return as Wallet instance\n     * @returns {json}\n     */\n\n    /*json*/\n\n  }, {\n    key: \"getWallet\",\n    value: function () {\n      var _getWallet = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.read('wallet');\n\n              case 2:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getWallet() {\n        return _getWallet.apply(this, arguments);\n      }\n\n      return getWallet;\n    }()\n    /**\n     * writes a value (json object) to a DB file \n     * @param {string} key \n     * @param {json} obj \n     */\n\n  }, {\n    key: \"read\",\n\n    /**\n     * reads a value (json object) from the DB file \n     * @param {string} key \n     */\n    value: function () {\n      var _read = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(key) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return exception.tryAsync(\n                /*#__PURE__*/\n                _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee5() {\n                  var data;\n                  return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          _context5.next = 2;\n                          return readFile(key + '.txt');\n\n                        case 2:\n                          data = _context5.sent;\n                          return _context5.abrupt(\"return\", data ? JSON.parse(data) : null);\n\n                        case 4:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                })));\n\n              case 2:\n                return _context6.abrupt(\"return\", _context6.sent);\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function read(_x3) {\n        return _read.apply(this, arguments);\n      }\n\n      return read;\n    }()\n  }]);\n\n  return LocalFileDb;\n}(IDatabase);\n/**\n * write string data to a text file\n * @param {string} path\n * @param {string} data\n * @returns {Promise(bool)}\n */\n\n\nvar _save = new WeakSet();\n\nvar _save2 =\n/*#__PURE__*/\nfunction () {\n  var _save3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee8(key, obj) {\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return exception.tryAsync(\n            /*#__PURE__*/\n            _asyncToGenerator(\n            /*#__PURE__*/\n            regeneratorRuntime.mark(function _callee7() {\n              var data;\n              return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                while (1) {\n                  switch (_context7.prev = _context7.next) {\n                    case 0:\n                      data = {};\n\n                      if (obj) {\n                        data = JSON.stringify(obj.toJson());\n                      }\n\n                      _context7.next = 4;\n                      return writeFile(key + '.txt', data);\n\n                    case 4:\n                    case \"end\":\n                      return _context7.stop();\n                  }\n                }\n              }, _callee7);\n            })));\n\n          case 2:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  function _save2(_x4, _x5) {\n    return _save3.apply(this, arguments);\n  }\n\n  return _save2;\n}();\n\nfunction\n/*bool*/\nwriteFile(path, data) {\n  exception[\"try\"](function () {\n    return new Promise(function (resolve, reject) {\n      fs.writeFile(path, data, function (err, data) {\n        if (err) reject(err);else resolve(true);\n      });\n    });\n  });\n}\n/**\n * read string data from a text file\n * @param {string} path\n * @returns {Promise(string)}\n */\n\n\nfunction\n/*string*/\nreadFile(path) {\n  return exception[\"try\"](function () {\n    return new Promise(function (resolve, reject) {\n      fs.readFile(path, function (err, data) {\n        if (err) {\n          logger.error(err);\n          resolve(null);\n        } else {\n          resolve(data.toString());\n        }\n      });\n    });\n  });\n}\n\nvar database = new LocalFileDb();\nmodule.exports = database;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxvY2FsSnNvbkRiLmpzIl0sIm5hbWVzIjpbIkxPR19UQUciLCJpb2MiLCJyZXF1aXJlIiwiZnMiLCJJRGF0YWJhc2UiLCJsb2dnZXIiLCJsb2dnZXJGYWN0b3J5IiwiY3JlYXRlTG9nZ2VyIiwiZXhjZXB0aW9uIiwiZWhGYWN0b3J5IiwiY3JlYXRlSGFuZGxlciIsIkxvY2FsRmlsZURiIiwiYmxvY2tjaGFpbiIsInJlYWQiLCJ3YWxsZXQiLCJrZXkiLCJ0cnlBc3luYyIsInJlYWRGaWxlIiwiZGF0YSIsIkpTT04iLCJwYXJzZSIsIm9iaiIsInN0cmluZ2lmeSIsInRvSnNvbiIsIndyaXRlRmlsZSIsInBhdGgiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImVyciIsImVycm9yIiwidG9TdHJpbmciLCJkYXRhYmFzZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLE9BQU8sR0FBRyxLQUFoQjs7QUFFQSxJQUFNQyxHQUFHLEdBQUdDLE9BQU8sQ0FBQyw0QkFBRCxDQUFuQjs7QUFDQSxJQUFNQyxFQUFFLEdBQUdELE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBLElBQU1FLFNBQVMsR0FBR0YsT0FBTyxDQUFDLGdCQUFELENBQXpCOztBQUVBLElBQU1HLE1BQU0sR0FBR0osR0FBRyxDQUFDSyxhQUFKLENBQWtCQyxZQUFsQixDQUErQlAsT0FBL0IsQ0FBZjtBQUNBLElBQU1RLFNBQVMsR0FBR1AsR0FBRyxDQUFDUSxTQUFKLENBQWNDLGFBQWQsQ0FBNEJMLE1BQTVCLENBQWxCO0FBRUE7Ozs7Ozs7O0lBT01NLFc7Ozs7O0FBQ0YseUJBQWM7QUFBQTs7QUFBQTs7QUFDVjs7QUFEVTs7QUFBQTtBQUViO0FBRUQ7Ozs7Ozs7Ozs7OytDQUlxQkMsVTs7Ozs7OzhDQUNYLEksc0JBQUEsSSxFQUFXLFksRUFBY0EsVTs7Ozs7Ozs7Ozs7Ozs7OztBQUduQzs7Ozs7QUFJQTs7Ozs7Ozs7Ozs7Ozt1QkFDaUIsS0FBS0MsSUFBTCxDQUFVLFlBQVYsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUdqQjs7Ozs7Ozs7OztnREFJaUJDLE07Ozs7Ozs4Q0FDUCxJLHNCQUFBLEksRUFBVyxRLEVBQVVBLE07Ozs7Ozs7Ozs7Ozs7Ozs7QUFHL0I7Ozs7O0FBSUE7Ozs7Ozs7Ozs7Ozs7dUJBQ2lCLEtBQUtELElBQUwsQ0FBVSxRQUFWLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFHakI7Ozs7Ozs7OztBQWVBOzs7Ozs7O2dEQUlXRSxHOzs7Ozs7dUJBQ01QLFNBQVMsQ0FBQ1EsUUFBVjtBQUFBO0FBQUE7QUFBQTtBQUFBLHdDQUFtQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGlDQUNUQyxRQUFRLENBQUNGLEdBQUcsR0FBRyxNQUFQLENBREM7O0FBQUE7QUFDdEJHLDBCQUFBQSxJQURzQjtBQUFBLDREQUVyQkEsSUFBSSxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0YsSUFBWCxDQUFILEdBQXNCLElBRkw7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsaUJBQW5CLEc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUF6REtkLFM7QUFpRTFCOzs7Ozs7Ozs7Ozs7Ozs7NENBdkJnQlcsRyxFQUFLTSxHOzs7Ozs7bUJBQ1BiLFNBQVMsQ0FBQ1EsUUFBVjtBQUFBO0FBQUE7QUFBQTtBQUFBLG9DQUFtQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDakJFLHNCQUFBQSxJQURpQixHQUNWLEVBRFU7O0FBRXJCLDBCQUFJRyxHQUFKLEVBQVM7QUFDTEgsd0JBQUFBLElBQUksR0FBR0MsSUFBSSxDQUFDRyxTQUFMLENBQWVELEdBQUcsQ0FBQ0UsTUFBSixFQUFmLENBQVA7QUFDSDs7QUFKb0I7QUFBQSw2QkFLZkMsU0FBUyxDQUFDVCxHQUFHLEdBQUcsTUFBUCxFQUFlRyxJQUFmLENBTE07O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsYUFBbkIsRzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE0QmQ7QUFBUztBQUFTTSxTQUFsQixDQUE0QkMsSUFBNUIsRUFBa0NQLElBQWxDLEVBQXdDO0FBQ3BDVixFQUFBQSxTQUFTLE9BQVQsQ0FBYyxZQUFNO0FBQ2hCLFdBQU8sSUFBSWtCLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDcEN6QixNQUFBQSxFQUFFLENBQUNxQixTQUFILENBQWFDLElBQWIsRUFBbUJQLElBQW5CLEVBQXlCLFVBQUNXLEdBQUQsRUFBTVgsSUFBTixFQUFlO0FBQ3BDLFlBQUlXLEdBQUosRUFDSUQsTUFBTSxDQUFDQyxHQUFELENBQU4sQ0FESixLQUdJRixPQUFPLENBQUMsSUFBRCxDQUFQO0FBQ1AsT0FMRDtBQU1ILEtBUE0sQ0FBUDtBQVFILEdBVEQ7QUFVSDtBQUVEOzs7Ozs7O0FBS0E7QUFBUztBQUFXVixRQUFwQixDQUE2QlEsSUFBN0IsRUFBbUM7QUFDL0IsU0FBT2pCLFNBQVMsT0FBVCxDQUFjLFlBQU07QUFDdkIsV0FBTyxJQUFJa0IsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUNwQ3pCLE1BQUFBLEVBQUUsQ0FBQ2MsUUFBSCxDQUFZUSxJQUFaLEVBQWtCLFVBQUNJLEdBQUQsRUFBTVgsSUFBTixFQUFlO0FBQzdCLFlBQUlXLEdBQUosRUFBUztBQUNMeEIsVUFBQUEsTUFBTSxDQUFDeUIsS0FBUCxDQUFhRCxHQUFiO0FBQ0FGLFVBQUFBLE9BQU8sQ0FBQyxJQUFELENBQVA7QUFDSCxTQUhELE1BSUs7QUFDREEsVUFBQUEsT0FBTyxDQUFDVCxJQUFJLENBQUNhLFFBQUwsRUFBRCxDQUFQO0FBQ0g7QUFDSixPQVJEO0FBU0gsS0FWTSxDQUFQO0FBV0gsR0FaTSxDQUFQO0FBYUg7O0FBRUQsSUFBTUMsUUFBUSxHQUFHLElBQUlyQixXQUFKLEVBQWpCO0FBQ0FzQixNQUFNLENBQUNDLE9BQVAsR0FBaUJGLFFBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FjZXIvRGVza3RvcC9taW5hY29pbi9taW5hY29pbi9taW5hY29pbi1zZXJ2ZXIvc3JjL2xpYi9kYXRhYmFzZS9jbGFzc2VzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBMT0dfVEFHID0gXCJMREJcIjtcblxuY29uc3QgaW9jID0gcmVxdWlyZSgnLi4vLi4vLi4vdXRpbC9pb2NDb250YWluZXInKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IElEYXRhYmFzZSA9IHJlcXVpcmUoJy4vSURhdGFiYXNlLnRzJyk7XG5cbmNvbnN0IGxvZ2dlciA9IGlvYy5sb2dnZXJGYWN0b3J5LmNyZWF0ZUxvZ2dlcihMT0dfVEFHKTtcbmNvbnN0IGV4Y2VwdGlvbiA9IGlvYy5laEZhY3RvcnkuY3JlYXRlSGFuZGxlcihsb2dnZXIpO1xuXG4vKipcbiAqIG1pbmFjb2luOiBMb2NhbEpzb25EYlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBpbXBsZW1lbnRhdGlvbiBvZiBJRGF0YWJhc2UgdGhhdCByZWFkcy93cml0ZXMgbG9jYWwgZmlsZXMuIFxuICpcbiAqIGF1dGhvcjogSm9obiBSLiBLb3NpbnNraVxuICovXG5jbGFzcyBMb2NhbEZpbGVEYiBleHRlbmRzIElEYXRhYmFzZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogc2VyaWFsaXplICYgc2F2ZSB0aGUgZ2l2ZW4gYmxvY2tjaGFpbiB0byBkYXRhIHNvdXJjZVxuICAgICAqIEBwYXJhbSB7QmxvY2tjaGFpbn0gYmxvY2tjaGFpblxuICAgICAqL1xuICAgIGFzeW5jIHNhdmVCbG9ja2NoYWluKGJsb2NrY2hhaW4pIHtcbiAgICAgICAgYXdhaXQgdGhpcy4jc2F2ZSgnYmxvY2tjaGFpbicsIGJsb2NrY2hhaW4pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHJlYWQgYmxvY2tjaGFpbiBkYXRhIGZyb20gZGF0YSBzb3VyY2UgYW5kIHJldHVybiBhcyBqc29uXG4gICAgICogQHJldHVybnMge2pzb259XG4gICAgICovXG4gICAgLypqc29uKi8gYXN5bmMgZ2V0QmxvY2tjaGFpbigpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucmVhZCgnYmxvY2tjaGFpbicpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHNlcmlhbGl6ZSAmIHNhdmUgdGhlIGdpdmVuIHdhbGxldCB0byBkYXRhIHNvdXJjZVxuICAgICAqIEBwYXJhbSB7V2FsbGV0fSB3YWxsZXRcbiAgICAgKi9cbiAgICBhc3luYyBzYXZlV2FsbGV0KHdhbGxldCkge1xuICAgICAgICBhd2FpdCB0aGlzLiNzYXZlKCd3YWxsZXQnLCB3YWxsZXQpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHJlYWQgd2FsbGV0IGRhdGEgZnJvbSBkYXRhIHNvdXJjZSBhbmQgcmV0dXJuIGFzIFdhbGxldCBpbnN0YW5jZVxuICAgICAqIEByZXR1cm5zIHtqc29ufVxuICAgICAqL1xuICAgIC8qanNvbiovIGFzeW5jIGdldFdhbGxldCgpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucmVhZCgnd2FsbGV0Jyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogd3JpdGVzIGEgdmFsdWUgKGpzb24gb2JqZWN0KSB0byBhIERCIGZpbGUgXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGtleSBcbiAgICAgKiBAcGFyYW0ge2pzb259IG9iaiBcbiAgICAgKi9cbiAgICBhc3luYyAjc2F2ZShrZXksIG9iaikge1xuICAgICAgICBhd2FpdCBleGNlcHRpb24udHJ5QXN5bmMoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgbGV0IGRhdGEgPSB7fTtcbiAgICAgICAgICAgIGlmIChvYmopIHtcbiAgICAgICAgICAgICAgICBkYXRhID0gSlNPTi5zdHJpbmdpZnkob2JqLnRvSnNvbigpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGF3YWl0IHdyaXRlRmlsZShrZXkgKyAnLnR4dCcsIGRhdGEpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiByZWFkcyBhIHZhbHVlIChqc29uIG9iamVjdCkgZnJvbSB0aGUgREIgZmlsZSBcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IFxuICAgICAqL1xuICAgIGFzeW5jIHJlYWQoa2V5KSB7XG4gICAgICAgIHJldHVybiBhd2FpdCBleGNlcHRpb24udHJ5QXN5bmMoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlYWRGaWxlKGtleSArICcudHh0Jyk7XG4gICAgICAgICAgICByZXR1cm4gZGF0YSA/IEpTT04ucGFyc2UoZGF0YSkgOiBudWxsO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5cblxuLyoqXG4gKiB3cml0ZSBzdHJpbmcgZGF0YSB0byBhIHRleHQgZmlsZVxuICogQHBhcmFtIHtzdHJpbmd9IHBhdGhcbiAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhXG4gKiBAcmV0dXJucyB7UHJvbWlzZShib29sKX1cbiAqL1xuZnVuY3Rpb24gLypib29sKi8gd3JpdGVGaWxlKHBhdGgsIGRhdGEpIHtcbiAgICBleGNlcHRpb24udHJ5KCgpID0+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGZzLndyaXRlRmlsZShwYXRoLCBkYXRhLCAoZXJyLCBkYXRhKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGVycilcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHRydWUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuXG4vKipcbiAqIHJlYWQgc3RyaW5nIGRhdGEgZnJvbSBhIHRleHQgZmlsZVxuICogQHBhcmFtIHtzdHJpbmd9IHBhdGhcbiAqIEByZXR1cm5zIHtQcm9taXNlKHN0cmluZyl9XG4gKi9cbmZ1bmN0aW9uIC8qc3RyaW5nKi8gcmVhZEZpbGUocGF0aCkge1xuICAgIHJldHVybiBleGNlcHRpb24udHJ5KCgpID0+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGZzLnJlYWRGaWxlKHBhdGgsIChlcnIsIGRhdGEpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIGxvZ2dlci5lcnJvcihlcnIpO1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKG51bGwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShkYXRhLnRvU3RyaW5nKCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cblxuY29uc3QgZGF0YWJhc2UgPSBuZXcgTG9jYWxGaWxlRGIoKTtcbm1vZHVsZS5leHBvcnRzID0gZGF0YWJhc2U7Il19",
    "map": {
      "version": 3,
      "sources": [
        "LocalJsonDb.js"
      ],
      "names": [
        "LOG_TAG",
        "ioc",
        "require",
        "fs",
        "IDatabase",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "LocalFileDb",
        "blockchain",
        "read",
        "wallet",
        "key",
        "tryAsync",
        "readFile",
        "data",
        "JSON",
        "parse",
        "obj",
        "stringify",
        "toJson",
        "writeFile",
        "path",
        "Promise",
        "resolve",
        "reject",
        "err",
        "error",
        "toString",
        "database",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,KAAhB;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,4BAAD,CAAnB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,gBAAD,CAAzB;;AAEA,IAAMG,MAAM,GAAGJ,GAAG,CAACK,aAAJ,CAAkBC,YAAlB,CAA+BP,OAA/B,CAAf;AACA,IAAMQ,SAAS,GAAGP,GAAG,CAACQ,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;IAOMM,W;;;;;AACF,yBAAc;AAAA;;AAAA;;AACV;;AADU;;AAAA;AAEb;AAED;;;;;;;;;;;+CAIqBC,U;;;;;;8CACX,I,sBAAA,I,EAAW,Y,EAAcA,U;;;;;;;;;;;;;;;;AAGnC;;;;;AAIA;;;;;;;;;;;;;uBACiB,KAAKC,IAAL,CAAU,YAAV,C;;;;;;;;;;;;;;;;;;;AAGjB;;;;;;;;;;gDAIiBC,M;;;;;;8CACP,I,sBAAA,I,EAAW,Q,EAAUA,M;;;;;;;;;;;;;;;;AAG/B;;;;;AAIA;;;;;;;;;;;;;uBACiB,KAAKD,IAAL,CAAU,QAAV,C;;;;;;;;;;;;;;;;;;;AAGjB;;;;;;;;;AAeA;;;;;;;gDAIWE,G;;;;;;uBACMP,SAAS,CAACQ,QAAV;AAAA;AAAA;AAAA;AAAA,wCAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACTC,QAAQ,CAACF,GAAG,GAAG,MAAP,CADC;;AAAA;AACtBG,0BAAAA,IADsB;AAAA,4DAErBA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAH,GAAsB,IAFL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAnB,G;;;;;;;;;;;;;;;;;;;;;;EAzDKd,S;AAiE1B;;;;;;;;;;;;;;;4CAvBgBW,G,EAAKM,G;;;;;;mBACPb,SAAS,CAACQ,QAAV;AAAA;AAAA;AAAA;AAAA,oCAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBE,sBAAAA,IADiB,GACV,EADU;;AAErB,0BAAIG,GAAJ,EAAS;AACLH,wBAAAA,IAAI,GAAGC,IAAI,CAACG,SAAL,CAAeD,GAAG,CAACE,MAAJ,EAAf,CAAP;AACH;;AAJoB;AAAA,6BAKfC,SAAS,CAACT,GAAG,GAAG,MAAP,EAAeG,IAAf,CALM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAnB,G;;;;;;;;;;;;;;;;;AA4Bd;AAAS;AAASM,SAAlB,CAA4BC,IAA5B,EAAkCP,IAAlC,EAAwC;AACpCV,EAAAA,SAAS,OAAT,CAAc,YAAM;AAChB,WAAO,IAAIkB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCzB,MAAAA,EAAE,CAACqB,SAAH,CAAaC,IAAb,EAAmBP,IAAnB,EAAyB,UAACW,GAAD,EAAMX,IAAN,EAAe;AACpC,YAAIW,GAAJ,EACID,MAAM,CAACC,GAAD,CAAN,CADJ,KAGIF,OAAO,CAAC,IAAD,CAAP;AACP,OALD;AAMH,KAPM,CAAP;AAQH,GATD;AAUH;AAED;;;;;;;AAKA;AAAS;AAAWV,QAApB,CAA6BQ,IAA7B,EAAmC;AAC/B,SAAOjB,SAAS,OAAT,CAAc,YAAM;AACvB,WAAO,IAAIkB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCzB,MAAAA,EAAE,CAACc,QAAH,CAAYQ,IAAZ,EAAkB,UAACI,GAAD,EAAMX,IAAN,EAAe;AAC7B,YAAIW,GAAJ,EAAS;AACLxB,UAAAA,MAAM,CAACyB,KAAP,CAAaD,GAAb;AACAF,UAAAA,OAAO,CAAC,IAAD,CAAP;AACH,SAHD,MAIK;AACDA,UAAAA,OAAO,CAACT,IAAI,CAACa,QAAL,EAAD,CAAP;AACH;AACJ,OARD;AASH,KAVM,CAAP;AAWH,GAZM,CAAP;AAaH;;AAED,IAAMC,QAAQ,GAAG,IAAIrB,WAAJ,EAAjB;AACAsB,MAAM,CAACC,OAAP,GAAiBF,QAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = \"LDB\";\n\nconst ioc = require('../../../util/iocContainer');\nconst fs = require('fs');\nconst IDatabase = require('./IDatabase.ts');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: LocalJsonDb\n * ---------------------\n * implementation of IDatabase that reads/writes local files. \n *\n * author: John R. Kosinski\n */\nclass LocalFileDb extends IDatabase {\n    constructor() {\n        super();\n    }\n\n    /**\n     * serialize & save the given blockchain to data source\n     * @param {Blockchain} blockchain\n     */\n    async saveBlockchain(blockchain) {\n        await this.#save('blockchain', blockchain);\n    }\n\n    /**\n     * read blockchain data from data source and return as json\n     * @returns {json}\n     */\n    /*json*/ async getBlockchain() {\n        return await this.read('blockchain');\n    }\n\n    /**\n     * serialize & save the given wallet to data source\n     * @param {Wallet} wallet\n     */\n    async saveWallet(wallet) {\n        await this.#save('wallet', wallet);\n    }\n\n    /**\n     * read wallet data from data source and return as Wallet instance\n     * @returns {json}\n     */\n    /*json*/ async getWallet() {\n        return await this.read('wallet');\n    }\n\n    /**\n     * writes a value (json object) to a DB file \n     * @param {string} key \n     * @param {json} obj \n     */\n    async #save(key, obj) {\n        await exception.tryAsync(async () => {\n            let data = {};\n            if (obj) {\n                data = JSON.stringify(obj.toJson());\n            }\n            await writeFile(key + '.txt', data);\n        });\n    }\n\n    /**\n     * reads a value (json object) from the DB file \n     * @param {string} key \n     */\n    async read(key) {\n        return await exception.tryAsync(async () => {\n            const data = await readFile(key + '.txt');\n            return data ? JSON.parse(data) : null;\n        });\n    }\n}\n\n\n/**\n * write string data to a text file\n * @param {string} path\n * @param {string} data\n * @returns {Promise(bool)}\n */\nfunction /*bool*/ writeFile(path, data) {\n    exception.try(() => {\n        return new Promise((resolve, reject) => {\n            fs.writeFile(path, data, (err, data) => {\n                if (err)\n                    reject(err);\n                else\n                    resolve(true);\n            });\n        });\n    });\n}\n\n/**\n * read string data from a text file\n * @param {string} path\n * @returns {Promise(string)}\n */\nfunction /*string*/ readFile(path) {\n    return exception.try(() => {\n        return new Promise((resolve, reject) => {\n            fs.readFile(path, (err, data) => {\n                if (err) {\n                    logger.error(err);\n                    resolve(null);\n                }\n                else {\n                    resolve(data.toString());\n                }\n            });\n        });\n    });\n}\n\nconst database = new LocalFileDb();\nmodule.exports = database;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567779866750
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/IDatabase.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/IDatabase.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/IDatabase.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/IDatabase.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes",
        "sourceFileName": "IDatabase.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n/**\n * minacoin: IDatabase\n * -------------------\n * interface for app database which stores things like the blockchain \n * and wallet info. \n *\n * author: John R. Kosinski\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar IDatabase =\n/*#__PURE__*/\nfunction () {\n  function IDatabase() {\n    _classCallCheck(this, IDatabase);\n  }\n\n  _createClass(IDatabase, [{\n    key: \"saveBlockchain\",\n    value: function saveBlockchain(blockchain) {}\n  }, {\n    key: \"getBlockchain\",\n    value: function getBlockchain() {}\n  }, {\n    key: \"saveWallet\",\n    value: function saveWallet(wallet) {}\n  }, {\n    key: \"getWallet\",\n    value: function getWallet() {}\n  }]);\n\n  return IDatabase;\n}();\n\nmodule.exports = IDatabase;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIklEYXRhYmFzZS5qcyJdLCJuYW1lcyI6WyJJRGF0YWJhc2UiLCJibG9ja2NoYWluIiwid2FsbGV0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTs7Ozs7Ozs7Ozs7Ozs7O0lBUU1BLFM7Ozs7Ozs7OzttQ0FDYUMsVSxFQUFZLENBQUU7OztvQ0FDYixDQUFFOzs7K0JBQ1BDLE0sRUFBUSxDQUFFOzs7Z0NBQ1QsQ0FBRTs7Ozs7O0FBR2xCQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJKLFNBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FjZXIvRGVza3RvcC9taW5hY29pbi9taW5hY29pbi9taW5hY29pbi1zZXJ2ZXIvc3JjL2xpYi9kYXRhYmFzZS9jbGFzc2VzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIG1pbmFjb2luOiBJRGF0YWJhc2VcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIGludGVyZmFjZSBmb3IgYXBwIGRhdGFiYXNlIHdoaWNoIHN0b3JlcyB0aGluZ3MgbGlrZSB0aGUgYmxvY2tjaGFpbiBcbiAqIGFuZCB3YWxsZXQgaW5mby4gXG4gKlxuICogYXV0aG9yOiBKb2huIFIuIEtvc2luc2tpXG4gKi9cbmNsYXNzIElEYXRhYmFzZSB7XG4gICAgc2F2ZUJsb2NrY2hhaW4oYmxvY2tjaGFpbikge31cbiAgICBnZXRCbG9ja2NoYWluKCkge31cbiAgICBzYXZlV2FsbGV0KHdhbGxldCkge31cbiAgICBnZXRXYWxsZXQoKSB7fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IElEYXRhYmFzZTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "IDatabase.js"
      ],
      "names": [
        "IDatabase",
        "blockchain",
        "wallet",
        "module",
        "exports"
      ],
      "mappings": "AAAA;AAEA;;;;;;;;;;;;;;;IAQMA,S;;;;;;;;;mCACaC,U,EAAY,CAAE;;;oCACb,CAAE;;;+BACPC,M,EAAQ,CAAE;;;gCACT,CAAE;;;;;;AAGlBC,MAAM,CAACC,OAAP,GAAiBJ,SAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes",
      "sourcesContent": [
        "'use strict';\n\n/**\n * minacoin: IDatabase\n * -------------------\n * interface for app database which stores things like the blockchain \n * and wallet info. \n *\n * author: John R. Kosinski\n */\nclass IDatabase {\n    saveBlockchain(blockchain) {}\n    getBlockchain() {}\n    saveWallet(wallet) {}\n    getWallet() {}\n}\n\nmodule.exports = IDatabase;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567779006062
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/index.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar LOG_TAG = 'IDX'; //configure IOC container\n\nvar ioc = require('./util/iocContainer');\n\nioc.service('loggerFactory', function (c) {\n  return require('./util/winstonLogger');\n});\nioc.service('ehFactory', function (c) {\n  return require('./util/exceptionHandler');\n});\nioc.service('p2pServerFactory', function (c) {\n  return require('./lib/p2p/classes/SwarmP2PServer').factory;\n});\nioc.service('database', function (c) {\n  return require('./lib/database/classes/LocalJsonDb');\n});\n\nvar Server = require('./server');\n\nvar server = new Server();\nserver.run();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkxPR19UQUciLCJpb2MiLCJyZXF1aXJlIiwic2VydmljZSIsImMiLCJmYWN0b3J5IiwiU2VydmVyIiwic2VydmVyIiwicnVuIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxPQUFPLEdBQUcsS0FBaEIsQyxDQUVBOztBQUNBLElBQU1DLEdBQUcsR0FBR0MsT0FBTyxDQUFDLHFCQUFELENBQW5COztBQUNBRCxHQUFHLENBQUNFLE9BQUosQ0FBWSxlQUFaLEVBQTZCLFVBQUFDLENBQUM7QUFBQSxTQUFJRixPQUFPLENBQUMsc0JBQUQsQ0FBWDtBQUFBLENBQTlCO0FBQ0FELEdBQUcsQ0FBQ0UsT0FBSixDQUFZLFdBQVosRUFBeUIsVUFBQUMsQ0FBQztBQUFBLFNBQUlGLE9BQU8sQ0FBQyx5QkFBRCxDQUFYO0FBQUEsQ0FBMUI7QUFDQUQsR0FBRyxDQUFDRSxPQUFKLENBQVksa0JBQVosRUFBZ0MsVUFBQUMsQ0FBQztBQUFBLFNBQUdGLE9BQU8sQ0FBQyxrQ0FBRCxDQUFQLENBQTRDRyxPQUEvQztBQUFBLENBQWpDO0FBQ0FKLEdBQUcsQ0FBQ0UsT0FBSixDQUFZLFVBQVosRUFBd0IsVUFBQUMsQ0FBQztBQUFBLFNBQUdGLE9BQU8sQ0FBQyxvQ0FBRCxDQUFWO0FBQUEsQ0FBekI7O0FBRUEsSUFBTUksTUFBTSxHQUFHSixPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFFQSxJQUFNSyxNQUFNLEdBQUcsSUFBSUQsTUFBSixFQUFmO0FBQ0FDLE1BQU0sQ0FBQ0MsR0FBUCIsInNvdXJjZVJvb3QiOiIvaG9tZS9hY2VyL0Rlc2t0b3AvbWluYWNvaW4vbWluYWNvaW4vbWluYWNvaW4tc2VydmVyL3NyYyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgTE9HX1RBRyA9ICdJRFgnO1xuXG4vL2NvbmZpZ3VyZSBJT0MgY29udGFpbmVyXG5jb25zdCBpb2MgPSByZXF1aXJlKCcuL3V0aWwvaW9jQ29udGFpbmVyJyk7XG5pb2Muc2VydmljZSgnbG9nZ2VyRmFjdG9yeScsIGMgPT4gcmVxdWlyZSgnLi91dGlsL3dpbnN0b25Mb2dnZXInKSk7XG5pb2Muc2VydmljZSgnZWhGYWN0b3J5JywgYyA9PiByZXF1aXJlKCcuL3V0aWwvZXhjZXB0aW9uSGFuZGxlcicpKTtcbmlvYy5zZXJ2aWNlKCdwMnBTZXJ2ZXJGYWN0b3J5JywgYz0+IHJlcXVpcmUoJy4vbGliL3AycC9jbGFzc2VzL1N3YXJtUDJQU2VydmVyJykuZmFjdG9yeSk7XG5pb2Muc2VydmljZSgnZGF0YWJhc2UnLCBjPT4gcmVxdWlyZSgnLi9saWIvZGF0YWJhc2UvY2xhc3Nlcy9Mb2NhbEpzb25EYicpKTtcblxuY29uc3QgU2VydmVyID0gcmVxdWlyZSgnLi9zZXJ2ZXInKTtcblxuY29uc3Qgc2VydmVyID0gbmV3IFNlcnZlcigpOyBcbnNlcnZlci5ydW4oKTsgXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "LOG_TAG",
        "ioc",
        "require",
        "service",
        "c",
        "factory",
        "Server",
        "server",
        "run"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,OAAO,GAAG,KAAhB,C,CAEA;;AACA,IAAMC,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAnB;;AACAD,GAAG,CAACE,OAAJ,CAAY,eAAZ,EAA6B,UAAAC,CAAC;AAAA,SAAIF,OAAO,CAAC,sBAAD,CAAX;AAAA,CAA9B;AACAD,GAAG,CAACE,OAAJ,CAAY,WAAZ,EAAyB,UAAAC,CAAC;AAAA,SAAIF,OAAO,CAAC,yBAAD,CAAX;AAAA,CAA1B;AACAD,GAAG,CAACE,OAAJ,CAAY,kBAAZ,EAAgC,UAAAC,CAAC;AAAA,SAAGF,OAAO,CAAC,kCAAD,CAAP,CAA4CG,OAA/C;AAAA,CAAjC;AACAJ,GAAG,CAACE,OAAJ,CAAY,UAAZ,EAAwB,UAAAC,CAAC;AAAA,SAAGF,OAAO,CAAC,oCAAD,CAAV;AAAA,CAAzB;;AAEA,IAAMI,MAAM,GAAGJ,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAMK,MAAM,GAAG,IAAID,MAAJ,EAAf;AACAC,MAAM,CAACC,GAAP",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'IDX';\n\n//configure IOC container\nconst ioc = require('./util/iocContainer');\nioc.service('loggerFactory', c => require('./util/winstonLogger'));\nioc.service('ehFactory', c => require('./util/exceptionHandler'));\nioc.service('p2pServerFactory', c=> require('./lib/p2p/classes/SwarmP2PServer').factory);\nioc.service('database', c=> require('./lib/database/classes/LocalJsonDb'));\n\nconst Server = require('./server');\n\nconst server = new Server(); \nserver.run(); \n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567756681157
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/iocContainer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/iocContainer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/iocContainer.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/iocContainer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
        "sourceFileName": "iocContainer.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n/**\n * ------------------------\n * simple homemade IOC container to serve our purposes.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Container =\n/*#__PURE__*/\nfunction () {\n  function Container() {\n    _classCallCheck(this, Container);\n\n    this.services = {};\n  }\n  /**\n   * register a service by name, with the IOC container\n   *\n   * @param {string} serviceName\n   * @param {fn} callback\n   */\n\n\n  _createClass(Container, [{\n    key: \"service\",\n    value: function service(serviceName, callback) {\n      var _this = this;\n\n      Object.defineProperty(this, serviceName, {\n        get: function get() {\n          if (!_this.services.hasOwnProperty(serviceName)) {\n            _this.services[serviceName] = callback(_this);\n          }\n\n          return _this.services[serviceName];\n        },\n        configurable: true,\n        enumerable: true\n      });\n      return this;\n    }\n  }]);\n\n  return Container;\n}(); //export singleton instance\n\n\nvar container = new Container();\nmodule.exports = container;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlvY0NvbnRhaW5lci5qcyJdLCJuYW1lcyI6WyJDb250YWluZXIiLCJzZXJ2aWNlcyIsInNlcnZpY2VOYW1lIiwiY2FsbGJhY2siLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldCIsImhhc093blByb3BlcnR5IiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImNvbnRhaW5lciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBO0FBRUE7Ozs7Ozs7Ozs7Ozs7O0lBT01BLFM7OztBQUNGLHVCQUFjO0FBQUE7O0FBQ1YsU0FBS0MsUUFBTCxHQUFnQixFQUFoQjtBQUNIO0FBRUQ7Ozs7Ozs7Ozs7NEJBTVFDLFcsRUFBYUMsUSxFQUFVO0FBQUE7O0FBQzNCQyxNQUFBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0IsSUFBdEIsRUFBNEJILFdBQTVCLEVBQXlDO0FBQ3JDSSxRQUFBQSxHQUFHLEVBQUUsZUFBTTtBQUNQLGNBQUksQ0FBQyxLQUFJLENBQUNMLFFBQUwsQ0FBY00sY0FBZCxDQUE2QkwsV0FBN0IsQ0FBTCxFQUFnRDtBQUM1QyxZQUFBLEtBQUksQ0FBQ0QsUUFBTCxDQUFjQyxXQUFkLElBQTZCQyxRQUFRLENBQUMsS0FBRCxDQUFyQztBQUNIOztBQUNELGlCQUFPLEtBQUksQ0FBQ0YsUUFBTCxDQUFjQyxXQUFkLENBQVA7QUFDSCxTQU5vQztBQU9yQ00sUUFBQUEsWUFBWSxFQUFFLElBUHVCO0FBUXJDQyxRQUFBQSxVQUFVLEVBQUU7QUFSeUIsT0FBekM7QUFXQSxhQUFPLElBQVA7QUFDSDs7OztLQUdMOzs7QUFDQSxJQUFNQyxTQUFTLEdBQUcsSUFBSVYsU0FBSixFQUFsQjtBQUNBVyxNQUFNLENBQUNDLE9BQVAsR0FBaUJGLFNBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FjZXIvRGVza3RvcC9taW5hY29pbi9taW5hY29pbi9taW5hY29pbi1zZXJ2ZXIvc3JjL3V0aWwiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBzaW1wbGUgaG9tZW1hZGUgSU9DIGNvbnRhaW5lciB0byBzZXJ2ZSBvdXIgcHVycG9zZXMuXG4gKlxuICogQXV0aG9yOiBKb2huIFIuIEtvc2luc2tpXG4gKiBEYXRlOiAyNyBBdWcgMjAxOVxuICovXG5jbGFzcyBDb250YWluZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnNlcnZpY2VzID0ge307XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogcmVnaXN0ZXIgYSBzZXJ2aWNlIGJ5IG5hbWUsIHdpdGggdGhlIElPQyBjb250YWluZXJcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzZXJ2aWNlTmFtZVxuICAgICAqIEBwYXJhbSB7Zm59IGNhbGxiYWNrXG4gICAgICovXG4gICAgc2VydmljZShzZXJ2aWNlTmFtZSwgY2FsbGJhY2spIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIHNlcnZpY2VOYW1lLCB7XG4gICAgICAgICAgICBnZXQ6ICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuc2VydmljZXMuaGFzT3duUHJvcGVydHkoc2VydmljZU5hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2VydmljZXNbc2VydmljZU5hbWVdID0gY2FsbGJhY2sodGhpcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnNlcnZpY2VzW3NlcnZpY2VOYW1lXTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbn1cblxuLy9leHBvcnQgc2luZ2xldG9uIGluc3RhbmNlXG5jb25zdCBjb250YWluZXIgPSBuZXcgQ29udGFpbmVyKCk7XG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRhaW5lcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "iocContainer.js"
      ],
      "names": [
        "Container",
        "services",
        "serviceName",
        "callback",
        "Object",
        "defineProperty",
        "get",
        "hasOwnProperty",
        "configurable",
        "enumerable",
        "container",
        "module",
        "exports"
      ],
      "mappings": "AAAA;AAEA;;;;;;;;;;;;;;IAOMA,S;;;AACF,uBAAc;AAAA;;AACV,SAAKC,QAAL,GAAgB,EAAhB;AACH;AAED;;;;;;;;;;4BAMQC,W,EAAaC,Q,EAAU;AAAA;;AAC3BC,MAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4BH,WAA5B,EAAyC;AACrCI,QAAAA,GAAG,EAAE,eAAM;AACP,cAAI,CAAC,KAAI,CAACL,QAAL,CAAcM,cAAd,CAA6BL,WAA7B,CAAL,EAAgD;AAC5C,YAAA,KAAI,CAACD,QAAL,CAAcC,WAAd,IAA6BC,QAAQ,CAAC,KAAD,CAArC;AACH;;AACD,iBAAO,KAAI,CAACF,QAAL,CAAcC,WAAd,CAAP;AACH,SANoC;AAOrCM,QAAAA,YAAY,EAAE,IAPuB;AAQrCC,QAAAA,UAAU,EAAE;AARyB,OAAzC;AAWA,aAAO,IAAP;AACH;;;;KAGL;;;AACA,IAAMC,SAAS,GAAG,IAAIV,SAAJ,EAAlB;AACAW,MAAM,CAACC,OAAP,GAAiBF,SAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "sourcesContent": [
        "'use strict';\n\n/**\n * ------------------------\n * simple homemade IOC container to serve our purposes.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\nclass Container {\n    constructor() {\n        this.services = {};\n    }\n\n    /**\n     * register a service by name, with the IOC container\n     *\n     * @param {string} serviceName\n     * @param {fn} callback\n     */\n    service(serviceName, callback) {\n        Object.defineProperty(this, serviceName, {\n            get: () => {\n                if (!this.services.hasOwnProperty(serviceName)) {\n                    this.services[serviceName] = callback(this);\n                }\n                return this.services[serviceName];\n            },\n            configurable: true,\n            enumerable: true\n        });\n\n        return this;\n    }\n}\n\n//export singleton instance\nconst container = new Container();\nmodule.exports = container;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567608948870
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/server.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'SRV';\n\nvar ioc = require('./util/iocContainer'); //imports\n\n\nvar _require = require('./lib/miner'),\n    Miner = _require.Miner;\n\nvar _require2 = require('./lib/blockchain'),\n    Blockchain = _require2.Blockchain;\n\nvar _require3 = require('./lib/wallet'),\n    Wallet = _require3.Wallet,\n    TransactionPool = _require3.TransactionPool;\n\nvar _require4 = require('./httpServer'),\n    HttpServer = _require4.HttpServer;\n\nvar config = require('./config');\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n\nvar Server =\n/*#__PURE__*/\nfunction () {\n  function Server() {\n    _classCallCheck(this, Server);\n  }\n\n  _createClass(Server, [{\n    key: \"run\",\n    value: function () {\n      var _run = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return initializeBlockchain();\n\n              case 2:\n                this.blockchain = _context.sent;\n                //on blockchain changes, save to database\n                this.blockchain.on('update', function () {\n                  ioc.database.saveBlockchain(_this.blockchain);\n                }); //create instance of wallet\n\n                _context.next = 6;\n                return initializeWallet();\n\n              case 6:\n                this.wallet = _context.sent;\n                //on wallet changes, save to database\n                this.wallet.on('update replace', function () {\n                  ioc.database.saveWallet(_this.wallet);\n                }); //create transaction pool\n\n                this.txPool = new TransactionPool(); //create instance of P2P server\n\n                this.p2pServer = ioc.p2pServerFactory.createInstance(this.blockchain, this.txPool, this.wallet); //create a miner\n\n                this.miner = new Miner(this.blockchain, this.txPool, this.wallet, this.p2pServer); //create and start server\n\n                this.httpServer = new HttpServer(this.blockchain, this.wallet, this.p2pServer, this.txPool, this.miner);\n                this.httpServer.start(); //createTestChain(); \n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function run() {\n        return _run.apply(this, arguments);\n      }\n\n      return run;\n    }()\n  }]);\n\n  return Server;\n}();\n\nfunction initializeBlockchain() {\n  return _initializeBlockchain.apply(this, arguments);\n}\n\nfunction _initializeBlockchain() {\n  _initializeBlockchain = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3() {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return exception.tryAsync(\n            /*#__PURE__*/\n            _asyncToGenerator(\n            /*#__PURE__*/\n            regeneratorRuntime.mark(function _callee2() {\n              var blockchain, blockchainData;\n              return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      logger.info('initializing blockchain...');\n                      blockchain = null;\n\n                      if (!config.USE_DATABASE) {\n                        _context2.next = 7;\n                        break;\n                      }\n\n                      _context2.next = 5;\n                      return ioc.database.getBlockchain();\n\n                    case 5:\n                      blockchainData = _context2.sent;\n\n                      if (blockchainData) {\n                        blockchain = Blockchain.fromJson(blockchainData);\n                      }\n\n                    case 7:\n                      if (!blockchain) {\n                        logger.info('no blockchain found in DB; creating new one...');\n                        blockchain = new Blockchain();\n                        ioc.database.saveBlockchain(blockchain);\n                      }\n\n                      return _context2.abrupt(\"return\", blockchain);\n\n                    case 9:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            })));\n\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _initializeBlockchain.apply(this, arguments);\n}\n\nfunction initializeWallet() {\n  return _initializeWallet.apply(this, arguments);\n} //TODO: convert these to unit tests \n\n\nfunction _initializeWallet() {\n  _initializeWallet = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5() {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return exception.tryAsync(\n            /*#__PURE__*/\n            _asyncToGenerator(\n            /*#__PURE__*/\n            regeneratorRuntime.mark(function _callee4() {\n              var wallet, walletData;\n              return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      logger.info('initializing wallet...');\n                      wallet = null;\n\n                      if (!config.USE_DATABASE) {\n                        _context4.next = 7;\n                        break;\n                      }\n\n                      _context4.next = 5;\n                      return ioc.database.getWallet();\n\n                    case 5:\n                      walletData = _context4.sent;\n\n                      if (walletData) {\n                        wallet = Wallet.fromJson(walletData);\n                      }\n\n                    case 7:\n                      if (!wallet) {\n                        logger.info('no wallet found in DB; creating new one...');\n                        wallet = new Wallet();\n                        ioc.database.saveWallet(wallet);\n                      }\n\n                      return _context4.abrupt(\"return\", wallet);\n\n                    case 9:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, _callee4);\n            })));\n\n          case 2:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _initializeWallet.apply(this, arguments);\n}\n\nfunction createTestChain() {\n  return _createTestChain.apply(this, arguments);\n}\n\nfunction _createTestChain() {\n  _createTestChain = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6() {\n    var wallet1, wallet2, wallet3, blockchain, txPool, miner1, miner2, miner3, bc;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            wallet1 = new Wallet();\n            wallet2 = new Wallet();\n            wallet3 = new Wallet();\n            blockchain = new Blockchain();\n            txPool = new TransactionPool();\n            miner1 = new Miner(blockchain, txPool, wallet1);\n            miner2 = new Miner(blockchain, txPool, wallet2);\n            miner3 = new Miner(blockchain, txPool, wallet3);\n            wallet1.createTransaction(wallet2.publicKey, 10, blockchain, txPool);\n            wallet1.createTransaction(wallet3.publicKey, 10, blockchain, txPool);\n            wallet3.createTransaction(wallet2.publicKey, 100, blockchain, txPool);\n            miner1.mine();\n            wallet1.updateBalance(blockchain);\n            wallet2.updateBalance(blockchain);\n            wallet3.updateBalance(blockchain);\n            console.log('wallet 1 balance: ' + wallet1.balance);\n            console.log('wallet 2 balance: ' + wallet2.balance);\n            console.log('wallet 3 balance: ' + wallet3.balance);\n            ioc.database.saveBlockchain(blockchain);\n            _context6.t0 = Blockchain;\n            _context6.next = 22;\n            return ioc.database.getBlockchain();\n\n          case 22:\n            _context6.t1 = _context6.sent;\n            bc = _context6.t0.fromJson.call(_context6.t0, _context6.t1);\n            wallet2.createTransaction(wallet1.publicKey, 10, blockchain, txPool);\n            wallet3.createTransaction(wallet1.publicKey, 10, blockchain, txPool);\n            wallet2.createTransaction(wallet3.publicKey, 100, blockchain, txPool);\n            miner3.mine();\n            wallet1.updateBalance(blockchain);\n            wallet2.updateBalance(blockchain);\n            wallet3.updateBalance(blockchain);\n            console.log('wallet 1 balance: ' + wallet1.balance);\n            console.log('wallet 2 balance: ' + wallet2.balance);\n            console.log('wallet 3 balance: ' + wallet3.balance);\n\n          case 34:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _createTestChain.apply(this, arguments);\n}\n\nmodule.exports = Server;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "LOG_TAG",
        "ioc",
        "require",
        "Miner",
        "Blockchain",
        "Wallet",
        "TransactionPool",
        "HttpServer",
        "config",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Server",
        "initializeBlockchain",
        "blockchain",
        "on",
        "database",
        "saveBlockchain",
        "initializeWallet",
        "wallet",
        "saveWallet",
        "txPool",
        "p2pServer",
        "p2pServerFactory",
        "createInstance",
        "miner",
        "httpServer",
        "start",
        "tryAsync",
        "info",
        "USE_DATABASE",
        "getBlockchain",
        "blockchainData",
        "fromJson",
        "getWallet",
        "walletData",
        "createTestChain",
        "wallet1",
        "wallet2",
        "wallet3",
        "miner1",
        "miner2",
        "miner3",
        "createTransaction",
        "publicKey",
        "mine",
        "updateBalance",
        "console",
        "log",
        "balance",
        "bc",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,KAAhB;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAnB,C,CAEA;;;eACkBA,OAAO,CAAC,aAAD,C;IAAjBC,K,YAAAA,K;;gBACeD,OAAO,CAAC,kBAAD,C;IAAtBE,U,aAAAA,U;;gBAC4BF,OAAO,CAAC,cAAD,C;IAAnCG,M,aAAAA,M;IAAQC,e,aAAAA,e;;gBACOJ,OAAO,CAAC,cAAD,C;IAAtBK,U,aAAAA,U;;AACR,IAAMC,MAAM,GAAGN,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAMO,MAAM,GAAGR,GAAG,CAACS,aAAJ,CAAkBC,YAAlB,CAA+BX,OAA/B,CAAf;AACA,IAAMY,SAAS,GAAGX,GAAG,CAACY,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;;IAEMM,M;;;;;;;;;;;;;;;;;;;;uBAG0BC,oBAAoB,E;;;AAA5C,qBAAKC,U;AAEL;AACA,qBAAKA,UAAL,CAAgBC,EAAhB,CAAmB,QAAnB,EAA6B,YAAM;AAC/BjB,kBAAAA,GAAG,CAACkB,QAAJ,CAAaC,cAAb,CAA4B,KAAI,CAACH,UAAjC;AACH,iBAFD,E,CAIA;;;uBACoBI,gBAAgB,E;;;AAApC,qBAAKC,M;AAEL;AACA,qBAAKA,MAAL,CAAYJ,EAAZ,CAAe,gBAAf,EAAiC,YAAM;AACnCjB,kBAAAA,GAAG,CAACkB,QAAJ,CAAaI,UAAb,CAAwB,KAAI,CAACD,MAA7B;AACH,iBAFD,E,CAIA;;AACA,qBAAKE,MAAL,GAAc,IAAIlB,eAAJ,EAAd,C,CAEA;;AACA,qBAAKmB,SAAL,GAAiBxB,GAAG,CAACyB,gBAAJ,CAAqBC,cAArB,CAAoC,KAAKV,UAAzC,EAAqD,KAAKO,MAA1D,EAAkE,KAAKF,MAAvE,CAAjB,C,CAEA;;AACA,qBAAKM,KAAL,GAAa,IAAIzB,KAAJ,CAAU,KAAKc,UAAf,EAA2B,KAAKO,MAAhC,EAAwC,KAAKF,MAA7C,EAAqD,KAAKG,SAA1D,CAAb,C,CAEA;;AACA,qBAAKI,UAAL,GAAkB,IAAItB,UAAJ,CAAe,KAAKU,UAApB,EAAgC,KAAKK,MAArC,EAA6C,KAAKG,SAAlD,EAA6D,KAAKD,MAAlE,EAA0E,KAAKI,KAA/E,CAAlB;AACA,qBAAKC,UAAL,CAAgBC,KAAhB,G,CAEA;;;;;;;;;;;;;;;;;;;;;SAKOd,oB;;;;;;;0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACiBJ,SAAS,CAACmB,QAAV;AAAA;AAAA;AAAA;AAAA,oCAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BtB,sBAAAA,MAAM,CAACuB,IAAP,CAAY,4BAAZ;AAEIf,sBAAAA,UAHwB,GAGX,IAHW;;AAAA,2BAKxBT,MAAM,CAACyB,YALiB;AAAA;AAAA;AAAA;;AAAA;AAAA,6BAMGhC,GAAG,CAACkB,QAAJ,CAAae,aAAb,EANH;;AAAA;AAMpBC,sBAAAA,cANoB;;AAOxB,0BAAIA,cAAJ,EAAoB;AAChBlB,wBAAAA,UAAU,GAAGb,UAAU,CAACgC,QAAX,CAAoBD,cAApB,CAAb;AACH;;AATuB;AAY5B,0BAAI,CAAClB,UAAL,EAAiB;AACbR,wBAAAA,MAAM,CAACuB,IAAP,CAAY,gDAAZ;AACAf,wBAAAA,UAAU,GAAG,IAAIb,UAAJ,EAAb;AACAH,wBAAAA,GAAG,CAACkB,QAAJ,CAAaC,cAAb,CAA4BH,UAA5B;AACH;;AAhB2B,wDAkBrBA,UAlBqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAnB,GADjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAuBeI,gB;;EAuBf;;;;;;0BAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACiBT,SAAS,CAACmB,QAAV;AAAA;AAAA;AAAA;AAAA,oCAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BtB,sBAAAA,MAAM,CAACuB,IAAP,CAAY,wBAAZ;AAEIV,sBAAAA,MAHwB,GAGf,IAHe;;AAAA,2BAKxBd,MAAM,CAACyB,YALiB;AAAA;AAAA;AAAA;;AAAA;AAAA,6BAMDhC,GAAG,CAACkB,QAAJ,CAAakB,SAAb,EANC;;AAAA;AAMpBC,sBAAAA,UANoB;;AAOxB,0BAAIA,UAAJ,EAAgB;AACZhB,wBAAAA,MAAM,GAAGjB,MAAM,CAAC+B,QAAP,CAAgBE,UAAhB,CAAT;AACH;;AATuB;AAY5B,0BAAI,CAAChB,MAAL,EAAa;AACTb,wBAAAA,MAAM,CAACuB,IAAP,CAAY,4CAAZ;AACAV,wBAAAA,MAAM,GAAG,IAAIjB,MAAJ,EAAT;AACAJ,wBAAAA,GAAG,CAACkB,QAAJ,CAAaI,UAAb,CAAwBD,MAAxB;AACH;;AAhB2B,wDAkBrBA,MAlBqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAnB,GADjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAwBeiB,e;;;;;;;0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,YAAAA,OADV,GACoB,IAAInC,MAAJ,EADpB;AAEUoC,YAAAA,OAFV,GAEoB,IAAIpC,MAAJ,EAFpB;AAGUqC,YAAAA,OAHV,GAGoB,IAAIrC,MAAJ,EAHpB;AAKUY,YAAAA,UALV,GAKuB,IAAIb,UAAJ,EALvB;AAMUoB,YAAAA,MANV,GAMmB,IAAIlB,eAAJ,EANnB;AAQUqC,YAAAA,MARV,GAQmB,IAAIxC,KAAJ,CAAUc,UAAV,EAAsBO,MAAtB,EAA8BgB,OAA9B,CARnB;AASUI,YAAAA,MATV,GASmB,IAAIzC,KAAJ,CAAUc,UAAV,EAAsBO,MAAtB,EAA8BiB,OAA9B,CATnB;AAUUI,YAAAA,MAVV,GAUmB,IAAI1C,KAAJ,CAAUc,UAAV,EAAsBO,MAAtB,EAA8BkB,OAA9B,CAVnB;AAYIF,YAAAA,OAAO,CAACM,iBAAR,CAA0BL,OAAO,CAACM,SAAlC,EAA6C,EAA7C,EAAiD9B,UAAjD,EAA6DO,MAA7D;AACAgB,YAAAA,OAAO,CAACM,iBAAR,CAA0BJ,OAAO,CAACK,SAAlC,EAA6C,EAA7C,EAAiD9B,UAAjD,EAA6DO,MAA7D;AACAkB,YAAAA,OAAO,CAACI,iBAAR,CAA0BL,OAAO,CAACM,SAAlC,EAA6C,GAA7C,EAAkD9B,UAAlD,EAA8DO,MAA9D;AAEAmB,YAAAA,MAAM,CAACK,IAAP;AAEAR,YAAAA,OAAO,CAACS,aAAR,CAAsBhC,UAAtB;AACAwB,YAAAA,OAAO,CAACQ,aAAR,CAAsBhC,UAAtB;AACAyB,YAAAA,OAAO,CAACO,aAAR,CAAsBhC,UAAtB;AAEAiC,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBX,OAAO,CAACY,OAA3C;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBV,OAAO,CAACW,OAA3C;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBT,OAAO,CAACU,OAA3C;AAEAnD,YAAAA,GAAG,CAACkB,QAAJ,CAAaC,cAAb,CAA4BH,UAA5B;AA1BJ,2BA2Beb,UA3Bf;AAAA;AAAA,mBA2ByCH,GAAG,CAACkB,QAAJ,CAAae,aAAb,EA3BzC;;AAAA;AAAA;AA2BUmB,YAAAA,EA3BV,gBA2B0BjB,QA3B1B;AA6BIK,YAAAA,OAAO,CAACK,iBAAR,CAA0BN,OAAO,CAACO,SAAlC,EAA6C,EAA7C,EAAiD9B,UAAjD,EAA6DO,MAA7D;AACAkB,YAAAA,OAAO,CAACI,iBAAR,CAA0BN,OAAO,CAACO,SAAlC,EAA6C,EAA7C,EAAiD9B,UAAjD,EAA6DO,MAA7D;AACAiB,YAAAA,OAAO,CAACK,iBAAR,CAA0BJ,OAAO,CAACK,SAAlC,EAA6C,GAA7C,EAAkD9B,UAAlD,EAA8DO,MAA9D;AAEAqB,YAAAA,MAAM,CAACG,IAAP;AAEAR,YAAAA,OAAO,CAACS,aAAR,CAAsBhC,UAAtB;AACAwB,YAAAA,OAAO,CAACQ,aAAR,CAAsBhC,UAAtB;AACAyB,YAAAA,OAAO,CAACO,aAAR,CAAsBhC,UAAtB;AAEAiC,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBX,OAAO,CAACY,OAA3C;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBV,OAAO,CAACW,OAA3C;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBT,OAAO,CAACU,OAA3C;;AAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA6CAE,MAAM,CAACC,OAAP,GAAiBxC,MAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'SRV';\n\nconst ioc = require('./util/iocContainer');\n\n//imports\nconst { Miner } = require('./lib/miner');\nconst { Blockchain } = require('./lib/blockchain');\nconst { Wallet, TransactionPool } = require('./lib/wallet');\nconst { HttpServer } = require('./httpServer');\nconst config = require('./config');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\nclass Server {\n    async run() {\n        //create instance of blockchain\n        this.blockchain = await initializeBlockchain();\n    \n        //on blockchain changes, save to database\n        this.blockchain.on('update', () => {\n            ioc.database.saveBlockchain(this.blockchain);\n        });\n    \n        //create instance of wallet\n        this.wallet = await initializeWallet();\n    \n        //on wallet changes, save to database\n        this.wallet.on('update replace', () => {\n            ioc.database.saveWallet(this.wallet);\n        });\n    \n        //create transaction pool\n        this.txPool = new TransactionPool();\n    \n        //create instance of P2P server\n        this.p2pServer = ioc.p2pServerFactory.createInstance(this.blockchain, this.txPool, this.wallet);\n    \n        //create a miner\n        this.miner = new Miner(this.blockchain, this.txPool, this.wallet, this.p2pServer);\n    \n        //create and start server\n        this.httpServer = new HttpServer(this.blockchain, this.wallet, this.p2pServer, this.txPool, this.miner);\n        this.httpServer.start();\n        \n        //createTestChain(); \n    }\n}\n\n\nasync function initializeBlockchain() {\n    return await exception.tryAsync(async () => {\n        logger.info('initializing blockchain...');\n\n        let blockchain = null;\n\n        if (config.USE_DATABASE) {\n            let blockchainData = await ioc.database.getBlockchain();\n            if (blockchainData) {\n                blockchain = Blockchain.fromJson(blockchainData);\n            }\n        }\n\n        if (!blockchain) {\n            logger.info('no blockchain found in DB; creating new one...')\n            blockchain = new Blockchain();\n            ioc.database.saveBlockchain(blockchain);\n        }\n\n        return blockchain;\n    });\n}\n\nasync function initializeWallet() {\n    return await exception.tryAsync(async () => {\n        logger.info('initializing wallet...');\n\n        let wallet = null;\n\n        if (config.USE_DATABASE) {\n            let walletData = await ioc.database.getWallet();\n            if (walletData) {\n                wallet = Wallet.fromJson(walletData);\n            }\n        }\n\n        if (!wallet) {\n            logger.info('no wallet found in DB; creating new one...')\n            wallet = new Wallet();\n            ioc.database.saveWallet(wallet);\n        }\n\n        return wallet;\n    });\n}\n\n//TODO: convert these to unit tests \nasync function createTestChain() {\n    const wallet1 = new Wallet(); \n    const wallet2 = new Wallet(); \n    const wallet3 = new Wallet(); \n    \n    const blockchain = new Blockchain(); \n    const txPool = new TransactionPool(); \n\n    const miner1 = new Miner(blockchain, txPool, wallet1); \n    const miner2 = new Miner(blockchain, txPool, wallet2); \n    const miner3 = new Miner(blockchain, txPool, wallet3); \n    \n    wallet1.createTransaction(wallet2.publicKey, 10, blockchain, txPool); \n    wallet1.createTransaction(wallet3.publicKey, 10, blockchain, txPool); \n    wallet3.createTransaction(wallet2.publicKey, 100, blockchain, txPool);     \n    \n    miner1.mine(); \n    \n    wallet1.updateBalance(blockchain);\n    wallet2.updateBalance(blockchain);\n    wallet3.updateBalance(blockchain);\n    \n    console.log('wallet 1 balance: ' + wallet1.balance);\n    console.log('wallet 2 balance: ' + wallet2.balance);\n    console.log('wallet 3 balance: ' + wallet3.balance);\n    \n    ioc.database.saveBlockchain(blockchain); \n    const bc = Blockchain.fromJson(await ioc.database.getBlockchain()); \n    \n    wallet2.createTransaction(wallet1.publicKey, 10, blockchain, txPool); \n    wallet3.createTransaction(wallet1.publicKey, 10, blockchain, txPool); \n    wallet2.createTransaction(wallet3.publicKey, 100, blockchain, txPool);     \n    \n    miner3.mine();\n    \n    wallet1.updateBalance(blockchain);\n    wallet2.updateBalance(blockchain);\n    wallet3.updateBalance(blockchain);\n    \n    console.log('wallet 1 balance: ' + wallet1.balance);\n    console.log('wallet 2 balance: ' + wallet2.balance);\n    console.log('wallet 3 balance: ' + wallet3.balance);\n}\n\n\nmodule.exports = Server;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567756666452
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/index.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar Miner = require('./classes/Miner');\n\nmodule.exports = {\n  Miner: Miner\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIk1pbmVyIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLGlCQUFELENBQXJCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkgsRUFBQUEsS0FBSyxFQUFMQTtBQURhLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FjZXIvRGVza3RvcC9taW5hY29pbi9taW5hY29pbi9taW5hY29pbi1zZXJ2ZXIvc3JjL2xpYi9taW5lciIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgTWluZXIgPSByZXF1aXJlKCcuL2NsYXNzZXMvTWluZXInKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgTWluZXJcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Miner",
        "require",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,iBAAD,CAArB;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACbH,EAAAA,KAAK,EAALA;AADa,CAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner",
      "sourcesContent": [
        "'use strict';\n\nconst Miner = require('./classes/Miner');\n\nmodule.exports = {\n    Miner\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1567354906401
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes/Miner.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes/Miner.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes/Miner.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes/Miner.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes",
        "sourceFileName": "Miner.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'MNR';\n\nvar ioc = require('../../../util/iocContainer');\n\nvar _require = require('../../wallet'),\n    Transaction = _require.Transaction,\n    Wallet = _require.Wallet;\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: Miner\n * ---------------\n * handles mining new coins \n *\n * author: John R. Kosinski\n */\n\nvar Miner =\n/*#__PURE__*/\nfunction () {\n  _createClass(Miner, [{\n    key: \"blockchain\",\n    get: function get() {\n      return this._blockchain;\n    }\n  }, {\n    key: \"transactionPool\",\n    get: function get() {\n      return this._transactionPool;\n    }\n  }, {\n    key: \"wallet\",\n    get: function get() {\n      return this._wallet;\n    }\n  }, {\n    key: \"p2pServer\",\n    get: function get() {\n      return this._p2pServer;\n    }\n    /**\n     * constructor \n     * @param {Blockchain} blockchain \n     * @param {TransactionPool} transactionPool \n     * @param {Wallet} wallet \n     * @param {IP2PServer} p2pServer \n     */\n\n  }]);\n\n  function Miner(blockchain, transactionPool, wallet, p2pServer) {\n    _classCallCheck(this, Miner);\n\n    this._blockchain = blockchain;\n    this._transactionPool = transactionPool;\n    this._wallet = wallet;\n    this._p2pServer = p2pServer;\n  }\n  /**\n   * selects transactions from the transaction pool to add to a new block, creates \n   * & adds the new block to the blockchain, and returns the new block. \n   * @returns {Block}\n   */\n\n  /*Block*/\n\n\n  _createClass(Miner, [{\n    key: \"mine\",\n    value: function mine() {\n      var _this = this;\n\n      return exception[\"try\"](function () {\n        //get transactions from transaction pool\n        var validTransactions = _this.transactionPool.validTransactions();\n\n        if (validTransactions && validTransactions.length > 0) {\n          //add a reward for self\n          validTransactions.push(Transaction.rewardTransaction(_this.wallet, Wallet.blockchainWallet())); //add them into a block\n\n          var block = _this.blockchain.addBlock(validTransactions);\n\n          if (block) {\n            //sync the chain\n            if (_this.p2pServer) {\n              _this.p2pServer.syncChain();\n            } //clear the transaction pool\n\n\n            _this.transactionPool.clear(); //broadcast directive to clear transaction pool\n\n\n            if (_this.p2pServer) {\n              _this.p2pServer.broadcastClearTransactions();\n            }\n          } else {\n            //clear the transaction pool; maybe we have an old or corrupt pool\n            _this.transactionPool.clear();\n          }\n\n          return block;\n        } else {\n          logger.info('no valid transactions available to mine');\n          return null;\n        }\n      });\n    }\n  }]);\n\n  return Miner;\n}();\n\nmodule.exports = Miner;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1pbmVyLmpzIl0sIm5hbWVzIjpbIkxPR19UQUciLCJpb2MiLCJyZXF1aXJlIiwiVHJhbnNhY3Rpb24iLCJXYWxsZXQiLCJsb2dnZXIiLCJsb2dnZXJGYWN0b3J5IiwiY3JlYXRlTG9nZ2VyIiwiZXhjZXB0aW9uIiwiZWhGYWN0b3J5IiwiY3JlYXRlSGFuZGxlciIsIk1pbmVyIiwiX2Jsb2NrY2hhaW4iLCJfdHJhbnNhY3Rpb25Qb29sIiwiX3dhbGxldCIsIl9wMnBTZXJ2ZXIiLCJibG9ja2NoYWluIiwidHJhbnNhY3Rpb25Qb29sIiwid2FsbGV0IiwicDJwU2VydmVyIiwidmFsaWRUcmFuc2FjdGlvbnMiLCJsZW5ndGgiLCJwdXNoIiwicmV3YXJkVHJhbnNhY3Rpb24iLCJibG9ja2NoYWluV2FsbGV0IiwiYmxvY2siLCJhZGRCbG9jayIsInN5bmNDaGFpbiIsImNsZWFyIiwiYnJvYWRjYXN0Q2xlYXJUcmFuc2FjdGlvbnMiLCJpbmZvIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBRUEsSUFBTUEsT0FBTyxHQUFHLEtBQWhCOztBQUVBLElBQU1DLEdBQUcsR0FBR0MsT0FBTyxDQUFDLDRCQUFELENBQW5COztlQUNnQ0EsT0FBTyxDQUFDLGNBQUQsQztJQUEvQkMsVyxZQUFBQSxXO0lBQWFDLE0sWUFBQUEsTTs7QUFFckIsSUFBTUMsTUFBTSxHQUFHSixHQUFHLENBQUNLLGFBQUosQ0FBa0JDLFlBQWxCLENBQStCUCxPQUEvQixDQUFmO0FBQ0EsSUFBTVEsU0FBUyxHQUFHUCxHQUFHLENBQUNRLFNBQUosQ0FBY0MsYUFBZCxDQUE0QkwsTUFBNUIsQ0FBbEI7QUFFQTs7Ozs7Ozs7SUFPTU0sSzs7Ozs7d0JBQ2U7QUFBRSxhQUFPLEtBQUtDLFdBQVo7QUFBMEI7Ozt3QkFDdkI7QUFBRSxhQUFPLEtBQUtDLGdCQUFaO0FBQStCOzs7d0JBQzFDO0FBQUUsYUFBTyxLQUFLQyxPQUFaO0FBQXNCOzs7d0JBQ3JCO0FBQUUsYUFBTyxLQUFLQyxVQUFaO0FBQXlCO0FBRTNDOzs7Ozs7Ozs7O0FBT0EsaUJBQVlDLFVBQVosRUFBd0JDLGVBQXhCLEVBQXlDQyxNQUF6QyxFQUFpREMsU0FBakQsRUFBNEQ7QUFBQTs7QUFDeEQsU0FBS1AsV0FBTCxHQUFtQkksVUFBbkI7QUFDQSxTQUFLSCxnQkFBTCxHQUF3QkksZUFBeEI7QUFDQSxTQUFLSCxPQUFMLEdBQWVJLE1BQWY7QUFDQSxTQUFLSCxVQUFMLEdBQWtCSSxTQUFsQjtBQUNIO0FBRUQ7Ozs7OztBQUtBOzs7OzsyQkFBaUI7QUFBQTs7QUFDYixhQUFPWCxTQUFTLE9BQVQsQ0FBYyxZQUFNO0FBQ3ZCO0FBQ0EsWUFBTVksaUJBQWlCLEdBQUcsS0FBSSxDQUFDSCxlQUFMLENBQXFCRyxpQkFBckIsRUFBMUI7O0FBRUEsWUFBSUEsaUJBQWlCLElBQUlBLGlCQUFpQixDQUFDQyxNQUFsQixHQUEyQixDQUFwRCxFQUF3RDtBQUNwRDtBQUNBRCxVQUFBQSxpQkFBaUIsQ0FBQ0UsSUFBbEIsQ0FBdUJuQixXQUFXLENBQUNvQixpQkFBWixDQUE4QixLQUFJLENBQUNMLE1BQW5DLEVBQTJDZCxNQUFNLENBQUNvQixnQkFBUCxFQUEzQyxDQUF2QixFQUZvRCxDQUlwRDs7QUFDQSxjQUFNQyxLQUFLLEdBQUcsS0FBSSxDQUFDVCxVQUFMLENBQWdCVSxRQUFoQixDQUF5Qk4saUJBQXpCLENBQWQ7O0FBRUEsY0FBSUssS0FBSixFQUFXO0FBQ1A7QUFDQSxnQkFBSSxLQUFJLENBQUNOLFNBQVQsRUFBb0I7QUFDaEIsY0FBQSxLQUFJLENBQUNBLFNBQUwsQ0FBZVEsU0FBZjtBQUNILGFBSk0sQ0FNUDs7O0FBQ0EsWUFBQSxLQUFJLENBQUNWLGVBQUwsQ0FBcUJXLEtBQXJCLEdBUE8sQ0FTUDs7O0FBQ0EsZ0JBQUksS0FBSSxDQUFDVCxTQUFULEVBQW9CO0FBQ2hCLGNBQUEsS0FBSSxDQUFDQSxTQUFMLENBQWVVLDBCQUFmO0FBQ0g7QUFDSixXQWJELE1BY0s7QUFDRDtBQUNBLFlBQUEsS0FBSSxDQUFDWixlQUFMLENBQXFCVyxLQUFyQjtBQUNIOztBQUVELGlCQUFPSCxLQUFQO0FBQ0gsU0EzQkQsTUE0Qks7QUFDRHBCLFVBQUFBLE1BQU0sQ0FBQ3lCLElBQVAsQ0FBWSx5Q0FBWjtBQUNBLGlCQUFPLElBQVA7QUFDSDtBQUNKLE9BcENNLENBQVA7QUFxQ0g7Ozs7OztBQUdMQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJyQixLQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9hY2VyL0Rlc2t0b3AvbWluYWNvaW4vbWluYWNvaW4vbWluYWNvaW4tc2VydmVyL3NyYy9saWIvbWluZXIvY2xhc3NlcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgTE9HX1RBRyA9ICdNTlInO1xuXG5jb25zdCBpb2MgPSByZXF1aXJlKCcuLi8uLi8uLi91dGlsL2lvY0NvbnRhaW5lcicpO1xuY29uc3QgeyBUcmFuc2FjdGlvbiwgV2FsbGV0IH0gPSByZXF1aXJlKCcuLi8uLi93YWxsZXQnKTtcblxuY29uc3QgbG9nZ2VyID0gaW9jLmxvZ2dlckZhY3RvcnkuY3JlYXRlTG9nZ2VyKExPR19UQUcpO1xuY29uc3QgZXhjZXB0aW9uID0gaW9jLmVoRmFjdG9yeS5jcmVhdGVIYW5kbGVyKGxvZ2dlcik7XG5cbi8qKlxuICogbWluYWNvaW46IE1pbmVyXG4gKiAtLS0tLS0tLS0tLS0tLS1cbiAqIGhhbmRsZXMgbWluaW5nIG5ldyBjb2lucyBcbiAqXG4gKiBhdXRob3I6IEpvaG4gUi4gS29zaW5za2lcbiAqL1xuY2xhc3MgTWluZXIge1xuICAgIGdldCBibG9ja2NoYWluKCkgeyByZXR1cm4gdGhpcy5fYmxvY2tjaGFpbjsgfVxuICAgIGdldCB0cmFuc2FjdGlvblBvb2woKSB7IHJldHVybiB0aGlzLl90cmFuc2FjdGlvblBvb2w7IH1cbiAgICBnZXQgd2FsbGV0KCkgeyByZXR1cm4gdGhpcy5fd2FsbGV0OyB9XG4gICAgZ2V0IHAycFNlcnZlcigpIHsgcmV0dXJuIHRoaXMuX3AycFNlcnZlcjsgfVxuXG4gICAgLyoqXG4gICAgICogY29uc3RydWN0b3IgXG4gICAgICogQHBhcmFtIHtCbG9ja2NoYWlufSBibG9ja2NoYWluIFxuICAgICAqIEBwYXJhbSB7VHJhbnNhY3Rpb25Qb29sfSB0cmFuc2FjdGlvblBvb2wgXG4gICAgICogQHBhcmFtIHtXYWxsZXR9IHdhbGxldCBcbiAgICAgKiBAcGFyYW0ge0lQMlBTZXJ2ZXJ9IHAycFNlcnZlciBcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihibG9ja2NoYWluLCB0cmFuc2FjdGlvblBvb2wsIHdhbGxldCwgcDJwU2VydmVyKSB7XG4gICAgICAgIHRoaXMuX2Jsb2NrY2hhaW4gPSBibG9ja2NoYWluO1xuICAgICAgICB0aGlzLl90cmFuc2FjdGlvblBvb2wgPSB0cmFuc2FjdGlvblBvb2w7XG4gICAgICAgIHRoaXMuX3dhbGxldCA9IHdhbGxldDtcbiAgICAgICAgdGhpcy5fcDJwU2VydmVyID0gcDJwU2VydmVyO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHNlbGVjdHMgdHJhbnNhY3Rpb25zIGZyb20gdGhlIHRyYW5zYWN0aW9uIHBvb2wgdG8gYWRkIHRvIGEgbmV3IGJsb2NrLCBjcmVhdGVzIFxuICAgICAqICYgYWRkcyB0aGUgbmV3IGJsb2NrIHRvIHRoZSBibG9ja2NoYWluLCBhbmQgcmV0dXJucyB0aGUgbmV3IGJsb2NrLiBcbiAgICAgKiBAcmV0dXJucyB7QmxvY2t9XG4gICAgICovXG4gICAgLypCbG9jayovIG1pbmUoKSB7XG4gICAgICAgIHJldHVybiBleGNlcHRpb24udHJ5KCgpID0+IHtcbiAgICAgICAgICAgIC8vZ2V0IHRyYW5zYWN0aW9ucyBmcm9tIHRyYW5zYWN0aW9uIHBvb2xcbiAgICAgICAgICAgIGNvbnN0IHZhbGlkVHJhbnNhY3Rpb25zID0gdGhpcy50cmFuc2FjdGlvblBvb2wudmFsaWRUcmFuc2FjdGlvbnMoKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKHZhbGlkVHJhbnNhY3Rpb25zICYmIHZhbGlkVHJhbnNhY3Rpb25zLmxlbmd0aCA+IDApICB7XG4gICAgICAgICAgICAgICAgLy9hZGQgYSByZXdhcmQgZm9yIHNlbGZcbiAgICAgICAgICAgICAgICB2YWxpZFRyYW5zYWN0aW9ucy5wdXNoKFRyYW5zYWN0aW9uLnJld2FyZFRyYW5zYWN0aW9uKHRoaXMud2FsbGV0LCBXYWxsZXQuYmxvY2tjaGFpbldhbGxldCgpKSk7XG4gICAgXG4gICAgICAgICAgICAgICAgLy9hZGQgdGhlbSBpbnRvIGEgYmxvY2tcbiAgICAgICAgICAgICAgICBjb25zdCBibG9jayA9IHRoaXMuYmxvY2tjaGFpbi5hZGRCbG9jayh2YWxpZFRyYW5zYWN0aW9ucyk7XG4gICAgXG4gICAgICAgICAgICAgICAgaWYgKGJsb2NrKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vc3luYyB0aGUgY2hhaW5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMucDJwU2VydmVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnAycFNlcnZlci5zeW5jQ2hhaW4oKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLy9jbGVhciB0aGUgdHJhbnNhY3Rpb24gcG9vbFxuICAgICAgICAgICAgICAgICAgICB0aGlzLnRyYW5zYWN0aW9uUG9vbC5jbGVhcigpO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLy9icm9hZGNhc3QgZGlyZWN0aXZlIHRvIGNsZWFyIHRyYW5zYWN0aW9uIHBvb2xcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMucDJwU2VydmVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnAycFNlcnZlci5icm9hZGNhc3RDbGVhclRyYW5zYWN0aW9ucygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAvL2NsZWFyIHRoZSB0cmFuc2FjdGlvbiBwb29sOyBtYXliZSB3ZSBoYXZlIGFuIG9sZCBvciBjb3JydXB0IHBvb2xcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50cmFuc2FjdGlvblBvb2wuY2xlYXIoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICAgICAgcmV0dXJuIGJsb2NrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbG9nZ2VyLmluZm8oJ25vIHZhbGlkIHRyYW5zYWN0aW9ucyBhdmFpbGFibGUgdG8gbWluZScpOyBcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDsgXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBNaW5lcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Miner.js"
      ],
      "names": [
        "LOG_TAG",
        "ioc",
        "require",
        "Transaction",
        "Wallet",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Miner",
        "_blockchain",
        "_transactionPool",
        "_wallet",
        "_p2pServer",
        "blockchain",
        "transactionPool",
        "wallet",
        "p2pServer",
        "validTransactions",
        "length",
        "push",
        "rewardTransaction",
        "blockchainWallet",
        "block",
        "addBlock",
        "syncChain",
        "clear",
        "broadcastClearTransactions",
        "info",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAG,KAAhB;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,4BAAD,CAAnB;;eACgCA,OAAO,CAAC,cAAD,C;IAA/BC,W,YAAAA,W;IAAaC,M,YAAAA,M;;AAErB,IAAMC,MAAM,GAAGJ,GAAG,CAACK,aAAJ,CAAkBC,YAAlB,CAA+BP,OAA/B,CAAf;AACA,IAAMQ,SAAS,GAAGP,GAAG,CAACQ,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;IAOMM,K;;;;;wBACe;AAAE,aAAO,KAAKC,WAAZ;AAA0B;;;wBACvB;AAAE,aAAO,KAAKC,gBAAZ;AAA+B;;;wBAC1C;AAAE,aAAO,KAAKC,OAAZ;AAAsB;;;wBACrB;AAAE,aAAO,KAAKC,UAAZ;AAAyB;AAE3C;;;;;;;;;;AAOA,iBAAYC,UAAZ,EAAwBC,eAAxB,EAAyCC,MAAzC,EAAiDC,SAAjD,EAA4D;AAAA;;AACxD,SAAKP,WAAL,GAAmBI,UAAnB;AACA,SAAKH,gBAAL,GAAwBI,eAAxB;AACA,SAAKH,OAAL,GAAeI,MAAf;AACA,SAAKH,UAAL,GAAkBI,SAAlB;AACH;AAED;;;;;;AAKA;;;;;2BAAiB;AAAA;;AACb,aAAOX,SAAS,OAAT,CAAc,YAAM;AACvB;AACA,YAAMY,iBAAiB,GAAG,KAAI,CAACH,eAAL,CAAqBG,iBAArB,EAA1B;;AAEA,YAAIA,iBAAiB,IAAIA,iBAAiB,CAACC,MAAlB,GAA2B,CAApD,EAAwD;AACpD;AACAD,UAAAA,iBAAiB,CAACE,IAAlB,CAAuBnB,WAAW,CAACoB,iBAAZ,CAA8B,KAAI,CAACL,MAAnC,EAA2Cd,MAAM,CAACoB,gBAAP,EAA3C,CAAvB,EAFoD,CAIpD;;AACA,cAAMC,KAAK,GAAG,KAAI,CAACT,UAAL,CAAgBU,QAAhB,CAAyBN,iBAAzB,CAAd;;AAEA,cAAIK,KAAJ,EAAW;AACP;AACA,gBAAI,KAAI,CAACN,SAAT,EAAoB;AAChB,cAAA,KAAI,CAACA,SAAL,CAAeQ,SAAf;AACH,aAJM,CAMP;;;AACA,YAAA,KAAI,CAACV,eAAL,CAAqBW,KAArB,GAPO,CASP;;;AACA,gBAAI,KAAI,CAACT,SAAT,EAAoB;AAChB,cAAA,KAAI,CAACA,SAAL,CAAeU,0BAAf;AACH;AACJ,WAbD,MAcK;AACD;AACA,YAAA,KAAI,CAACZ,eAAL,CAAqBW,KAArB;AACH;;AAED,iBAAOH,KAAP;AACH,SA3BD,MA4BK;AACDpB,UAAAA,MAAM,CAACyB,IAAP,CAAY,yCAAZ;AACA,iBAAO,IAAP;AACH;AACJ,OApCM,CAAP;AAqCH;;;;;;AAGLC,MAAM,CAACC,OAAP,GAAiBrB,KAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/miner/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'MNR';\n\nconst ioc = require('../../../util/iocContainer');\nconst { Transaction, Wallet } = require('../../wallet');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: Miner\n * ---------------\n * handles mining new coins \n *\n * author: John R. Kosinski\n */\nclass Miner {\n    get blockchain() { return this._blockchain; }\n    get transactionPool() { return this._transactionPool; }\n    get wallet() { return this._wallet; }\n    get p2pServer() { return this._p2pServer; }\n\n    /**\n     * constructor \n     * @param {Blockchain} blockchain \n     * @param {TransactionPool} transactionPool \n     * @param {Wallet} wallet \n     * @param {IP2PServer} p2pServer \n     */\n    constructor(blockchain, transactionPool, wallet, p2pServer) {\n        this._blockchain = blockchain;\n        this._transactionPool = transactionPool;\n        this._wallet = wallet;\n        this._p2pServer = p2pServer;\n    }\n\n    /**\n     * selects transactions from the transaction pool to add to a new block, creates \n     * & adds the new block to the blockchain, and returns the new block. \n     * @returns {Block}\n     */\n    /*Block*/ mine() {\n        return exception.try(() => {\n            //get transactions from transaction pool\n            const validTransactions = this.transactionPool.validTransactions();\n            \n            if (validTransactions && validTransactions.length > 0)  {\n                //add a reward for self\n                validTransactions.push(Transaction.rewardTransaction(this.wallet, Wallet.blockchainWallet()));\n    \n                //add them into a block\n                const block = this.blockchain.addBlock(validTransactions);\n    \n                if (block) {\n                    //sync the chain\n                    if (this.p2pServer) {\n                        this.p2pServer.syncChain();\n                    }\n        \n                    //clear the transaction pool\n                    this.transactionPool.clear();\n        \n                    //broadcast directive to clear transaction pool\n                    if (this.p2pServer) {\n                        this.p2pServer.broadcastClearTransactions();\n                    }\n                }\n                else {\n                    //clear the transaction pool; maybe we have an old or corrupt pool\n                    this.transactionPool.clear();\n                }\n    \n                return block;\n            }\n            else {\n                logger.info('no valid transactions available to mine'); \n                return null; \n            }\n        });\n    }\n}\n\nmodule.exports = Miner;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567678203299
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/index.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar Transaction = require('./classes/Transaction');\n\nvar TransactionPool = require('./classes/TransactionPool');\n\nvar Wallet = require('./classes/Wallet');\n\nmodule.exports = {\n  Transaction: Transaction,\n  TransactionPool: TransactionPool,\n  Wallet: Wallet\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlRyYW5zYWN0aW9uIiwicmVxdWlyZSIsIlRyYW5zYWN0aW9uUG9vbCIsIldhbGxldCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLFdBQVcsR0FBR0MsT0FBTyxDQUFDLHVCQUFELENBQTNCOztBQUNBLElBQU1DLGVBQWUsR0FBR0QsT0FBTyxDQUFDLDJCQUFELENBQS9COztBQUNBLElBQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLGtCQUFELENBQXRCOztBQUVBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkwsRUFBQUEsV0FBVyxFQUFYQSxXQURhO0FBRWJFLEVBQUFBLGVBQWUsRUFBZkEsZUFGYTtBQUdiQyxFQUFBQSxNQUFNLEVBQU5BO0FBSGEsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21pbmFjb2luL21pbmFjb2luLXNlcnZlci9zcmMvbGliL3dhbGxldCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgVHJhbnNhY3Rpb24gPSByZXF1aXJlKCcuL2NsYXNzZXMvVHJhbnNhY3Rpb24nKTtcbmNvbnN0IFRyYW5zYWN0aW9uUG9vbCA9IHJlcXVpcmUoJy4vY2xhc3Nlcy9UcmFuc2FjdGlvblBvb2wnKTtcbmNvbnN0IFdhbGxldCA9IHJlcXVpcmUoJy4vY2xhc3Nlcy9XYWxsZXQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgVHJhbnNhY3Rpb24sXG4gICAgVHJhbnNhY3Rpb25Qb29sLFxuICAgIFdhbGxldFxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Transaction",
        "require",
        "TransactionPool",
        "Wallet",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,WAAW,GAAGC,OAAO,CAAC,uBAAD,CAA3B;;AACA,IAAMC,eAAe,GAAGD,OAAO,CAAC,2BAAD,CAA/B;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,kBAAD,CAAtB;;AAEAG,MAAM,CAACC,OAAP,GAAiB;AACbL,EAAAA,WAAW,EAAXA,WADa;AAEbE,EAAAA,eAAe,EAAfA,eAFa;AAGbC,EAAAA,MAAM,EAANA;AAHa,CAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet",
      "sourcesContent": [
        "'use strict';\n\nconst Transaction = require('./classes/Transaction');\nconst TransactionPool = require('./classes/TransactionPool');\nconst Wallet = require('./classes/Wallet');\n\nmodule.exports = {\n    Transaction,\n    TransactionPool,\n    Wallet\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1567269278063
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Transaction.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Transaction.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Transaction.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Transaction.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
        "sourceFileName": "Transaction.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'TRNS';\n\nvar cryptoUtil = require('../../../util/cryptoUtil');\n\nvar ioc = require('../../../util/iocContainer');\n\nvar _require = require('../../../config'),\n    MINING_REWARD = _require.MINING_REWARD;\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: Transaction\n * ---------------------\n * a transaction consists of one input and two outputs. The first output goes to the\n * recipient; the second output sends the change back to the sender. The sender's entire\n * wallet balance is the input to the transaction, the actual sent amount is the first\n * output (to the recipient), and the remainder is in the second output back to the sender.\n * \n * Input format: {\n *      timestamp: <int>,  //datetime in ms\n *      amount: <float>,   //full amount of sender's wallet\n *      address: <string>, //public key of sender wallet\n *      signature: <EC.Signature> //cryptographic signature of transaction \n * }\n * \n * Output format: {\n *      amount: <float>,   //amount to send to address\n *      address: <string>, //public key of recipient wallet\n * }\n *\n * author: John R. Kosinski\n */\n\nvar Transaction =\n/*#__PURE__*/\nfunction () {\n  /**\n   * constructor\n   */\n  function Transaction() {\n    _classCallCheck(this, Transaction);\n\n    this.id = cryptoUtil.id();\n    this.input = null;\n    this.outputs = [];\n    logger.info(\"created new transaction \".concat(this.id));\n  }\n  /*Transaction*/\n\n\n  _createClass(Transaction, [{\n    key: \"update\",\n    value: function update(senderWallet, recipient, amount) {\n      var _this = this;\n\n      return exception[\"try\"](function () {\n        logger.info(\"updating transaction \".concat(_this.id, \"...\"));\n\n        var senderOutput = _this.outputs.find(function (output) {\n          return output.address === senderWallet.publicKey;\n        });\n\n        if (amount > senderWallet.amount) {\n          logger.warn(\"amount \".concat(amount, \" exceeds balance\"));\n          return null;\n        }\n\n        senderOutput.amount = senderOutput.amount - amount;\n\n        _this.outputs.push({\n          amount: amount,\n          address: recipient\n        });\n\n        Transaction.signTransaction(_this, senderWallet);\n        return _this;\n      });\n    }\n    /**\n     * returns a json representation\n     */\n\n    /*json*/\n\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      return {\n        id: this.id,\n        input: serializeTxInput(this.input),\n        outputs: this.outputs\n      };\n    }\n    /**\n     * returns a json representation converted to string\n     */\n\n    /*string*/\n\n  }, {\n    key: \"toJsonString\",\n    value: function toJsonString() {\n      return JSON.stringify(this.toJson());\n    }\n  }], [{\n    key: \"signTransaction\",\n    value: function signTransaction(transaction, senderWallet) {\n      return exception[\"try\"](function () {\n        logger.info(\"signing transaction \".concat(transaction.id));\n        transaction.input = {\n          timestamp: Date.now(),\n          amount: senderWallet.balance,\n          address: senderWallet.publicKey,\n          signature: senderWallet.sign(cryptoUtil.hash(transaction.outputs))\n        };\n        return transaction;\n      });\n    }\n  }, {\n    key: \"newTransaction\",\n    value: function newTransaction(senderWallet, recipient, amount) {\n      return exception[\"try\"](function () {\n        if (amount > senderWallet.balance) {\n          logger.warn(\"amount \".concat(amount, \" exceeds balance\"));\n          return;\n        }\n\n        return Transaction.transactionWithOutputs(senderWallet, [{\n          amount: senderWallet.balance - amount,\n          address: senderWallet.publicKey\n        }, {\n          amount: amount,\n          address: recipient\n        }]);\n      });\n    }\n    /**\n     * cryptographically verifies the validity of the given Transaction \n     * @param {Transaction} transaction \n     * @returns {bool}\n     */\n\n  }, {\n    key: \"verifyTransaction\",\n    value: function verifyTransaction(transaction) {\n      return exception[\"try\"](function () {\n        var output = cryptoUtil.verifySignature(transaction.input.address, transaction.input.signature, cryptoUtil.hash(transaction.outputs));\n\n        if (!output) {\n          logger.warn(\"transaction \".concat(transaction.id, \" failed verification\"));\n        }\n\n        return output;\n      });\n    }\n    /**\n     * awards a small reward to the miner's wallet for mining a new block \n     * \n     * @param {Wallet} minerWallet the miner's wallet \n     * @param {Wallet} blockchainWallet a wallet to stand in as the wallet of the sender\n     * of the reward\n     * @returns {Transaction}\n     */\n\n  }, {\n    key: \"rewardTransaction\",\n    value: function rewardTransaction(minerWallet, blockchainWallet) {\n      return exception[\"try\"](function () {\n        return Transaction.transactionWithOutputs(blockchainWallet, [{\n          amount: MINING_REWARD,\n          address: minerWallet.publicKey\n        }]);\n      });\n    }\n    /**\n     * creates & signs a new Transaction instance with the given outputs\n     * @param {Wallet} senderWallet \n     * @param {Output[]} outputs \n     * @returns {Transaction}\n     */\n\n  }, {\n    key: \"transactionWithOutputs\",\n    value: function transactionWithOutputs(senderWallet, outputs) {\n      var _this2 = this;\n\n      return exception[\"try\"](function () {\n        var _transaction$outputs;\n\n        var transaction = new _this2();\n\n        (_transaction$outputs = transaction.outputs).push.apply(_transaction$outputs, _toConsumableArray(outputs));\n\n        Transaction.signTransaction(transaction, senderWallet);\n        return transaction;\n      });\n    }\n    /**\n     * deserializes a Transaction instance from JSON data\n     * @returns {Transaction}\n     * @param {json} json\n     */\n\n  }, {\n    key: \"fromJson\",\n    value: function fromJson(json) {\n      var _this3 = this;\n\n      return exception[\"try\"](function () {\n        var output = new _this3();\n        output.id = json.id;\n        output.input = deserializeTxInput(json.input);\n        output.outputs = json.outputs;\n        return output;\n      });\n    }\n  }, {\n    key: \"arrayToJson\",\n    value: function arrayToJson(array) {\n      return exception[\"try\"](function () {\n        var output = [];\n        array.forEach(function (t) {\n          output.push(t.toJson ? t.toJson() : t);\n        });\n        return output;\n      });\n    }\n  }]);\n\n  return Transaction;\n}();\n\nfunction serializeTxInput(txInput) {\n  return exception[\"try\"](function () {\n    var output = {\n      address: txInput.address,\n      amount: txInput.amount,\n      timestamp: txInput.timestamp\n    };\n\n    if (txInput.signature) {\n      output.signature = cryptoUtil.serializeSignature(txInput.signature);\n    }\n\n    return output;\n  });\n}\n\nfunction deserializeTxInput(txInput) {\n  return exception[\"try\"](function () {\n    var output = {\n      address: txInput.address,\n      amount: txInput.amount,\n      timestamp: txInput.timestamp\n    };\n\n    if (txInput.signature) {\n      output.signature = cryptoUtil.deserializeSignature(txInput.signature);\n    }\n\n    return output;\n  });\n}\n\nmodule.exports = Transaction;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Transaction.js"
      ],
      "names": [
        "LOG_TAG",
        "cryptoUtil",
        "require",
        "ioc",
        "MINING_REWARD",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Transaction",
        "id",
        "input",
        "outputs",
        "info",
        "senderWallet",
        "recipient",
        "amount",
        "senderOutput",
        "find",
        "output",
        "address",
        "publicKey",
        "warn",
        "push",
        "signTransaction",
        "serializeTxInput",
        "JSON",
        "stringify",
        "toJson",
        "transaction",
        "timestamp",
        "Date",
        "now",
        "balance",
        "signature",
        "sign",
        "hash",
        "transactionWithOutputs",
        "verifySignature",
        "minerWallet",
        "blockchainWallet",
        "json",
        "deserializeTxInput",
        "array",
        "forEach",
        "t",
        "txInput",
        "serializeSignature",
        "deserializeSignature",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,MAAhB;;AAEA,IAAMC,UAAU,GAAGC,OAAO,CAAC,0BAAD,CAA1B;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,4BAAD,CAAnB;;eAC2BA,OAAO,CAAC,iBAAD,C;IAA1BE,a,YAAAA,a;;AAER,IAAMC,MAAM,GAAGF,GAAG,CAACG,aAAJ,CAAkBC,YAAlB,CAA+BP,OAA/B,CAAf;AACA,IAAMQ,SAAS,GAAGL,GAAG,CAACM,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;;;;;;;;;;;;;;;;IAsBMM,W;;;AAEF;;;AAGA,yBAAa;AAAA;;AACT,SAAKC,EAAL,GAAUX,UAAU,CAACW,EAAX,EAAV;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,OAAL,GAAe,EAAf;AAEAT,IAAAA,MAAM,CAACU,IAAP,mCAAuC,KAAKH,EAA5C;AACH;AAED;;;;;2BAAuBI,Y,EAAcC,S,EAAWC,M,EAAQ;AAAA;;AACpD,aAAOV,SAAS,OAAT,CAAc,YAAM;AACvBH,QAAAA,MAAM,CAACU,IAAP,gCAAoC,KAAI,CAACH,EAAzC;;AACA,YAAMO,YAAY,GAAG,KAAI,CAACL,OAAL,CAAaM,IAAb,CAAkB,UAAAC,MAAM;AAAA,iBAAIA,MAAM,CAACC,OAAP,KAAmBN,YAAY,CAACO,SAApC;AAAA,SAAxB,CAArB;;AAEA,YAAIL,MAAM,GAAGF,YAAY,CAACE,MAA1B,EAAiC;AAC7Bb,UAAAA,MAAM,CAACmB,IAAP,kBAAsBN,MAAtB;AACA,iBAAO,IAAP;AACH;;AAEDC,QAAAA,YAAY,CAACD,MAAb,GAAuBC,YAAY,CAACD,MAAb,GAAsBA,MAA7C;;AACA,QAAA,KAAI,CAACJ,OAAL,CAAaW,IAAb,CAAkB;AAACP,UAAAA,MAAM,EAAEA,MAAT;AAAgBI,UAAAA,OAAO,EAAEL;AAAzB,SAAlB;;AACAN,QAAAA,WAAW,CAACe,eAAZ,CAA4B,KAA5B,EAAiCV,YAAjC;AAEA,eAAO,KAAP;AACH,OAdM,CAAP;AAeH;AAED;;;;AAGA;;;;6BAAkB;AACd,aAAO;AACHJ,QAAAA,EAAE,EAAE,KAAKA,EADN;AAEHC,QAAAA,KAAK,EAAEc,gBAAgB,CAAC,KAAKd,KAAN,CAFpB;AAGHC,QAAAA,OAAO,EAAE,KAAKA;AAHX,OAAP;AAKH;AAED;;;;AAGA;;;;mCAA0B;AACtB,aAAOc,IAAI,CAACC,SAAL,CAAe,KAAKC,MAAL,EAAf,CAAP;AACH;;;oCAEsCC,W,EAAaf,Y,EAAc;AAC9D,aAAOR,SAAS,OAAT,CAAc,YAAM;AACvBH,QAAAA,MAAM,CAACU,IAAP,+BAAmCgB,WAAW,CAACnB,EAA/C;AACAmB,QAAAA,WAAW,CAAClB,KAAZ,GAAoB;AAChBmB,UAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EADK;AAEhBhB,UAAAA,MAAM,EAAEF,YAAY,CAACmB,OAFL;AAGhBb,UAAAA,OAAO,EAAEN,YAAY,CAACO,SAHN;AAIhBa,UAAAA,SAAS,EAAEpB,YAAY,CAACqB,IAAb,CAAkBpC,UAAU,CAACqC,IAAX,CAAgBP,WAAW,CAACjB,OAA5B,CAAlB;AAJK,SAApB;AAMA,eAAOiB,WAAP;AACH,OATM,CAAP;AAUH;;;mCAEqCf,Y,EAAcC,S,EAAWC,M,EAAQ;AACnE,aAAOV,SAAS,OAAT,CAAc,YAAM;AACvB,YAAIU,MAAM,GAAGF,YAAY,CAACmB,OAA1B,EAAmC;AAC/B9B,UAAAA,MAAM,CAACmB,IAAP,kBAAsBN,MAAtB;AACA;AACH;;AAED,eAAOP,WAAW,CAAC4B,sBAAZ,CAAmCvB,YAAnC,EAAiD,CAAC;AACjDE,UAAAA,MAAM,EAAGF,YAAY,CAACmB,OAAb,GAAsBjB,MADkB;AAEjDI,UAAAA,OAAO,EAAEN,YAAY,CAACO;AAF2B,SAAD,EAGhD;AACAL,UAAAA,MAAM,EAAGA,MADT;AAEAI,UAAAA,OAAO,EAAEL;AAFT,SAHgD,CAAjD,CAAP;AAQH,OAdM,CAAP;AAeH;AAED;;;;;;;;sCAKkCc,W,EAAa;AAC3C,aAAOvB,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMa,MAAM,GAAGpB,UAAU,CAACuC,eAAX,CACXT,WAAW,CAAClB,KAAZ,CAAkBS,OADP,EAEXS,WAAW,CAAClB,KAAZ,CAAkBuB,SAFP,EAGXnC,UAAU,CAACqC,IAAX,CAAgBP,WAAW,CAACjB,OAA5B,CAHW,CAAf;;AAMA,YAAI,CAACO,MAAL,EAAa;AACThB,UAAAA,MAAM,CAACmB,IAAP,uBAA2BO,WAAW,CAACnB,EAAvC;AACH;;AAED,eAAOS,MAAP;AACH,OAZM,CAAP;AAaH;AAED;;;;;;;;;;;sCAQyCoB,W,EAAaC,gB,EAAkB;AACpE,aAAOlC,SAAS,OAAT,CAAc,YAAM;AACvB,eAAOG,WAAW,CAAC4B,sBAAZ,CAAmCG,gBAAnC,EAAqD,CAAC;AACrDxB,UAAAA,MAAM,EAAEd,aAD6C;AAErDkB,UAAAA,OAAO,EAAEmB,WAAW,CAAClB;AAFgC,SAAD,CAArD,CAAP;AAKH,OANM,CAAP;AAOH;AAED;;;;;;;;;2CAM8CP,Y,EAAcF,O,EAAS;AAAA;;AACjE,aAAON,SAAS,OAAT,CAAc,YAAM;AAAA;;AACvB,YAAMuB,WAAW,GAAG,IAAI,MAAJ,EAApB;;AACA,gCAAAA,WAAW,CAACjB,OAAZ,EAAoBW,IAApB,gDAA4BX,OAA5B;;AACAH,QAAAA,WAAW,CAACe,eAAZ,CAA4BK,WAA5B,EAAyCf,YAAzC;AACA,eAAOe,WAAP;AACH,OALM,CAAP;AAMH;AAED;;;;;;;;6BAKgCY,I,EAAM;AAAA;;AAClC,aAAOnC,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMa,MAAM,GAAG,IAAI,MAAJ,EAAf;AACAA,QAAAA,MAAM,CAACT,EAAP,GAAY+B,IAAI,CAAC/B,EAAjB;AACAS,QAAAA,MAAM,CAACR,KAAP,GAAgB+B,kBAAkB,CAACD,IAAI,CAAC9B,KAAN,CAAlC;AACAQ,QAAAA,MAAM,CAACP,OAAP,GAAiB6B,IAAI,CAAC7B,OAAtB;AAEA,eAAOO,MAAP;AACH,OAPM,CAAP;AAQH;;;gCAE6BwB,K,EAAO;AACjC,aAAOrC,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMa,MAAM,GAAG,EAAf;AACAwB,QAAAA,KAAK,CAACC,OAAN,CAAc,UAACC,CAAD,EAAO;AACjB1B,UAAAA,MAAM,CAACI,IAAP,CAAYsB,CAAC,CAACjB,MAAF,GAAWiB,CAAC,CAACjB,MAAF,EAAX,GAAwBiB,CAApC;AACH,SAFD;AAGA,eAAO1B,MAAP;AACH,OANM,CAAP;AAOH;;;;;;AAGL,SAASM,gBAAT,CAA0BqB,OAA1B,EAAmC;AAC/B,SAAOxC,SAAS,OAAT,CAAc,YAAM;AACvB,QAAMa,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE0B,OAAO,CAAC1B,OADN;AAEXJ,MAAAA,MAAM,EAAE8B,OAAO,CAAC9B,MAFL;AAGXc,MAAAA,SAAS,EAAEgB,OAAO,CAAChB;AAHR,KAAf;;AAMA,QAAIgB,OAAO,CAACZ,SAAZ,EAAuB;AACnBf,MAAAA,MAAM,CAACe,SAAP,GAAmBnC,UAAU,CAACgD,kBAAX,CAA8BD,OAAO,CAACZ,SAAtC,CAAnB;AACH;;AAED,WAAOf,MAAP;AACH,GAZM,CAAP;AAaH;;AAED,SAASuB,kBAAT,CAA4BI,OAA5B,EAAqC;AACjC,SAAOxC,SAAS,OAAT,CAAc,YAAM;AACvB,QAAMa,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE0B,OAAO,CAAC1B,OADN;AAEXJ,MAAAA,MAAM,EAAE8B,OAAO,CAAC9B,MAFL;AAGXc,MAAAA,SAAS,EAAEgB,OAAO,CAAChB;AAHR,KAAf;;AAMA,QAAIgB,OAAO,CAACZ,SAAZ,EAAuB;AACnBf,MAAAA,MAAM,CAACe,SAAP,GAAmBnC,UAAU,CAACiD,oBAAX,CAAgCF,OAAO,CAACZ,SAAxC,CAAnB;AACH;;AAED,WAAOf,MAAP;AACH,GAZM,CAAP;AAaH;;AAED8B,MAAM,CAACC,OAAP,GAAiBzC,WAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'TRNS';\n\nconst cryptoUtil = require('../../../util/cryptoUtil');\nconst ioc = require('../../../util/iocContainer');\nconst { MINING_REWARD }  = require('../../../config');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: Transaction\n * ---------------------\n * a transaction consists of one input and two outputs. The first output goes to the\n * recipient; the second output sends the change back to the sender. The sender's entire\n * wallet balance is the input to the transaction, the actual sent amount is the first\n * output (to the recipient), and the remainder is in the second output back to the sender.\n * \n * Input format: {\n *      timestamp: <int>,  //datetime in ms\n *      amount: <float>,   //full amount of sender's wallet\n *      address: <string>, //public key of sender wallet\n *      signature: <EC.Signature> //cryptographic signature of transaction \n * }\n * \n * Output format: {\n *      amount: <float>,   //amount to send to address\n *      address: <string>, //public key of recipient wallet\n * }\n *\n * author: John R. Kosinski\n */\nclass Transaction {\n\n    /**\n     * constructor\n     */\n    constructor(){\n        this.id = cryptoUtil.id();\n        this.input = null;\n        this.outputs = [];\n\n        logger.info(`created new transaction ${this.id}`);\n    }\n\n    /*Transaction*/ update(senderWallet, recipient, amount) {\n        return exception.try(() => {\n            logger.info(`updating transaction ${this.id}...`)\n            const senderOutput = this.outputs.find(output => output.address === senderWallet.publicKey);\n\n            if (amount > senderWallet.amount){\n                logger.warn(`amount ${amount} exceeds balance`);\n                return null;\n            }\n\n            senderOutput.amount = (senderOutput.amount - amount);\n            this.outputs.push({amount: amount,address: recipient});\n            Transaction.signTransaction(this,senderWallet);\n\n            return this;\n        });\n    }\n\n    /**\n     * returns a json representation\n     */\n    /*json*/ toJson() {\n        return {\n            id: this.id,\n            input: serializeTxInput(this.input),\n            outputs: this.outputs\n        }\n    }\n\n    /**\n     * returns a json representation converted to string\n     */\n    /*string*/ toJsonString() {\n        return JSON.stringify(this.toJson());\n    }\n\n    static /*Transaction*/ signTransaction(transaction, senderWallet) {\n        return exception.try(() => {\n            logger.info(`signing transaction ${transaction.id}`);\n            transaction.input = {\n                timestamp: Date.now(),\n                amount: senderWallet.balance,\n                address: senderWallet.publicKey,\n                signature: senderWallet.sign(cryptoUtil.hash(transaction.outputs))\n            };\n            return transaction;\n        });\n    }\n\n    static /*Transaction*/ newTransaction(senderWallet, recipient, amount) {\n        return exception.try(() => {\n            if (amount > senderWallet.balance) {\n                logger.warn(`amount ${amount} exceeds balance`);\n                return;\n            }\n\n            return Transaction.transactionWithOutputs(senderWallet, [{\n                    amount:  senderWallet.balance -amount,\n                    address: senderWallet.publicKey\n                },  {\n                    amount:  amount,\n                    address: recipient\n                }\n            ]);\n        });\n    }\n\n    /**\n     * cryptographically verifies the validity of the given Transaction \n     * @param {Transaction} transaction \n     * @returns {bool}\n     */\n    static /*bool*/ verifyTransaction(transaction) {\n        return exception.try(() => {\n            const output = cryptoUtil.verifySignature(\n                transaction.input.address,\n                transaction.input.signature,\n                cryptoUtil.hash(transaction.outputs)\n            );\n\n            if (!output) {\n                logger.warn(`transaction ${transaction.id} failed verification`);\n            }\n\n            return output;\n        });\n    }\n\n    /**\n     * awards a small reward to the miner's wallet for mining a new block \n     * \n     * @param {Wallet} minerWallet the miner's wallet \n     * @param {Wallet} blockchainWallet a wallet to stand in as the wallet of the sender\n     * of the reward\n     * @returns {Transaction}\n     */\n    static /*Transaction*/ rewardTransaction(minerWallet, blockchainWallet) {\n        return exception.try(() => {\n            return Transaction.transactionWithOutputs(blockchainWallet, [{\n                    amount: MINING_REWARD,\n                    address: minerWallet.publicKey\n                }]\n            );\n        });\n    }\n\n    /**\n     * creates & signs a new Transaction instance with the given outputs\n     * @param {Wallet} senderWallet \n     * @param {Output[]} outputs \n     * @returns {Transaction}\n     */\n    static /*Transaction*/ transactionWithOutputs(senderWallet, outputs) {\n        return exception.try(() => {\n            const transaction = new this();\n            transaction.outputs.push(...outputs);\n            Transaction.signTransaction(transaction, senderWallet);\n            return transaction;\n        });\n    }\n\n    /**\n     * deserializes a Transaction instance from JSON data\n     * @returns {Transaction}\n     * @param {json} json\n     */\n    static /*Transaction*/ fromJson(json) {\n        return exception.try(() => {\n            const output = new this();\n            output.id = json.id;\n            output.input =  deserializeTxInput(json.input); \n            output.outputs = json.outputs;\n\n            return output;\n        });\n    }\n    \n    static /*[json]*/ arrayToJson(array) {\n        return exception.try(() => {\n            const output = []; \n            array.forEach((t) => {\n                output.push(t.toJson ? t.toJson() : t); \n            });\n            return output; \n        });\n    }\n}\n\nfunction serializeTxInput(txInput) {\n    return exception.try(() => {\n        const output = { \n            address: txInput.address,\n            amount: txInput.amount,\n            timestamp: txInput.timestamp\n        }; \n        \n        if (txInput.signature) {\n            output.signature = cryptoUtil.serializeSignature(txInput.signature); \n        }\n        \n        return output; \n    });\n}\n\nfunction deserializeTxInput(txInput) {\n    return exception.try(() => {\n        const output = { \n            address: txInput.address,\n            amount: txInput.amount,\n            timestamp: txInput.timestamp\n        }; \n        \n        if (txInput.signature) {\n            output.signature = cryptoUtil.deserializeSignature(txInput.signature);\n        }\n        \n        return output; \n    });\n}\n\nmodule.exports = Transaction;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567747991961
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/cryptoUtil.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/cryptoUtil.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/cryptoUtil.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/cryptoUtil.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
        "sourceFileName": "cryptoUtil.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar LOG_TAG = 'CRPT';\n\nvar SHA256 = require('crypto-js/sha256');\n\nvar uuidV1 = require('uuid/v1');\n\nvar EC = require('elliptic').ec;\n\nvar ec = new EC('secp256k1'); //TODO: this is far from ideal\n\nvar Signature = require('../../node_modules/elliptic/lib/elliptic/ec/signature');\n/**\n * generates & returns a new elliptic keypair\n * @returns {KeyPair}\n */\n\n/*EC.KeyPair*/\n\n\nexports.generateKeyPair = function () {\n  return ec.genKeyPair();\n};\n/**\n * deserializes a key pair from string (hex) representations of its \n * public & private keys\n * @param pub string (hex) representation of public key\n * @param priv string (hex) representation of private key\n * @returns {KeyPair}\n */\n\n/*EC.KeyPair*/\n\n\nexports.deserializeKeyPair = function (pub, priv) {\n  return ec.keyPair({\n    priv: priv,\n    privEnc: 'hex',\n    pub: pub,\n    pubEnc: 'hex'\n  });\n};\n/**\n * generates & returns a new UUID\n * @returns {string}\n */\n\n/*string*/\n\n\nexports.id = function () {\n  return uuidV1();\n};\n/**\n * generates a SHA256 hash of given data \n * @param {json} data \n */\n\n/*string*/\n\n\nexports.hash = function (data) {\n  return SHA256(JSON.stringify(data)).toString();\n};\n/**\n * validates a signature \n * @param {string} publicKey\n * @param {string} signature\n * @param {string} dataHash\n * @returns {bool}\n */\n\n/*bool*/\n\n\nexports.verifySignature = function (publicKey, signature, dataHash) {\n  return ec.keyFromPublic(publicKey, 'hex').verify(dataHash, signature);\n};\n\nexports.serializeSignature = function (signature) {\n  return {\n    r: signature.r.toString('hex'),\n    s: signature.s.toString('hex')\n  };\n};\n\nexports.deserializeSignature = function (json) {\n  return new Signature(json, 'hex');\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyeXB0b1V0aWwuanMiXSwibmFtZXMiOlsiTE9HX1RBRyIsIlNIQTI1NiIsInJlcXVpcmUiLCJ1dWlkVjEiLCJFQyIsImVjIiwiU2lnbmF0dXJlIiwiZXhwb3J0cyIsImdlbmVyYXRlS2V5UGFpciIsImdlbktleVBhaXIiLCJkZXNlcmlhbGl6ZUtleVBhaXIiLCJwdWIiLCJwcml2Iiwia2V5UGFpciIsInByaXZFbmMiLCJwdWJFbmMiLCJpZCIsImhhc2giLCJkYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsInRvU3RyaW5nIiwidmVyaWZ5U2lnbmF0dXJlIiwicHVibGljS2V5Iiwic2lnbmF0dXJlIiwiZGF0YUhhc2giLCJrZXlGcm9tUHVibGljIiwidmVyaWZ5Iiwic2VyaWFsaXplU2lnbmF0dXJlIiwiciIsInMiLCJkZXNlcmlhbGl6ZVNpZ25hdHVyZSIsImpzb24iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLE9BQU8sR0FBRyxNQUFoQjs7QUFFQSxJQUFNQyxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxrQkFBRCxDQUF0Qjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQXRCOztBQUNBLElBQU1FLEVBQUUsR0FBR0YsT0FBTyxDQUFDLFVBQUQsQ0FBUCxDQUFvQkcsRUFBL0I7O0FBQ0EsSUFBTUEsRUFBRSxHQUFHLElBQUlELEVBQUosQ0FBTyxXQUFQLENBQVgsQyxDQUVBOztBQUNBLElBQU1FLFNBQVMsR0FBR0osT0FBTyxDQUFDLHVEQUFELENBQXpCO0FBRUE7Ozs7O0FBSUE7OztBQUFlSyxPQUFPLENBQUNDLGVBQVIsR0FBMEIsWUFBTTtBQUMzQyxTQUFPSCxFQUFFLENBQUNJLFVBQUgsRUFBUDtBQUNILENBRmM7QUFJZjs7Ozs7Ozs7QUFPQTs7O0FBQWVGLE9BQU8sQ0FBQ0csa0JBQVIsR0FBNkIsVUFBQ0MsR0FBRCxFQUFNQyxJQUFOLEVBQWU7QUFDdkQsU0FBT1AsRUFBRSxDQUFDUSxPQUFILENBQVc7QUFDZEQsSUFBQUEsSUFBSSxFQUFFQSxJQURRO0FBRWRFLElBQUFBLE9BQU8sRUFBRSxLQUZLO0FBR2RILElBQUFBLEdBQUcsRUFBRUEsR0FIUztBQUlkSSxJQUFBQSxNQUFNLEVBQUU7QUFKTSxHQUFYLENBQVA7QUFNSCxDQVBjO0FBU2Y7Ozs7O0FBSUE7OztBQUFXUixPQUFPLENBQUNTLEVBQVIsR0FBYSxZQUFNO0FBQzFCLFNBQU9iLE1BQU0sRUFBYjtBQUNILENBRlU7QUFJWDs7Ozs7QUFJQTs7O0FBQVdJLE9BQU8sQ0FBQ1UsSUFBUixHQUFlLFVBQUNDLElBQUQsRUFBVTtBQUNoQyxTQUFPakIsTUFBTSxDQUFDa0IsSUFBSSxDQUFDQyxTQUFMLENBQWVGLElBQWYsQ0FBRCxDQUFOLENBQTZCRyxRQUE3QixFQUFQO0FBQ0gsQ0FGVTtBQUlYOzs7Ozs7OztBQU9BOzs7QUFBU2QsT0FBTyxDQUFDZSxlQUFSLEdBQTBCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUF1QkMsUUFBdkIsRUFBb0M7QUFDbkUsU0FBT3BCLEVBQUUsQ0FBQ3FCLGFBQUgsQ0FBaUJILFNBQWpCLEVBQTJCLEtBQTNCLEVBQWtDSSxNQUFsQyxDQUF5Q0YsUUFBekMsRUFBbURELFNBQW5ELENBQVA7QUFDSCxDQUZROztBQUlUakIsT0FBTyxDQUFDcUIsa0JBQVIsR0FBNkIsVUFBQ0osU0FBRCxFQUFlO0FBQ3hDLFNBQU87QUFDSEssSUFBQUEsQ0FBQyxFQUFFTCxTQUFTLENBQUNLLENBQVYsQ0FBWVIsUUFBWixDQUFxQixLQUFyQixDQURBO0FBRUhTLElBQUFBLENBQUMsRUFBRU4sU0FBUyxDQUFDTSxDQUFWLENBQVlULFFBQVosQ0FBcUIsS0FBckI7QUFGQSxHQUFQO0FBSUgsQ0FMRDs7QUFPQWQsT0FBTyxDQUFDd0Isb0JBQVIsR0FBK0IsVUFBQ0MsSUFBRCxFQUFVO0FBQ3JDLFNBQU8sSUFBSTFCLFNBQUosQ0FBYzBCLElBQWQsRUFBb0IsS0FBcEIsQ0FBUDtBQUNILENBRkQiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21pbmFjb2luL21pbmFjb2luLXNlcnZlci9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgTE9HX1RBRyA9ICdDUlBUJztcblxuY29uc3QgU0hBMjU2ID0gcmVxdWlyZSgnY3J5cHRvLWpzL3NoYTI1NicpO1xuY29uc3QgdXVpZFYxID0gcmVxdWlyZSgndXVpZC92MScpO1xuY29uc3QgRUMgPSByZXF1aXJlKCdlbGxpcHRpYycpLmVjO1xuY29uc3QgZWMgPSBuZXcgRUMoJ3NlY3AyNTZrMScpO1xuXG4vL1RPRE86IHRoaXMgaXMgZmFyIGZyb20gaWRlYWxcbmNvbnN0IFNpZ25hdHVyZSA9IHJlcXVpcmUoJy4uLy4uL25vZGVfbW9kdWxlcy9lbGxpcHRpYy9saWIvZWxsaXB0aWMvZWMvc2lnbmF0dXJlJyk7XG5cbi8qKlxuICogZ2VuZXJhdGVzICYgcmV0dXJucyBhIG5ldyBlbGxpcHRpYyBrZXlwYWlyXG4gKiBAcmV0dXJucyB7S2V5UGFpcn1cbiAqL1xuLypFQy5LZXlQYWlyKi8gZXhwb3J0cy5nZW5lcmF0ZUtleVBhaXIgPSAoKSA9PiB7XG4gICAgcmV0dXJuIGVjLmdlbktleVBhaXIoKTtcbn07XG5cbi8qKlxuICogZGVzZXJpYWxpemVzIGEga2V5IHBhaXIgZnJvbSBzdHJpbmcgKGhleCkgcmVwcmVzZW50YXRpb25zIG9mIGl0cyBcbiAqIHB1YmxpYyAmIHByaXZhdGUga2V5c1xuICogQHBhcmFtIHB1YiBzdHJpbmcgKGhleCkgcmVwcmVzZW50YXRpb24gb2YgcHVibGljIGtleVxuICogQHBhcmFtIHByaXYgc3RyaW5nIChoZXgpIHJlcHJlc2VudGF0aW9uIG9mIHByaXZhdGUga2V5XG4gKiBAcmV0dXJucyB7S2V5UGFpcn1cbiAqL1xuLypFQy5LZXlQYWlyKi8gZXhwb3J0cy5kZXNlcmlhbGl6ZUtleVBhaXIgPSAocHViLCBwcml2KSA9PiB7XG4gICAgcmV0dXJuIGVjLmtleVBhaXIoe1xuICAgICAgICBwcml2OiBwcml2LFxuICAgICAgICBwcml2RW5jOiAnaGV4JyxcbiAgICAgICAgcHViOiBwdWIsXG4gICAgICAgIHB1YkVuYzogJ2hleCdcbiAgICB9KTtcbn07XG5cbi8qKlxuICogZ2VuZXJhdGVzICYgcmV0dXJucyBhIG5ldyBVVUlEXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG4vKnN0cmluZyovIGV4cG9ydHMuaWQgPSAoKSA9PiB7XG4gICAgcmV0dXJuIHV1aWRWMSgpO1xufTtcblxuLyoqXG4gKiBnZW5lcmF0ZXMgYSBTSEEyNTYgaGFzaCBvZiBnaXZlbiBkYXRhIFxuICogQHBhcmFtIHtqc29ufSBkYXRhIFxuICovXG4vKnN0cmluZyovIGV4cG9ydHMuaGFzaCA9IChkYXRhKSA9PiB7XG4gICAgcmV0dXJuIFNIQTI1NihKU09OLnN0cmluZ2lmeShkYXRhKSkudG9TdHJpbmcoKTtcbn1cblxuLyoqXG4gKiB2YWxpZGF0ZXMgYSBzaWduYXR1cmUgXG4gKiBAcGFyYW0ge3N0cmluZ30gcHVibGljS2V5XG4gKiBAcGFyYW0ge3N0cmluZ30gc2lnbmF0dXJlXG4gKiBAcGFyYW0ge3N0cmluZ30gZGF0YUhhc2hcbiAqIEByZXR1cm5zIHtib29sfVxuICovXG4vKmJvb2wqLyBleHBvcnRzLnZlcmlmeVNpZ25hdHVyZSA9IChwdWJsaWNLZXksIHNpZ25hdHVyZSwgZGF0YUhhc2gpID0+IHtcbiAgICByZXR1cm4gZWMua2V5RnJvbVB1YmxpYyhwdWJsaWNLZXksJ2hleCcpLnZlcmlmeShkYXRhSGFzaCwgc2lnbmF0dXJlKTtcbn1cblxuZXhwb3J0cy5zZXJpYWxpemVTaWduYXR1cmUgPSAoc2lnbmF0dXJlKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcjogc2lnbmF0dXJlLnIudG9TdHJpbmcoJ2hleCcpLCBcbiAgICAgICAgczogc2lnbmF0dXJlLnMudG9TdHJpbmcoJ2hleCcpXG4gICAgfTtcbn1cblxuZXhwb3J0cy5kZXNlcmlhbGl6ZVNpZ25hdHVyZSA9IChqc29uKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBTaWduYXR1cmUoanNvbiwgJ2hleCcpOyBcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "cryptoUtil.js"
      ],
      "names": [
        "LOG_TAG",
        "SHA256",
        "require",
        "uuidV1",
        "EC",
        "ec",
        "Signature",
        "exports",
        "generateKeyPair",
        "genKeyPair",
        "deserializeKeyPair",
        "pub",
        "priv",
        "keyPair",
        "privEnc",
        "pubEnc",
        "id",
        "hash",
        "data",
        "JSON",
        "stringify",
        "toString",
        "verifySignature",
        "publicKey",
        "signature",
        "dataHash",
        "keyFromPublic",
        "verify",
        "serializeSignature",
        "r",
        "s",
        "deserializeSignature",
        "json"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,OAAO,GAAG,MAAhB;;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAAtB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAME,EAAE,GAAGF,OAAO,CAAC,UAAD,CAAP,CAAoBG,EAA/B;;AACA,IAAMA,EAAE,GAAG,IAAID,EAAJ,CAAO,WAAP,CAAX,C,CAEA;;AACA,IAAME,SAAS,GAAGJ,OAAO,CAAC,uDAAD,CAAzB;AAEA;;;;;AAIA;;;AAAeK,OAAO,CAACC,eAAR,GAA0B,YAAM;AAC3C,SAAOH,EAAE,CAACI,UAAH,EAAP;AACH,CAFc;AAIf;;;;;;;;AAOA;;;AAAeF,OAAO,CAACG,kBAAR,GAA6B,UAACC,GAAD,EAAMC,IAAN,EAAe;AACvD,SAAOP,EAAE,CAACQ,OAAH,CAAW;AACdD,IAAAA,IAAI,EAAEA,IADQ;AAEdE,IAAAA,OAAO,EAAE,KAFK;AAGdH,IAAAA,GAAG,EAAEA,GAHS;AAIdI,IAAAA,MAAM,EAAE;AAJM,GAAX,CAAP;AAMH,CAPc;AASf;;;;;AAIA;;;AAAWR,OAAO,CAACS,EAAR,GAAa,YAAM;AAC1B,SAAOb,MAAM,EAAb;AACH,CAFU;AAIX;;;;;AAIA;;;AAAWI,OAAO,CAACU,IAAR,GAAe,UAACC,IAAD,EAAU;AAChC,SAAOjB,MAAM,CAACkB,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAD,CAAN,CAA6BG,QAA7B,EAAP;AACH,CAFU;AAIX;;;;;;;;AAOA;;;AAASd,OAAO,CAACe,eAAR,GAA0B,UAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAoC;AACnE,SAAOpB,EAAE,CAACqB,aAAH,CAAiBH,SAAjB,EAA2B,KAA3B,EAAkCI,MAAlC,CAAyCF,QAAzC,EAAmDD,SAAnD,CAAP;AACH,CAFQ;;AAITjB,OAAO,CAACqB,kBAAR,GAA6B,UAACJ,SAAD,EAAe;AACxC,SAAO;AACHK,IAAAA,CAAC,EAAEL,SAAS,CAACK,CAAV,CAAYR,QAAZ,CAAqB,KAArB,CADA;AAEHS,IAAAA,CAAC,EAAEN,SAAS,CAACM,CAAV,CAAYT,QAAZ,CAAqB,KAArB;AAFA,GAAP;AAIH,CALD;;AAOAd,OAAO,CAACwB,oBAAR,GAA+B,UAACC,IAAD,EAAU;AACrC,SAAO,IAAI1B,SAAJ,CAAc0B,IAAd,EAAoB,KAApB,CAAP;AACH,CAFD",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'CRPT';\n\nconst SHA256 = require('crypto-js/sha256');\nconst uuidV1 = require('uuid/v1');\nconst EC = require('elliptic').ec;\nconst ec = new EC('secp256k1');\n\n//TODO: this is far from ideal\nconst Signature = require('../../node_modules/elliptic/lib/elliptic/ec/signature');\n\n/**\n * generates & returns a new elliptic keypair\n * @returns {KeyPair}\n */\n/*EC.KeyPair*/ exports.generateKeyPair = () => {\n    return ec.genKeyPair();\n};\n\n/**\n * deserializes a key pair from string (hex) representations of its \n * public & private keys\n * @param pub string (hex) representation of public key\n * @param priv string (hex) representation of private key\n * @returns {KeyPair}\n */\n/*EC.KeyPair*/ exports.deserializeKeyPair = (pub, priv) => {\n    return ec.keyPair({\n        priv: priv,\n        privEnc: 'hex',\n        pub: pub,\n        pubEnc: 'hex'\n    });\n};\n\n/**\n * generates & returns a new UUID\n * @returns {string}\n */\n/*string*/ exports.id = () => {\n    return uuidV1();\n};\n\n/**\n * generates a SHA256 hash of given data \n * @param {json} data \n */\n/*string*/ exports.hash = (data) => {\n    return SHA256(JSON.stringify(data)).toString();\n}\n\n/**\n * validates a signature \n * @param {string} publicKey\n * @param {string} signature\n * @param {string} dataHash\n * @returns {bool}\n */\n/*bool*/ exports.verifySignature = (publicKey, signature, dataHash) => {\n    return ec.keyFromPublic(publicKey,'hex').verify(dataHash, signature);\n}\n\nexports.serializeSignature = (signature) => {\n    return {\n        r: signature.r.toString('hex'), \n        s: signature.s.toString('hex')\n    };\n}\n\nexports.deserializeSignature = (json) => {\n    return new Signature(json, 'hex'); \n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1567778128268
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/config.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nexports.DIFFICULTY = 3;\nexports.MINE_RATE = 100000;\nexports.INITIAL_BALANCE = 500; //TODO: remove initial balance (set to 0)\n\nexports.HTTP_PORT = process.env.HTTP_PORT || 3001;\nexports.P2P_PORT = process.env.P2P_PORT || 5001;\nexports.MINING_REWARD = 50;\nexports.USE_DATABASE = false;\nexports.PEER_LIMIT = 3;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJleHBvcnRzIiwiRElGRklDVUxUWSIsIk1JTkVfUkFURSIsIklOSVRJQUxfQkFMQU5DRSIsIkhUVFBfUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJQMlBfUE9SVCIsIk1JTklOR19SRVdBUkQiLCJVU0VfREFUQUJBU0UiLCJQRUVSX0xJTUlUIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQUEsT0FBTyxDQUFDQyxVQUFSLEdBQXFCLENBQXJCO0FBQ0FELE9BQU8sQ0FBQ0UsU0FBUixHQUFvQixNQUFwQjtBQUNBRixPQUFPLENBQUNHLGVBQVIsR0FBMEIsR0FBMUIsQyxDQUErQjs7QUFDL0JILE9BQU8sQ0FBQ0ksU0FBUixHQUFvQkMsT0FBTyxDQUFDQyxHQUFSLENBQVlGLFNBQVosSUFBeUIsSUFBN0M7QUFDQUosT0FBTyxDQUFDTyxRQUFSLEdBQW1CRixPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBWixJQUF3QixJQUEzQztBQUNBUCxPQUFPLENBQUNRLGFBQVIsR0FBd0IsRUFBeEI7QUFDQVIsT0FBTyxDQUFDUyxZQUFSLEdBQXVCLEtBQXZCO0FBQ0FULE9BQU8sQ0FBQ1UsVUFBUixHQUFxQixDQUFyQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9hY2VyL0Rlc2t0b3AvbWluYWNvaW4vbWluYWNvaW4vbWluYWNvaW4tc2VydmVyL3NyYyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5ESUZGSUNVTFRZID0gMztcbmV4cG9ydHMuTUlORV9SQVRFID0gMTAwMDAwO1xuZXhwb3J0cy5JTklUSUFMX0JBTEFOQ0UgPSA1MDA7IC8vVE9ETzogcmVtb3ZlIGluaXRpYWwgYmFsYW5jZSAoc2V0IHRvIDApXG5leHBvcnRzLkhUVFBfUE9SVCA9IHByb2Nlc3MuZW52LkhUVFBfUE9SVCB8fCAzMDAxO1xuZXhwb3J0cy5QMlBfUE9SVCA9IHByb2Nlc3MuZW52LlAyUF9QT1JUIHx8IDUwMDE7XG5leHBvcnRzLk1JTklOR19SRVdBUkQgPSA1MDtcbmV4cG9ydHMuVVNFX0RBVEFCQVNFID0gZmFsc2U7XG5leHBvcnRzLlBFRVJfTElNSVQgPSAzOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "exports",
        "DIFFICULTY",
        "MINE_RATE",
        "INITIAL_BALANCE",
        "HTTP_PORT",
        "process",
        "env",
        "P2P_PORT",
        "MINING_REWARD",
        "USE_DATABASE",
        "PEER_LIMIT"
      ],
      "mappings": "AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,CAArB;AACAD,OAAO,CAACE,SAAR,GAAoB,MAApB;AACAF,OAAO,CAACG,eAAR,GAA0B,GAA1B,C,CAA+B;;AAC/BH,OAAO,CAACI,SAAR,GAAoBC,OAAO,CAACC,GAAR,CAAYF,SAAZ,IAAyB,IAA7C;AACAJ,OAAO,CAACO,QAAR,GAAmBF,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwB,IAA3C;AACAP,OAAO,CAACQ,aAAR,GAAwB,EAAxB;AACAR,OAAO,CAACS,YAAR,GAAuB,KAAvB;AACAT,OAAO,CAACU,UAAR,GAAqB,CAArB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "sourcesContent": [
        "'use strict';\n\nexports.DIFFICULTY = 3;\nexports.MINE_RATE = 100000;\nexports.INITIAL_BALANCE = 500; //TODO: remove initial balance (set to 0)\nexports.HTTP_PORT = process.env.HTTP_PORT || 3001;\nexports.P2P_PORT = process.env.P2P_PORT || 5001;\nexports.MINING_REWARD = 50;\nexports.USE_DATABASE = false;\nexports.PEER_LIMIT = 3;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567669795392
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/winstonLogger.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/winstonLogger.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/winstonLogger.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/winstonLogger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
        "sourceFileName": "winstonLogger.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n/**\n * ------------------------\n * implements a logger factory, returning a logger that implements winston.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('winston'),\n    transports = _require.transports,\n    createLogger = _require.createLogger,\n    format = _require.format; //create winston logger\n\n\nvar logger = createLogger({\n  format: format.combine(format.timestamp(), format.json()),\n  transports: [new transports.Console({\n    handleExceptions: true,\n    timestamp: true\n  })],\n  exitOnError: false\n});\n/**\n * generic logger, wraps winston\n */\n\nvar WinstonLogger =\n/*#__PURE__*/\nfunction () {\n  function WinstonLogger(tag) {\n    _classCallCheck(this, WinstonLogger);\n\n    this.tag = tag;\n  }\n\n  _createClass(WinstonLogger, [{\n    key: \"debug\",\n    value: function debug(s) {\n      logger.debug(formatMessage(this.tag, s));\n    }\n  }, {\n    key: \"info\",\n    value: function info(s) {\n      logger.info(formatMessage(this.tag, s));\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(s) {\n      logger.warn(formatMessage(this.tag, s));\n    }\n  }, {\n    key: \"error\",\n    value: function error(s) {\n      logger.error(formatMessage(this.tag, s));\n    }\n  }]);\n\n  return WinstonLogger;\n}();\n\nfunction formatMessage(tag, message) {\n  return \"\".concat(tag, \": \").concat(message);\n}\n\nexports.createLogger = function (tag) {\n  return new WinstonLogger(tag);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndpbnN0b25Mb2dnZXIuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsInRyYW5zcG9ydHMiLCJjcmVhdGVMb2dnZXIiLCJmb3JtYXQiLCJsb2dnZXIiLCJjb21iaW5lIiwidGltZXN0YW1wIiwianNvbiIsIkNvbnNvbGUiLCJoYW5kbGVFeGNlcHRpb25zIiwiZXhpdE9uRXJyb3IiLCJXaW5zdG9uTG9nZ2VyIiwidGFnIiwicyIsImRlYnVnIiwiZm9ybWF0TWVzc2FnZSIsImluZm8iLCJ3YXJuIiwiZXJyb3IiLCJtZXNzYWdlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTs7Ozs7Ozs7Ozs7Ozs7ZUFRMkNBLE9BQU8sQ0FBQyxTQUFELEM7SUFBM0NDLFUsWUFBQUEsVTtJQUFZQyxZLFlBQUFBLFk7SUFBY0MsTSxZQUFBQSxNLEVBRWpDOzs7QUFDQSxJQUFNQyxNQUFNLEdBQUdGLFlBQVksQ0FBQztBQUN4QkMsRUFBQUEsTUFBTSxFQUFFQSxNQUFNLENBQUNFLE9BQVAsQ0FDSkYsTUFBTSxDQUFDRyxTQUFQLEVBREksRUFFSkgsTUFBTSxDQUFDSSxJQUFQLEVBRkksQ0FEZ0I7QUFLeEJOLEVBQUFBLFVBQVUsRUFBRSxDQUNWLElBQUlBLFVBQVUsQ0FBQ08sT0FBZixDQUF1QjtBQUNyQkMsSUFBQUEsZ0JBQWdCLEVBQUUsSUFERztBQUVyQkgsSUFBQUEsU0FBUyxFQUFFO0FBRlUsR0FBdkIsQ0FEVSxDQUxZO0FBV3hCSSxFQUFBQSxXQUFXLEVBQUU7QUFYVyxDQUFELENBQTNCO0FBY0E7Ozs7SUFHTUMsYTs7O0FBRUYseUJBQVlDLEdBQVosRUFBaUI7QUFBQTs7QUFDYixTQUFLQSxHQUFMLEdBQVdBLEdBQVg7QUFDSDs7OzswQkFFS0MsQyxFQUFHO0FBQ0xULE1BQUFBLE1BQU0sQ0FBQ1UsS0FBUCxDQUFhQyxhQUFhLENBQUMsS0FBS0gsR0FBTixFQUFXQyxDQUFYLENBQTFCO0FBQ0g7Ozt5QkFFSUEsQyxFQUFHO0FBQ0pULE1BQUFBLE1BQU0sQ0FBQ1ksSUFBUCxDQUFZRCxhQUFhLENBQUMsS0FBS0gsR0FBTixFQUFXQyxDQUFYLENBQXpCO0FBQ0g7Ozt5QkFFSUEsQyxFQUFHO0FBQ0pULE1BQUFBLE1BQU0sQ0FBQ2EsSUFBUCxDQUFZRixhQUFhLENBQUMsS0FBS0gsR0FBTixFQUFXQyxDQUFYLENBQXpCO0FBQ0g7OzswQkFFS0EsQyxFQUFHO0FBQ0xULE1BQUFBLE1BQU0sQ0FBQ2MsS0FBUCxDQUFhSCxhQUFhLENBQUMsS0FBS0gsR0FBTixFQUFXQyxDQUFYLENBQTFCO0FBQ0g7Ozs7OztBQUdMLFNBQVNFLGFBQVQsQ0FBdUJILEdBQXZCLEVBQTRCTyxPQUE1QixFQUFxQztBQUNqQyxtQkFBVVAsR0FBVixlQUFrQk8sT0FBbEI7QUFDSDs7QUFFREMsT0FBTyxDQUFDbEIsWUFBUixHQUF1QixVQUFDVSxHQUFELEVBQVM7QUFBRSxTQUFPLElBQUlELGFBQUosQ0FBa0JDLEdBQWxCLENBQVA7QUFBZ0MsQ0FBbEUiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21pbmFjb2luL21pbmFjb2luLXNlcnZlci9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIGltcGxlbWVudHMgYSBsb2dnZXIgZmFjdG9yeSwgcmV0dXJuaW5nIGEgbG9nZ2VyIHRoYXQgaW1wbGVtZW50cyB3aW5zdG9uLlxuICpcbiAqIEF1dGhvcjogSm9obiBSLiBLb3NpbnNraVxuICogRGF0ZTogMjcgQXVnIDIwMTlcbiAqL1xuXG5jb25zdCB7dHJhbnNwb3J0cywgY3JlYXRlTG9nZ2VyLCBmb3JtYXR9ID0gcmVxdWlyZSgnd2luc3RvbicpO1xuXG4vL2NyZWF0ZSB3aW5zdG9uIGxvZ2dlclxuY29uc3QgbG9nZ2VyID0gY3JlYXRlTG9nZ2VyKHtcbiAgICBmb3JtYXQ6IGZvcm1hdC5jb21iaW5lKFxuICAgICAgICBmb3JtYXQudGltZXN0YW1wKCksXG4gICAgICAgIGZvcm1hdC5qc29uKClcbiAgICApLFxuICAgIHRyYW5zcG9ydHM6IFtcbiAgICAgIG5ldyB0cmFuc3BvcnRzLkNvbnNvbGUoe1xuICAgICAgICBoYW5kbGVFeGNlcHRpb25zOiB0cnVlLFxuICAgICAgICB0aW1lc3RhbXA6IHRydWVcbiAgICAgIH0pXG4gICAgXSxcbiAgICBleGl0T25FcnJvcjogZmFsc2Vcbn0pO1xuXG4vKipcbiAqIGdlbmVyaWMgbG9nZ2VyLCB3cmFwcyB3aW5zdG9uXG4gKi9cbmNsYXNzIFdpbnN0b25Mb2dnZXIge1xuXG4gICAgY29uc3RydWN0b3IodGFnKSB7XG4gICAgICAgIHRoaXMudGFnID0gdGFnO1xuICAgIH1cblxuICAgIGRlYnVnKHMpIHtcbiAgICAgICAgbG9nZ2VyLmRlYnVnKGZvcm1hdE1lc3NhZ2UodGhpcy50YWcsIHMpKTtcbiAgICB9XG5cbiAgICBpbmZvKHMpIHtcbiAgICAgICAgbG9nZ2VyLmluZm8oZm9ybWF0TWVzc2FnZSh0aGlzLnRhZywgcykpO1xuICAgIH1cblxuICAgIHdhcm4ocykge1xuICAgICAgICBsb2dnZXIud2Fybihmb3JtYXRNZXNzYWdlKHRoaXMudGFnLCBzKSk7XG4gICAgfVxuXG4gICAgZXJyb3Iocykge1xuICAgICAgICBsb2dnZXIuZXJyb3IoZm9ybWF0TWVzc2FnZSh0aGlzLnRhZywgcykpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZm9ybWF0TWVzc2FnZSh0YWcsIG1lc3NhZ2UpIHtcbiAgICByZXR1cm4gYCR7dGFnfTogJHttZXNzYWdlfWA7XG59XG5cbmV4cG9ydHMuY3JlYXRlTG9nZ2VyID0gKHRhZykgPT4geyByZXR1cm4gbmV3IFdpbnN0b25Mb2dnZXIodGFnKTsgfTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "winstonLogger.js"
      ],
      "names": [
        "require",
        "transports",
        "createLogger",
        "format",
        "logger",
        "combine",
        "timestamp",
        "json",
        "Console",
        "handleExceptions",
        "exitOnError",
        "WinstonLogger",
        "tag",
        "s",
        "debug",
        "formatMessage",
        "info",
        "warn",
        "error",
        "message",
        "exports"
      ],
      "mappings": "AAAA;AAEA;;;;;;;;;;;;;;eAQ2CA,OAAO,CAAC,SAAD,C;IAA3CC,U,YAAAA,U;IAAYC,Y,YAAAA,Y;IAAcC,M,YAAAA,M,EAEjC;;;AACA,IAAMC,MAAM,GAAGF,YAAY,CAAC;AACxBC,EAAAA,MAAM,EAAEA,MAAM,CAACE,OAAP,CACJF,MAAM,CAACG,SAAP,EADI,EAEJH,MAAM,CAACI,IAAP,EAFI,CADgB;AAKxBN,EAAAA,UAAU,EAAE,CACV,IAAIA,UAAU,CAACO,OAAf,CAAuB;AACrBC,IAAAA,gBAAgB,EAAE,IADG;AAErBH,IAAAA,SAAS,EAAE;AAFU,GAAvB,CADU,CALY;AAWxBI,EAAAA,WAAW,EAAE;AAXW,CAAD,CAA3B;AAcA;;;;IAGMC,a;;;AAEF,yBAAYC,GAAZ,EAAiB;AAAA;;AACb,SAAKA,GAAL,GAAWA,GAAX;AACH;;;;0BAEKC,C,EAAG;AACLT,MAAAA,MAAM,CAACU,KAAP,CAAaC,aAAa,CAAC,KAAKH,GAAN,EAAWC,CAAX,CAA1B;AACH;;;yBAEIA,C,EAAG;AACJT,MAAAA,MAAM,CAACY,IAAP,CAAYD,aAAa,CAAC,KAAKH,GAAN,EAAWC,CAAX,CAAzB;AACH;;;yBAEIA,C,EAAG;AACJT,MAAAA,MAAM,CAACa,IAAP,CAAYF,aAAa,CAAC,KAAKH,GAAN,EAAWC,CAAX,CAAzB;AACH;;;0BAEKA,C,EAAG;AACLT,MAAAA,MAAM,CAACc,KAAP,CAAaH,aAAa,CAAC,KAAKH,GAAN,EAAWC,CAAX,CAA1B;AACH;;;;;;AAGL,SAASE,aAAT,CAAuBH,GAAvB,EAA4BO,OAA5B,EAAqC;AACjC,mBAAUP,GAAV,eAAkBO,OAAlB;AACH;;AAEDC,OAAO,CAAClB,YAAR,GAAuB,UAACU,GAAD,EAAS;AAAE,SAAO,IAAID,aAAJ,CAAkBC,GAAlB,CAAP;AAAgC,CAAlE",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "sourcesContent": [
        "'use strict';\n\n/**\n * ------------------------\n * implements a logger factory, returning a logger that implements winston.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\n\nconst {transports, createLogger, format} = require('winston');\n\n//create winston logger\nconst logger = createLogger({\n    format: format.combine(\n        format.timestamp(),\n        format.json()\n    ),\n    transports: [\n      new transports.Console({\n        handleExceptions: true,\n        timestamp: true\n      })\n    ],\n    exitOnError: false\n});\n\n/**\n * generic logger, wraps winston\n */\nclass WinstonLogger {\n\n    constructor(tag) {\n        this.tag = tag;\n    }\n\n    debug(s) {\n        logger.debug(formatMessage(this.tag, s));\n    }\n\n    info(s) {\n        logger.info(formatMessage(this.tag, s));\n    }\n\n    warn(s) {\n        logger.warn(formatMessage(this.tag, s));\n    }\n\n    error(s) {\n        logger.error(formatMessage(this.tag, s));\n    }\n}\n\nfunction formatMessage(tag, message) {\n    return `${tag}: ${message}`;\n}\n\nexports.createLogger = (tag) => { return new WinstonLogger(tag); };"
      ]
    },
    "sourceType": "script",
    "mtime": 1567608962550
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/exceptionHandler.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/exceptionHandler.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/exceptionHandler.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/exceptionHandler.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
        "sourceFileName": "exceptionHandler.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n/**\n * ------------------------\n * generic exception handler: wraps try/catch. Is easier on the eyes, in my opinion,\n * than try/catch.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ExceptionHandler =\n/*#__PURE__*/\nfunction () {\n  function ExceptionHandler(logger) {\n    _classCallCheck(this, ExceptionHandler);\n\n    this.logger = logger;\n  }\n  /**\n   * wraps the given expression in a try/catch, and provides standard handling for any errors.\n   *\n   * @param {fn} expr\n   * @param {json} options:  {\n   *      defaultValue: null,\n   *      onError: (e) => {},\n   *      finally: (e) => {},\n   *      functionName: ''\n   *  }\n   * @returns {*} return value of given expression\n   */\n\n\n  _createClass(ExceptionHandler, [{\n    key: \"try\",\n    value: function _try(expr, options) {\n      try {\n        return expr();\n      } catch (err) {\n        this.handleError(err);\n        if (options && options.onError) return options.onError(err);\n        return options ? options.defaultValue : null;\n      } finally {\n        if (options && options[\"finally\"]) return options[\"finally\"](err);\n      }\n    }\n    /**\n     * wraps the expression as in try(*), but in such a way as to allow for awaiting async code.\n     *\n     * @param {fn} expr\n     * @param {json} options: see try(expr, options)\n     */\n\n  }, {\n    key: \"tryAsync\",\n    value: function () {\n      var _tryAsync = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(expr, options) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return expr();\n\n              case 3:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                this.handleError(_context.t0);\n\n                if (!(options && options.onError)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", options.onError(_context.t0));\n\n              case 11:\n                return _context.abrupt(\"return\", options ? options.defaultValue : null);\n\n              case 12:\n                _context.prev = 12;\n\n                if (!(options && options[\"finally\"])) {\n                  _context.next = 15;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", options[\"finally\"]());\n\n              case 15:\n                return _context.finish(12);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 6, 12, 16]]);\n      }));\n\n      function tryAsync(_x, _x2) {\n        return _tryAsync.apply(this, arguments);\n      }\n\n      return tryAsync;\n    }()\n    /**\n     * provides standard handling for any errors.\n     *\n     * @param {*} err\n     * @param {*} functionName\n     */\n\n  }, {\n    key: \"handleError\",\n    value: function handleError(err, functionName) {\n      var prefix = functionName && functionName.length ? ' [' + functionName + '] ' : '';\n\n      if (this.logger) {\n        this.logger.error(JSON.stringify(err) + ' ' + err);\n      }\n\n      if (err.stack) console.log(err.stack);\n    }\n  }]);\n\n  return ExceptionHandler;\n}();\n\nexports.createHandler = function (logger) {\n  return new ExceptionHandler(logger);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4Y2VwdGlvbkhhbmRsZXIuanMiXSwibmFtZXMiOlsiRXhjZXB0aW9uSGFuZGxlciIsImxvZ2dlciIsImV4cHIiLCJvcHRpb25zIiwiZXJyIiwiaGFuZGxlRXJyb3IiLCJvbkVycm9yIiwiZGVmYXVsdFZhbHVlIiwiZnVuY3Rpb25OYW1lIiwicHJlZml4IiwibGVuZ3RoIiwiZXJyb3IiLCJKU09OIiwic3RyaW5naWZ5Iiwic3RhY2siLCJjb25zb2xlIiwibG9nIiwiZXhwb3J0cyIsImNyZWF0ZUhhbmRsZXIiXSwibWFwcGluZ3MiOiJBQUFBO0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFTTUEsZ0I7OztBQUNGLDRCQUFZQyxNQUFaLEVBQW9CO0FBQUE7O0FBQ2hCLFNBQUtBLE1BQUwsR0FBY0EsTUFBZDtBQUNIO0FBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7eUJBWUlDLEksRUFBTUMsTyxFQUFTO0FBQ2YsVUFBRztBQUNDLGVBQU9ELElBQUksRUFBWDtBQUNILE9BRkQsQ0FHQSxPQUFNRSxHQUFOLEVBQVU7QUFDTixhQUFLQyxXQUFMLENBQWlCRCxHQUFqQjtBQUNBLFlBQUlELE9BQU8sSUFBSUEsT0FBTyxDQUFDRyxPQUF2QixFQUNJLE9BQU9ILE9BQU8sQ0FBQ0csT0FBUixDQUFnQkYsR0FBaEIsQ0FBUDtBQUVKLGVBQU9ELE9BQU8sR0FBR0EsT0FBTyxDQUFDSSxZQUFYLEdBQTBCLElBQXhDO0FBQ0gsT0FURCxTQVVRO0FBQ0osWUFBSUosT0FBTyxJQUFJQSxPQUFPLFdBQXRCLEVBQ0ksT0FBT0EsT0FBTyxXQUFQLENBQWdCQyxHQUFoQixDQUFQO0FBQ1A7QUFDSjtBQUVEOzs7Ozs7Ozs7Ozs7K0NBTWVGLEksRUFBTUMsTzs7Ozs7Ozt1QkFFQUQsSUFBSSxFOzs7Ozs7OztBQUdqQixxQkFBS0csV0FBTDs7c0JBQ0lGLE9BQU8sSUFBSUEsT0FBTyxDQUFDRyxPOzs7OztpREFDWkgsT0FBTyxDQUFDRyxPQUFSLGE7OztpREFFSkgsT0FBTyxHQUFHQSxPQUFPLENBQUNJLFlBQVgsR0FBMEIsSTs7Ozs7c0JBR3BDSixPQUFPLElBQUlBLE9BQU8sVzs7Ozs7aURBQ1hBLE9BQU8sV0FBUCxFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSW5COzs7Ozs7Ozs7Z0NBTVlDLEcsRUFBS0ksWSxFQUFjO0FBQzNCLFVBQUlDLE1BQU0sR0FBSUQsWUFBWSxJQUFJQSxZQUFZLENBQUNFLE1BQTdCLEdBQXNDLE9BQU9GLFlBQVAsR0FBc0IsSUFBNUQsR0FBbUUsRUFBakY7O0FBRUEsVUFBSSxLQUFLUCxNQUFULEVBQWlCO0FBQ2IsYUFBS0EsTUFBTCxDQUFZVSxLQUFaLENBQWtCQyxJQUFJLENBQUNDLFNBQUwsQ0FBZVQsR0FBZixJQUFzQixHQUF0QixHQUE0QkEsR0FBOUM7QUFDSDs7QUFDRCxVQUFJQSxHQUFHLENBQUNVLEtBQVIsRUFDSUMsT0FBTyxDQUFDQyxHQUFSLENBQVlaLEdBQUcsQ0FBQ1UsS0FBaEI7QUFDUDs7Ozs7O0FBSUxHLE9BQU8sQ0FBQ0MsYUFBUixHQUF3QixVQUFDakIsTUFBRCxFQUFZO0FBQUUsU0FBTyxJQUFJRCxnQkFBSixDQUFxQkMsTUFBckIsQ0FBUDtBQUFzQyxDQUE1RSIsInNvdXJjZVJvb3QiOiIvaG9tZS9hY2VyL0Rlc2t0b3AvbWluYWNvaW4vbWluYWNvaW4vbWluYWNvaW4tc2VydmVyL3NyYy91dGlsIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogZ2VuZXJpYyBleGNlcHRpb24gaGFuZGxlcjogd3JhcHMgdHJ5L2NhdGNoLiBJcyBlYXNpZXIgb24gdGhlIGV5ZXMsIGluIG15IG9waW5pb24sXG4gKiB0aGFuIHRyeS9jYXRjaC5cbiAqXG4gKiBBdXRob3I6IEpvaG4gUi4gS29zaW5za2lcbiAqIERhdGU6IDI3IEF1ZyAyMDE5XG4gKi9cblxuY2xhc3MgRXhjZXB0aW9uSGFuZGxlciB7XG4gICAgY29uc3RydWN0b3IobG9nZ2VyKSB7XG4gICAgICAgIHRoaXMubG9nZ2VyID0gbG9nZ2VyO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHdyYXBzIHRoZSBnaXZlbiBleHByZXNzaW9uIGluIGEgdHJ5L2NhdGNoLCBhbmQgcHJvdmlkZXMgc3RhbmRhcmQgaGFuZGxpbmcgZm9yIGFueSBlcnJvcnMuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge2ZufSBleHByXG4gICAgICogQHBhcmFtIHtqc29ufSBvcHRpb25zOiAge1xuICAgICAqICAgICAgZGVmYXVsdFZhbHVlOiBudWxsLFxuICAgICAqICAgICAgb25FcnJvcjogKGUpID0+IHt9LFxuICAgICAqICAgICAgZmluYWxseTogKGUpID0+IHt9LFxuICAgICAqICAgICAgZnVuY3Rpb25OYW1lOiAnJ1xuICAgICAqICB9XG4gICAgICogQHJldHVybnMgeyp9IHJldHVybiB2YWx1ZSBvZiBnaXZlbiBleHByZXNzaW9uXG4gICAgICovXG4gICAgdHJ5KGV4cHIsIG9wdGlvbnMpIHtcbiAgICAgICAgdHJ5e1xuICAgICAgICAgICAgcmV0dXJuIGV4cHIoKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaChlcnIpe1xuICAgICAgICAgICAgdGhpcy5oYW5kbGVFcnJvcihlcnIpO1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5vbkVycm9yKVxuICAgICAgICAgICAgICAgIHJldHVybiBvcHRpb25zLm9uRXJyb3IoZXJyKTtcblxuICAgICAgICAgICAgcmV0dXJuIG9wdGlvbnMgPyBvcHRpb25zLmRlZmF1bHRWYWx1ZSA6IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLmZpbmFsbHkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIG9wdGlvbnMuZmluYWxseShlcnIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogd3JhcHMgdGhlIGV4cHJlc3Npb24gYXMgaW4gdHJ5KCopLCBidXQgaW4gc3VjaCBhIHdheSBhcyB0byBhbGxvdyBmb3IgYXdhaXRpbmcgYXN5bmMgY29kZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7Zm59IGV4cHJcbiAgICAgKiBAcGFyYW0ge2pzb259IG9wdGlvbnM6IHNlZSB0cnkoZXhwciwgb3B0aW9ucylcbiAgICAgKi9cbiAgICBhc3luYyB0cnlBc3luYyhleHByLCBvcHRpb25zKSB7XG4gICAgICAgIHRyeXtcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCBleHByKCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2goZXJyKXtcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlRXJyb3IoZXJyKTtcbiAgICAgICAgICAgIGlmIChvcHRpb25zICYmIG9wdGlvbnMub25FcnJvcilcbiAgICAgICAgICAgICAgICByZXR1cm4gb3B0aW9ucy5vbkVycm9yKGVycik7XG5cbiAgICAgICAgICAgIHJldHVybiBvcHRpb25zID8gb3B0aW9ucy5kZWZhdWx0VmFsdWUgOiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5maW5hbGx5KVxuICAgICAgICAgICAgICAgIHJldHVybiBvcHRpb25zLmZpbmFsbHkoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHByb3ZpZGVzIHN0YW5kYXJkIGhhbmRsaW5nIGZvciBhbnkgZXJyb3JzLlxuICAgICAqXG4gICAgICogQHBhcmFtIHsqfSBlcnJcbiAgICAgKiBAcGFyYW0geyp9IGZ1bmN0aW9uTmFtZVxuICAgICAqL1xuICAgIGhhbmRsZUVycm9yKGVyciwgZnVuY3Rpb25OYW1lKSB7XG4gICAgICAgIGxldCBwcmVmaXggPSAoZnVuY3Rpb25OYW1lICYmIGZ1bmN0aW9uTmFtZS5sZW5ndGggPyAnIFsnICsgZnVuY3Rpb25OYW1lICsgJ10gJyA6ICcnKTtcblxuICAgICAgICBpZiAodGhpcy5sb2dnZXIpIHtcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLmVycm9yKEpTT04uc3RyaW5naWZ5KGVycikgKyAnICcgKyBlcnIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChlcnIuc3RhY2spXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIuc3RhY2spO1xuICAgIH1cbn1cblxuXG5leHBvcnRzLmNyZWF0ZUhhbmRsZXIgPSAobG9nZ2VyKSA9PiB7IHJldHVybiBuZXcgRXhjZXB0aW9uSGFuZGxlcihsb2dnZXIpOyB9OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "exceptionHandler.js"
      ],
      "names": [
        "ExceptionHandler",
        "logger",
        "expr",
        "options",
        "err",
        "handleError",
        "onError",
        "defaultValue",
        "functionName",
        "prefix",
        "length",
        "error",
        "JSON",
        "stringify",
        "stack",
        "console",
        "log",
        "exports",
        "createHandler"
      ],
      "mappings": "AAAA;AAEA;;;;;;;;;;;;;;;;;;;IASMA,gB;;;AACF,4BAAYC,MAAZ,EAAoB;AAAA;;AAChB,SAAKA,MAAL,GAAcA,MAAd;AACH;AAED;;;;;;;;;;;;;;;;yBAYIC,I,EAAMC,O,EAAS;AACf,UAAG;AACC,eAAOD,IAAI,EAAX;AACH,OAFD,CAGA,OAAME,GAAN,EAAU;AACN,aAAKC,WAAL,CAAiBD,GAAjB;AACA,YAAID,OAAO,IAAIA,OAAO,CAACG,OAAvB,EACI,OAAOH,OAAO,CAACG,OAAR,CAAgBF,GAAhB,CAAP;AAEJ,eAAOD,OAAO,GAAGA,OAAO,CAACI,YAAX,GAA0B,IAAxC;AACH,OATD,SAUQ;AACJ,YAAIJ,OAAO,IAAIA,OAAO,WAAtB,EACI,OAAOA,OAAO,WAAP,CAAgBC,GAAhB,CAAP;AACP;AACJ;AAED;;;;;;;;;;;;+CAMeF,I,EAAMC,O;;;;;;;uBAEAD,IAAI,E;;;;;;;;AAGjB,qBAAKG,WAAL;;sBACIF,OAAO,IAAIA,OAAO,CAACG,O;;;;;iDACZH,OAAO,CAACG,OAAR,a;;;iDAEJH,OAAO,GAAGA,OAAO,CAACI,YAAX,GAA0B,I;;;;;sBAGpCJ,OAAO,IAAIA,OAAO,W;;;;;iDACXA,OAAO,WAAP,E;;;;;;;;;;;;;;;;;;;AAInB;;;;;;;;;gCAMYC,G,EAAKI,Y,EAAc;AAC3B,UAAIC,MAAM,GAAID,YAAY,IAAIA,YAAY,CAACE,MAA7B,GAAsC,OAAOF,YAAP,GAAsB,IAA5D,GAAmE,EAAjF;;AAEA,UAAI,KAAKP,MAAT,EAAiB;AACb,aAAKA,MAAL,CAAYU,KAAZ,CAAkBC,IAAI,CAACC,SAAL,CAAeT,GAAf,IAAsB,GAAtB,GAA4BA,GAA9C;AACH;;AACD,UAAIA,GAAG,CAACU,KAAR,EACIC,OAAO,CAACC,GAAR,CAAYZ,GAAG,CAACU,KAAhB;AACP;;;;;;AAILG,OAAO,CAACC,aAAR,GAAwB,UAACjB,MAAD,EAAY;AAAE,SAAO,IAAID,gBAAJ,CAAqBC,MAArB,CAAP;AAAsC,CAA5E",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "sourcesContent": [
        "'use strict';\n\n/**\n * ------------------------\n * generic exception handler: wraps try/catch. Is easier on the eyes, in my opinion,\n * than try/catch.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\n\nclass ExceptionHandler {\n    constructor(logger) {\n        this.logger = logger;\n    }\n\n    /**\n     * wraps the given expression in a try/catch, and provides standard handling for any errors.\n     *\n     * @param {fn} expr\n     * @param {json} options:  {\n     *      defaultValue: null,\n     *      onError: (e) => {},\n     *      finally: (e) => {},\n     *      functionName: ''\n     *  }\n     * @returns {*} return value of given expression\n     */\n    try(expr, options) {\n        try{\n            return expr();\n        }\n        catch(err){\n            this.handleError(err);\n            if (options && options.onError)\n                return options.onError(err);\n\n            return options ? options.defaultValue : null;\n        }\n        finally {\n            if (options && options.finally)\n                return options.finally(err);\n        }\n    }\n\n    /**\n     * wraps the expression as in try(*), but in such a way as to allow for awaiting async code.\n     *\n     * @param {fn} expr\n     * @param {json} options: see try(expr, options)\n     */\n    async tryAsync(expr, options) {\n        try{\n            return await expr();\n        }\n        catch(err){\n            this.handleError(err);\n            if (options && options.onError)\n                return options.onError(err);\n\n            return options ? options.defaultValue : null;\n        }\n        finally {\n            if (options && options.finally)\n                return options.finally();\n        }\n    }\n\n    /**\n     * provides standard handling for any errors.\n     *\n     * @param {*} err\n     * @param {*} functionName\n     */\n    handleError(err, functionName) {\n        let prefix = (functionName && functionName.length ? ' [' + functionName + '] ' : '');\n\n        if (this.logger) {\n            this.logger.error(JSON.stringify(err) + ' ' + err);\n        }\n        if (err.stack)\n            console.log(err.stack);\n    }\n}\n\n\nexports.createHandler = (logger) => { return new ExceptionHandler(logger); };"
      ]
    },
    "sourceType": "script",
    "mtime": 1567271964391
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/TransactionPool.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/TransactionPool.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/TransactionPool.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/TransactionPool.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
        "sourceFileName": "TransactionPool.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'TXPL';\n\nvar Transaction = require('./Transaction');\n\nvar ioc = require('../../../util/iocContainer');\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: TransactionPool\n * -------------------------\n * pool of transactions that have not yet been included in the blockchain\n * (but may be eligible to be mined)\n *\n * author: John R. Kosinski\n */\n\nvar TransactionPool =\n/*#__PURE__*/\nfunction () {\n  _createClass(TransactionPool, [{\n    key: \"transactions\",\n    get: function get() {\n      return this._transactions;\n    }\n  }, {\n    key: \"txCount\",\n    get: function get() {\n      return this._transactions.length;\n    }\n    /**\n     * constructor\n     */\n\n  }]);\n\n  function TransactionPool() {\n    _classCallCheck(this, TransactionPool);\n\n    this._transactions = [];\n  }\n\n  _createClass(TransactionPool, [{\n    key: \"updateOrAddTransaction\",\n    value: function updateOrAddTransaction(transaction) {\n      var _this = this;\n\n      exception[\"try\"](function () {\n        //get existing trans if exists\n        var existing = _this.transactions.find(function (t) {\n          return t.id === transaction.id;\n        });\n\n        if (existing) {\n          logger.info(\"updating transaction \".concat(transaction.id, \": \").concat(transaction));\n          _this.transactions[_this.transactions.indexOf(existing)] = transaction;\n        } else {\n          logger.info(\"creating new transaction: \".concat(transaction));\n\n          _this.transactions.push(transaction);\n        }\n      });\n    }\n    /*Transaction*/\n\n  }, {\n    key: \"existingTransaction\",\n    value: function existingTransaction(address) {\n      var _this2 = this;\n\n      return exception[\"try\"](function () {\n        return _this2.transactions.find(function (t) {\n          return t.input.address === address;\n        });\n      });\n    }\n    /*Transaction[]*/\n\n  }, {\n    key: \"pendingTransactions\",\n    value: function pendingTransactions(address) {\n      var _this3 = this;\n\n      return exception[\"try\"](function () {\n        return _this3.transactions.filter(function (t) {\n          return t.input.address === address;\n        });\n      });\n    }\n    /**\n     * gets a list of valid transactions; ones whose total output is equal to input\n     * with valid signature\n     * @param {Blockchain} blockchain (optional) if specified, will check for duplicate transaction \n     * id in chain (transaction duplicate is not valid)\n     * @returns {Transaction[]}\n     */\n\n    /*Transaction[]*/\n\n  }, {\n    key: \"validTransactions\",\n    value: function validTransactions(blockchain) {\n      return this.transactions.filter(function (transaction) {\n        return exception[\"try\"](function () {\n          // calculate total of all outputs\n          var outputTotal = transaction.outputs ? transaction.outputs.reduce(function (total, output) {\n            return total + output.amount;\n          }, 0) : 0; //make sure the transaction hasn't already been added to the chain\n\n          if (blockchain && blockchain.containsTransaction(transaction.id)) {\n            logger.warn(\"transaction \".concat(transaction.id, \" already exists on the chain and should not be included\"));\n            return;\n          } //check that outputs == input\n\n\n          if (transaction.input.amount !== outputTotal) {\n            logger.warn(\"invalid transaction \".concat(transaction.id, \" from \").concat(transaction.input.address));\n            return;\n          } //check valid signature\n\n\n          if (!Transaction.verifyTransaction(transaction)) {\n            logger.warn(\"invalid signature for transaction \".concat(transaction.id, \" from \").concat(transaction.input.address));\n            return;\n          }\n\n          return transaction;\n        });\n      });\n    }\n    /**\n     * clears all transactions from pool\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._transactions = [];\n    }\n  }]);\n\n  return TransactionPool;\n}();\n\nmodule.exports = TransactionPool;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "TransactionPool.js"
      ],
      "names": [
        "LOG_TAG",
        "Transaction",
        "require",
        "ioc",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "TransactionPool",
        "_transactions",
        "length",
        "transaction",
        "existing",
        "transactions",
        "find",
        "t",
        "id",
        "info",
        "indexOf",
        "push",
        "address",
        "input",
        "filter",
        "blockchain",
        "outputTotal",
        "outputs",
        "reduce",
        "total",
        "output",
        "amount",
        "containsTransaction",
        "warn",
        "verifyTransaction",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAG,MAAhB;;AAEA,IAAMC,WAAW,GAAGC,OAAO,CAAC,eAAD,CAA3B;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,4BAAD,CAAnB;;AAEA,IAAME,MAAM,GAAGD,GAAG,CAACE,aAAJ,CAAkBC,YAAlB,CAA+BN,OAA/B,CAAf;AACA,IAAMO,SAAS,GAAGJ,GAAG,CAACK,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;;IAQMM,e;;;;;wBACiB;AAAE,aAAO,KAAKC,aAAZ;AAA4B;;;wBACnC;AAAE,aAAO,KAAKA,aAAL,CAAmBC,MAA1B;AAAmC;AAEnD;;;;;;AAGA,6BAAc;AAAA;;AACV,SAAKD,aAAL,GAAqB,EAArB;AACH;;;;2CAEsBE,W,EAAa;AAAA;;AAChCN,MAAAA,SAAS,OAAT,CAAc,YAAM;AAChB;AACA,YAAIO,QAAQ,GAAG,KAAI,CAACC,YAAL,CAAkBC,IAAlB,CAAuB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,EAAF,KAASL,WAAW,CAACK,EAAzB;AAAA,SAAxB,CAAf;;AAEA,YAAIJ,QAAJ,EAAc;AACVV,UAAAA,MAAM,CAACe,IAAP,gCAAoCN,WAAW,CAACK,EAAhD,eAAuDL,WAAvD;AACA,UAAA,KAAI,CAACE,YAAL,CAAkB,KAAI,CAACA,YAAL,CAAkBK,OAAlB,CAA0BN,QAA1B,CAAlB,IAAyDD,WAAzD;AACH,SAHD,MAIK;AACDT,UAAAA,MAAM,CAACe,IAAP,qCAAyCN,WAAzC;;AACA,UAAA,KAAI,CAACE,YAAL,CAAkBM,IAAlB,CAAuBR,WAAvB;AACH;AACJ,OAZD;AAaH;AAED;;;;wCAAoCS,O,EAAS;AAAA;;AACzC,aAAOf,SAAS,OAAT,CAAc,YAAM;AACvB,eAAO,MAAI,CAACQ,YAAL,CAAkBC,IAAlB,CAAuB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACM,KAAF,CAAQD,OAAR,KAAoBA,OAAxB;AAAA,SAAxB,CAAP;AACH,OAFM,CAAP;AAGH;AAED;;;;wCAAsCA,O,EAAS;AAAA;;AAC3C,aAAOf,SAAS,OAAT,CAAc,YAAM;AACvB,eAAO,MAAI,CAACQ,YAAL,CAAkBS,MAAlB,CAAyB,UAAAP,CAAC;AAAA,iBAAIA,CAAC,CAACM,KAAF,CAAQD,OAAR,KAAoBA,OAAxB;AAAA,SAA1B,CAAP;AACH,OAFM,CAAP;AAGH;AAED;;;;;;;;AAOA;;;;sCAAoCG,U,EAAY;AAC5C,aAAO,KAAKV,YAAL,CAAkBS,MAAlB,CAAyB,UAAAX,WAAW,EAAI;AAC3C,eAAON,SAAS,OAAT,CAAc,YAAM;AACvB;AACA,cAAMmB,WAAW,GAAGb,WAAW,CAACc,OAAZ,GAChBd,WAAW,CAACc,OAAZ,CAAoBC,MAApB,CAA2B,UAACC,KAAD,EAAQC,MAAR,EAAiB;AACxC,mBAAOD,KAAK,GAAGC,MAAM,CAACC,MAAtB;AACH,WAFD,EAEE,CAFF,CADgB,GAId,CAJN,CAFuB,CAQvB;;AACA,cAAIN,UAAU,IAAIA,UAAU,CAACO,mBAAX,CAA+BnB,WAAW,CAACK,EAA3C,CAAlB,EAAiE;AAC7Dd,YAAAA,MAAM,CAAC6B,IAAP,uBAA2BpB,WAAW,CAACK,EAAvC;AACA;AACH,WAZsB,CAcvB;;;AACA,cAAIL,WAAW,CAACU,KAAZ,CAAkBQ,MAAlB,KAA6BL,WAAjC,EAA+C;AAC3CtB,YAAAA,MAAM,CAAC6B,IAAP,+BAAmCpB,WAAW,CAACK,EAA/C,mBAA0DL,WAAW,CAACU,KAAZ,CAAkBD,OAA5E;AACA;AACH,WAlBsB,CAoBvB;;;AACA,cAAI,CAACrB,WAAW,CAACiC,iBAAZ,CAA8BrB,WAA9B,CAAL,EAAiD;AAC7CT,YAAAA,MAAM,CAAC6B,IAAP,6CAAiDpB,WAAW,CAACK,EAA7D,mBAAwEL,WAAW,CAACU,KAAZ,CAAkBD,OAA1F;AACA;AACH;;AAED,iBAAOT,WAAP;AACH,SA3BM,CAAP;AA4BH,OA7BM,CAAP;AA8BH;AAED;;;;;;4BAGQ;AACJ,WAAKF,aAAL,GAAqB,EAArB;AACH;;;;;;AAGLwB,MAAM,CAACC,OAAP,GAAiB1B,eAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'TXPL';\n\nconst Transaction = require('./Transaction');\nconst ioc = require('../../../util/iocContainer');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: TransactionPool\n * -------------------------\n * pool of transactions that have not yet been included in the blockchain\n * (but may be eligible to be mined)\n *\n * author: John R. Kosinski\n */\nclass TransactionPool {\n    get transactions() { return this._transactions; }\n    get txCount() { return this._transactions.length; }\n\n    /**\n     * constructor\n     */\n    constructor() {\n        this._transactions = [];\n    }\n\n    updateOrAddTransaction(transaction) {\n        exception.try(() => {\n            //get existing trans if exists\n            let existing = this.transactions.find(t => t.id === transaction.id);\n\n            if (existing) {\n                logger.info(`updating transaction ${transaction.id}: ${transaction}`);\n                this.transactions[this.transactions.indexOf(existing)] = transaction;\n            }\n            else {\n                logger.info(`creating new transaction: ${transaction}`);\n                this.transactions.push(transaction);\n            }\n        });\n    }\n\n    /*Transaction*/ existingTransaction(address) {\n        return exception.try(() => {\n            return this.transactions.find(t => t.input.address === address);\n        });\n    }\n    \n    /*Transaction[]*/ pendingTransactions(address) {\n        return exception.try(() => {\n            return this.transactions.filter(t => t.input.address === address);\n        });\n    }\n\n    /**\n     * gets a list of valid transactions; ones whose total output is equal to input\n     * with valid signature\n     * @param {Blockchain} blockchain (optional) if specified, will check for duplicate transaction \n     * id in chain (transaction duplicate is not valid)\n     * @returns {Transaction[]}\n     */\n    /*Transaction[]*/ validTransactions(blockchain) {\n        return this.transactions.filter(transaction => {\n            return exception.try(() => {\n                // calculate total of all outputs\n                const outputTotal = transaction.outputs ?\n                    transaction.outputs.reduce((total, output)=>{\n                        return total + output.amount;\n                    },0)\n                    : 0;\n                \n                //make sure the transaction hasn't already been added to the chain\n                if (blockchain && blockchain.containsTransaction(transaction.id)){\n                    logger.warn(`transaction ${transaction.id} already exists on the chain and should not be included`); \n                    return;\n                }\n\n                //check that outputs == input\n                if (transaction.input.amount !== outputTotal ) {\n                    logger.warn(`invalid transaction ${transaction.id} from ${transaction.input.address}`);\n                    return;\n                }\n\n                //check valid signature\n                if (!Transaction.verifyTransaction(transaction)) {\n                    logger.warn(`invalid signature for transaction ${transaction.id} from ${transaction.input.address}`);\n                    return;\n                }\n\n                return transaction;\n            });\n        });\n    }\n\n    /**\n     * clears all transactions from pool\n     */\n    clear() {\n        this._transactions = [];\n    }\n}\n\nmodule.exports = TransactionPool;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567749101029
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Wallet.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Wallet.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Wallet.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes/Wallet.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
        "sourceFileName": "Wallet.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'WAL';\n\nvar _require = require('../../../config'),\n    INITIAL_BALANCE = _require.INITIAL_BALANCE;\n\nvar cryptoUtil = require('../../../util/cryptoUtil');\n\nvar ioc = require('../../../util/iocContainer');\n\nvar Transaction = require('./Transaction');\n\nvar EventEmitter = require('events');\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: Wallet\n * ----------------\n * wallet class with public/private key pair and balance\n *\n * supports these events:\n * - update\n *\n * author: John R. Kosinski\n */\n\nvar Wallet =\n/*#__PURE__*/\nfunction () {\n  _createClass(Wallet, [{\n    key: \"balance\",\n    get: function get() {\n      return this._balance;\n    }\n  }, {\n    key: \"keyPair\",\n    get: function get() {\n      return this._keyPair;\n    }\n  }, {\n    key: \"publicKey\",\n    get: function get() {\n      return this._publicKey;\n    }\n    /**\n     * constructor\n     */\n\n  }]);\n\n  function Wallet() {\n    _classCallCheck(this, Wallet);\n\n    this._balance = INITIAL_BALANCE;\n    this._keyPair = cryptoUtil.generateKeyPair();\n    this._publicKey = this.keyPair.getPublic().encode('hex');\n    this._emitter = new EventEmitter();\n    logger.info(\"wallet created: public key is \".concat(this._publicKey.toString()));\n  }\n  /**\n   * signs the given data using the wallet's keypair\n   * @param {string} data\n   * @returns {string}\n   */\n\n  /*Signature*/\n\n\n  _createClass(Wallet, [{\n    key: \"sign\",\n    value: function sign(data) {\n      return this.keyPair.sign(data);\n    }\n    /**\n     * originates a transaction to send funds from this wallet to a specified \n     * wallet; creates the transaction, signs it, adds it to the tx pool, and \n     * returns it. \n     * @param {string} recipient public key of recipient wallet\n     * @param {float} amount amount to send\n     * @param {Blockchain} blockchain \n     * @param {TransactionPool} transactionPool \n     * @returns {Transaction}\n     */\n\n    /*Transaction*/\n\n  }, {\n    key: \"createTransaction\",\n    value: function createTransaction(recipient, amount, blockchain, transactionPool) {\n      var _this = this;\n\n      return exception[\"try\"](function () {\n        logger.info(\"creating transaction: send \".concat(amount, \" to \").concat(recipient)); //update balance\n\n        _this.updateBalance(blockchain); //disallow transactions to myself \n\n\n        if (recipient === _this.publicKey) {\n          logger.warn('cannot send a transaction to yourself!');\n          return;\n        } //disallow transaction if more than balance\n\n\n        if (amount > _this.balance) {\n          logger.warn(\"amount: \".concat(amount, \" exceeds the current balance: \").concat(_this.balance));\n          return;\n        } //get existing transaction\n\n\n        var transaction = transactionPool.existingTransaction(_this.publicKey);\n\n        if (transaction) {\n          //if existing transaction, we have to take its amount into account \n          //when calculating the balance \n          var combinedAmount = amount + transaction.outputs[0].amount;\n\n          if (combinedAmount > _this.balance) {\n            logger.warn(\"combined amount: \".concat(combinedAmount, \" exceeds the current balance: \").concat(_this.balance));\n            return;\n          }\n\n          transaction.update(_this, recipient, amount);\n        } else {\n          transaction = Transaction.newTransaction(_this, recipient, amount);\n          transactionPool.updateOrAddTransaction(transaction);\n        }\n\n        return transaction;\n      });\n    }\n    /**\n     * recalculates the wallet's balance according to the transactions in the given blockchain\n     * @returns {float} the calculated balance\n     * @param {Blockchain} blockchain\n     */\n\n    /*float*/\n\n  }, {\n    key: \"calculateBalance\",\n    value: function calculateBalance(blockchain) {\n      var _this2 = this;\n\n      return exception[\"try\"](function () {\n        //existing balance\n        var balance = INITIAL_BALANCE; // store all the transactions in blockchain, in temp array\n\n        var transactions = [];\n        blockchain.chain.forEach(function (block) {\n          return block.data.forEach(function (transaction) {\n            transactions.push(transaction);\n          });\n        }); //get all transactions sent from this wallet\n\n        var inputTransactions = transactions.filter(function (t) {\n          return t.input.address === _this2.publicKey;\n        });\n        var lastTransTime = 0;\n\n        if (inputTransactions.length > 0) {\n          //get latest transaction\n          var recentInputTrans = inputTransactions.reduce(function (prev, current) {\n            return prev.input.timestamp > current.input.timestamp ? prev : current;\n          }); //balance is output back to sender\n\n          balance = recentInputTrans.outputs.find(function (output) {\n            return output.address === _this2.publicKey;\n          }).amount; // save the timestamp of the latest transaction made by the wallet\n\n          lastTransTime = recentInputTrans.input.timestamp;\n        } // get the transactions that were addressed to this wallet ie somebody sent some moeny\n        // and add its ouputs.\n        // since we save the timestamp we would only add the outputs of the transactions received\n        // only after the latest transactions made by us\n\n\n        transactions.forEach(function (transaction) {\n          if (transaction.input.timestamp > lastTransTime) {\n            transaction.outputs.find(function (output) {\n              if (output.address === _this2.publicKey) {\n                balance += output.amount;\n              }\n            });\n          }\n        });\n        return balance;\n      });\n    }\n    /**\n     * recalculates the wallet's balance according to the transactions in the given blockchain\n     * and replaces the current balance with the calculated balance\n     * @param {Blockchain} blockchain\n     */\n\n  }, {\n    key: \"updateBalance\",\n    value: function updateBalance(blockchain) {\n      var _this3 = this;\n\n      exception[\"try\"](function () {\n        var newBalance = _this3.calculateBalance(blockchain);\n\n        if (newBalance !== _this3._balance) {\n          _this3._balance = _this3.calculateBalance(blockchain);\n\n          _this3._emitter.emit('update');\n        }\n      });\n    }\n    /**\n     * subscribe to an event\n     * @param {string} eventName\n     * @param {fn} callback\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(eventName, callback) {\n      if (eventName && callback) {\n        this._emitter.on(eventName, callback);\n      }\n    }\n    /**\n     * returns a string representation\n     */\n\n    /*string*/\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Wallet -\\n        publicKey: \".concat(this.publicKey.toString(), \",\\n        balance  : \").concat(this.balance);\n    }\n    /**\n     * returns a json representation\n     */\n\n    /*json*/\n\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      return {\n        publicKey: this.publicKey.toString(),\n        privateKey: this.keyPair.priv.toString(16, 2),\n        balance: this.balance\n      };\n    }\n    /**\n     * returns a json representation converted to string\n     */\n\n    /*string*/\n\n  }, {\n    key: \"toJsonString\",\n    value: function toJsonString() {\n      return JSON.stringify(this.toJson());\n    }\n    /**\n     * creates a new wallet to be used as the sender when awarding the mining reward\n     * @returns {Wallet}\n     */\n\n  }], [{\n    key: \"blockchainWallet\",\n    value: function blockchainWallet() {\n      var _this4 = this;\n\n      return exception[\"try\"](function () {\n        var blockchainWallet = new _this4();\n        blockchainWallet.address = 'blockchain-wallet';\n        return blockchainWallet;\n      });\n    }\n    /**\n     * deserializes a wallet instance from JSON data\n     * @returns {Wallet}\n     * @param {json} json\n     */\n\n  }, {\n    key: \"fromJson\",\n    value: function fromJson(json) {\n      var _this5 = this;\n\n      return exception[\"try\"](function () {\n        var output = new _this5();\n        output._balance = json.balance;\n        output._keyPair = cryptoUtil.deserializeKeyPair(json.publicKey, json.privateKey);\n        output._publicKey = output.keyPair.getPublic().encode('hex');\n        return output;\n      });\n    }\n  }]);\n\n  return Wallet;\n}();\n\nmodule.exports = Wallet;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Wallet.js"
      ],
      "names": [
        "LOG_TAG",
        "require",
        "INITIAL_BALANCE",
        "cryptoUtil",
        "ioc",
        "Transaction",
        "EventEmitter",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Wallet",
        "_balance",
        "_keyPair",
        "_publicKey",
        "generateKeyPair",
        "keyPair",
        "getPublic",
        "encode",
        "_emitter",
        "info",
        "toString",
        "data",
        "sign",
        "recipient",
        "amount",
        "blockchain",
        "transactionPool",
        "updateBalance",
        "publicKey",
        "warn",
        "balance",
        "transaction",
        "existingTransaction",
        "combinedAmount",
        "outputs",
        "update",
        "newTransaction",
        "updateOrAddTransaction",
        "transactions",
        "chain",
        "forEach",
        "block",
        "push",
        "inputTransactions",
        "filter",
        "t",
        "input",
        "address",
        "lastTransTime",
        "length",
        "recentInputTrans",
        "reduce",
        "prev",
        "current",
        "timestamp",
        "find",
        "output",
        "newBalance",
        "calculateBalance",
        "emit",
        "eventName",
        "callback",
        "on",
        "privateKey",
        "priv",
        "JSON",
        "stringify",
        "toJson",
        "blockchainWallet",
        "json",
        "deserializeKeyPair",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAG,KAAhB;;eAE4BC,OAAO,CAAC,iBAAD,C;IAA3BC,e,YAAAA,e;;AACR,IAAMC,UAAU,GAAGF,OAAO,CAAC,0BAAD,CAA1B;;AACA,IAAMG,GAAG,GAAGH,OAAO,CAAC,4BAAD,CAAnB;;AACA,IAAMI,WAAW,GAAGJ,OAAO,CAAC,eAAD,CAA3B;;AACA,IAAMK,YAAY,GAAGL,OAAO,CAAC,QAAD,CAA5B;;AAEA,IAAMM,MAAM,GAAGH,GAAG,CAACI,aAAJ,CAAkBC,YAAlB,CAA+BT,OAA/B,CAAf;AACA,IAAMU,SAAS,GAAGN,GAAG,CAACO,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;;;;IAUMM,M;;;;;wBACY;AAAE,aAAO,KAAKC,QAAZ;AAAuB;;;wBACzB;AAAE,aAAO,KAAKC,QAAZ;AAAuB;;;wBACvB;AAAE,aAAO,KAAKC,UAAZ;AAAyB;AAE3C;;;;;;AAGA,oBAAc;AAAA;;AACV,SAAKF,QAAL,GAAgBZ,eAAhB;AACA,SAAKa,QAAL,GAAgBZ,UAAU,CAACc,eAAX,EAAhB;AACA,SAAKD,UAAL,GAAkB,KAAKE,OAAL,CAAaC,SAAb,GAAyBC,MAAzB,CAAgC,KAAhC,CAAlB;AACA,SAAKC,QAAL,GAAgB,IAAIf,YAAJ,EAAhB;AAEAC,IAAAA,MAAM,CAACe,IAAP,yCAA6C,KAAKN,UAAL,CAAgBO,QAAhB,EAA7C;AACH;AAED;;;;;;AAKA;;;;;yBAAmBC,I,EAAM;AACrB,aAAO,KAAKN,OAAL,CAAaO,IAAb,CAAkBD,IAAlB,CAAP;AACH;AAED;;;;;;;;;;;AAUA;;;;sCAAkCE,S,EAAWC,M,EAAQC,U,EAAYC,e,EAAiB;AAAA;;AAC9E,aAAOnB,SAAS,OAAT,CAAc,YAAM;AACvBH,QAAAA,MAAM,CAACe,IAAP,sCAA0CK,MAA1C,iBAAuDD,SAAvD,GADuB,CAGvB;;AACA,QAAA,KAAI,CAACI,aAAL,CAAmBF,UAAnB,EAJuB,CAMvB;;;AACA,YAAIF,SAAS,KAAK,KAAI,CAACK,SAAvB,EAAkC;AAC9BxB,UAAAA,MAAM,CAACyB,IAAP,CAAY,wCAAZ;AACA;AACH,SAVsB,CAYvB;;;AACA,YAAIL,MAAM,GAAG,KAAI,CAACM,OAAlB,EAA2B;AACvB1B,UAAAA,MAAM,CAACyB,IAAP,mBAAuBL,MAAvB,2CAA8D,KAAI,CAACM,OAAnE;AACA;AACH,SAhBsB,CAkBvB;;;AACA,YAAIC,WAAW,GAAGL,eAAe,CAACM,mBAAhB,CAAoC,KAAI,CAACJ,SAAzC,CAAlB;;AAEA,YAAIG,WAAJ,EAAiB;AACb;AACA;AACA,cAAME,cAAc,GAAIT,MAAM,GAAGO,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuBV,MAAxD;;AACA,cAAIS,cAAc,GAAG,KAAI,CAACH,OAA1B,EAAmC;AAC/B1B,YAAAA,MAAM,CAACyB,IAAP,4BAAgCI,cAAhC,2CAA+E,KAAI,CAACH,OAApF;AACA;AACH;;AAEDC,UAAAA,WAAW,CAACI,MAAZ,CAAmB,KAAnB,EAAyBZ,SAAzB,EAAoCC,MAApC;AACH,SAVD,MAWK;AACDO,UAAAA,WAAW,GAAG7B,WAAW,CAACkC,cAAZ,CAA2B,KAA3B,EAAiCb,SAAjC,EAA4CC,MAA5C,CAAd;AACAE,UAAAA,eAAe,CAACW,sBAAhB,CAAuCN,WAAvC;AACH;;AAED,eAAOA,WAAP;AACH,OAtCM,CAAP;AAuCH;AAED;;;;;;AAKA;;;;qCAA2BN,U,EAAY;AAAA;;AACnC,aAAOlB,SAAS,OAAT,CAAc,YAAM;AAEvB;AACA,YAAIuB,OAAO,GAAG/B,eAAd,CAHuB,CAKvB;;AACA,YAAIuC,YAAY,GAAG,EAAnB;AACAb,QAAAA,UAAU,CAACc,KAAX,CAAiBC,OAAjB,CAAyB,UAAAC,KAAK;AAAA,iBAAIA,KAAK,CAACpB,IAAN,CAAWmB,OAAX,CAAmB,UAAAT,WAAW,EAAI;AAChEO,YAAAA,YAAY,CAACI,IAAb,CAAkBX,WAAlB;AACH,WAFiC,CAAJ;AAAA,SAA9B,EAPuB,CAWvB;;AACA,YAAMY,iBAAiB,GAAGL,YAAY,CAACM,MAAb,CACtB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,KAAF,CAAQC,OAAR,KAAoB,MAAI,CAACnB,SAA7B;AAAA,SADqB,CAA1B;AAIA,YAAIoB,aAAa,GAAG,CAApB;;AAEA,YAAIL,iBAAiB,CAACM,MAAlB,GAA2B,CAA/B,EAAkC;AAE9B;AACA,cAAMC,gBAAgB,GAAGP,iBAAiB,CAACQ,MAAlB,CACrB,UAACC,IAAD,EAAMC,OAAN;AAAA,mBAAiBD,IAAI,CAACN,KAAL,CAAWQ,SAAX,GAAuBD,OAAO,CAACP,KAAR,CAAcQ,SAArC,GAAiDF,IAAjD,GAAwDC,OAAzE;AAAA,WADqB,CAAzB,CAH8B,CAO9B;;AACAvB,UAAAA,OAAO,GAAGoB,gBAAgB,CAAChB,OAAjB,CAAyBqB,IAAzB,CAA8B,UAAAC,MAAM;AAAA,mBAAIA,MAAM,CAACT,OAAP,KAAmB,MAAI,CAACnB,SAA5B;AAAA,WAApC,EAA2EJ,MAArF,CAR8B,CAU9B;;AACAwB,UAAAA,aAAa,GAAGE,gBAAgB,CAACJ,KAAjB,CAAuBQ,SAAvC;AACH,SA9BsB,CAgCvB;AACA;AACA;AACA;;;AACAhB,QAAAA,YAAY,CAACE,OAAb,CAAqB,UAAAT,WAAW,EAAI;AAChC,cAAIA,WAAW,CAACe,KAAZ,CAAkBQ,SAAlB,GAA8BN,aAAlC,EAAiD;AAC7CjB,YAAAA,WAAW,CAACG,OAAZ,CAAoBqB,IAApB,CAAyB,UAAAC,MAAM,EAAI;AAC/B,kBAAIA,MAAM,CAACT,OAAP,KAAmB,MAAI,CAACnB,SAA5B,EAAuC;AACnCE,gBAAAA,OAAO,IAAI0B,MAAM,CAAChC,MAAlB;AACH;AACJ,aAJD;AAKH;AACJ,SARD;AAUA,eAAOM,OAAP;AACH,OA/CM,CAAP;AAgDH;AAED;;;;;;;;kCAKcL,U,EAAY;AAAA;;AACtBlB,MAAAA,SAAS,OAAT,CAAc,YAAM;AAChB,YAAMkD,UAAU,GAAG,MAAI,CAACC,gBAAL,CAAsBjC,UAAtB,CAAnB;;AACA,YAAIgC,UAAU,KAAK,MAAI,CAAC9C,QAAxB,EAAkC;AAC9B,UAAA,MAAI,CAACA,QAAL,GAAgB,MAAI,CAAC+C,gBAAL,CAAsBjC,UAAtB,CAAhB;;AACA,UAAA,MAAI,CAACP,QAAL,CAAcyC,IAAd,CAAmB,QAAnB;AACH;AACJ,OAND;AAOH;AAED;;;;;;;;uBAKGC,S,EAAWC,Q,EAAU;AACpB,UAAID,SAAS,IAAIC,QAAjB,EAA2B;AACvB,aAAK3C,QAAL,CAAc4C,EAAd,CAAiBF,SAAjB,EAA4BC,QAA5B;AACH;AACJ;AAED;;;;AAGA;;;;+BAAsB;AAClB,oDACa,KAAKjC,SAAL,CAAeR,QAAf,EADb,mCAEa,KAAKU,OAFlB;AAGH;AAED;;;;AAGA;;;;6BAAkB;AACd,aAAO;AACHF,QAAAA,SAAS,EAAE,KAAKA,SAAL,CAAeR,QAAf,EADR;AAEH2C,QAAAA,UAAU,EAAE,KAAKhD,OAAL,CAAaiD,IAAb,CAAkB5C,QAAlB,CAA2B,EAA3B,EAA8B,CAA9B,CAFT;AAGHU,QAAAA,OAAO,EAAE,KAAKA;AAHX,OAAP;AAKH;AAED;;;;AAGA;;;;mCAA0B;AACtB,aAAOmC,IAAI,CAACC,SAAL,CAAe,KAAKC,MAAL,EAAf,CAAP;AACH;AAED;;;;;;;uCAIqC;AAAA;;AACjC,aAAO5D,SAAS,OAAT,CAAc,YAAM;AACvB,YAAM6D,gBAAgB,GAAG,IAAI,MAAJ,EAAzB;AACAA,QAAAA,gBAAgB,CAACrB,OAAjB,GAA2B,mBAA3B;AACA,eAAOqB,gBAAP;AACH,OAJM,CAAP;AAKH;AAED;;;;;;;;6BAK2BC,I,EAAM;AAAA;;AAC7B,aAAO9D,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMiD,MAAM,GAAG,IAAI,MAAJ,EAAf;AAEAA,QAAAA,MAAM,CAAC7C,QAAP,GAAkB0D,IAAI,CAACvC,OAAvB;AACA0B,QAAAA,MAAM,CAAC5C,QAAP,GAAkBZ,UAAU,CAACsE,kBAAX,CAA8BD,IAAI,CAACzC,SAAnC,EAA8CyC,IAAI,CAACN,UAAnD,CAAlB;AACAP,QAAAA,MAAM,CAAC3C,UAAP,GAAoB2C,MAAM,CAACzC,OAAP,CAAeC,SAAf,GAA2BC,MAA3B,CAAkC,KAAlC,CAApB;AAEA,eAAOuC,MAAP;AACH,OARM,CAAP;AASH;;;;;;AAGLe,MAAM,CAACC,OAAP,GAAiB9D,MAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/wallet/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'WAL';\n\nconst { INITIAL_BALANCE } = require('../../../config');\nconst cryptoUtil = require('../../../util/cryptoUtil');\nconst ioc = require('../../../util/iocContainer');\nconst Transaction = require('./Transaction');\nconst EventEmitter = require('events');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: Wallet\n * ----------------\n * wallet class with public/private key pair and balance\n *\n * supports these events:\n * - update\n *\n * author: John R. Kosinski\n */\nclass Wallet {\n    get balance() { return this._balance; }\n    get keyPair() { return this._keyPair; }\n    get publicKey() { return this._publicKey; }\n\n    /**\n     * constructor\n     */\n    constructor() {\n        this._balance = INITIAL_BALANCE;\n        this._keyPair = cryptoUtil.generateKeyPair();\n        this._publicKey = this.keyPair.getPublic().encode('hex');\n        this._emitter = new EventEmitter();\n\n        logger.info(`wallet created: public key is ${this._publicKey.toString()}`);\n    }\n\n    /**\n     * signs the given data using the wallet's keypair\n     * @param {string} data\n     * @returns {string}\n     */\n    /*Signature*/ sign(data) {\n        return this.keyPair.sign(data);\n    }\n\n    /**\n     * originates a transaction to send funds from this wallet to a specified \n     * wallet; creates the transaction, signs it, adds it to the tx pool, and \n     * returns it. \n     * @param {string} recipient public key of recipient wallet\n     * @param {float} amount amount to send\n     * @param {Blockchain} blockchain \n     * @param {TransactionPool} transactionPool \n     * @returns {Transaction}\n     */\n    /*Transaction*/ createTransaction(recipient, amount, blockchain, transactionPool) {\n        return exception.try(() => {\n            logger.info(`creating transaction: send ${amount} to ${recipient}`);\n\n            //update balance\n            this.updateBalance(blockchain);\n            \n            //disallow transactions to myself \n            if (recipient === this.publicKey) {\n                logger.warn('cannot send a transaction to yourself!'); \n                return; \n            }\n\n            //disallow transaction if more than balance\n            if (amount > this.balance) {\n                logger.warn(`amount: ${amount} exceeds the current balance: ${this.balance}`);\n                return;\n            }\n\n            //get existing transaction\n            let transaction = transactionPool.existingTransaction(this.publicKey);\n\n            if (transaction) {\n                //if existing transaction, we have to take its amount into account \n                //when calculating the balance \n                const combinedAmount = (amount + transaction.outputs[0].amount);\n                if (combinedAmount > this.balance) {\n                    logger.warn(`combined amount: ${combinedAmount} exceeds the current balance: ${this.balance}`);\n                    return;\n                }\n                \n                transaction.update(this, recipient, amount);\n            }\n            else {\n                transaction = Transaction.newTransaction(this, recipient, amount);\n                transactionPool.updateOrAddTransaction(transaction);\n            }\n\n            return transaction;\n        });\n    }\n\n    /**\n     * recalculates the wallet's balance according to the transactions in the given blockchain\n     * @returns {float} the calculated balance\n     * @param {Blockchain} blockchain\n     */\n    /*float*/ calculateBalance(blockchain) {\n        return exception.try(() => {\n\n            //existing balance\n            let balance = INITIAL_BALANCE;\n\n            // store all the transactions in blockchain, in temp array\n            let transactions = [];\n            blockchain.chain.forEach(block => block.data.forEach(transaction => {\n                transactions.push(transaction);\n            }));\n\n            //get all transactions sent from this wallet\n            const inputTransactions = transactions.filter(\n                t => t.input.address === this.publicKey\n            );\n\n            let lastTransTime = 0;\n\n            if (inputTransactions.length > 0) {\n\n                //get latest transaction\n                const recentInputTrans = inputTransactions.reduce(\n                    (prev,current)=> prev.input.timestamp > current.input.timestamp ? prev : current\n                );\n\n                //balance is output back to sender\n                balance = recentInputTrans.outputs.find(output => output.address === this.publicKey).amount;\n\n                // save the timestamp of the latest transaction made by the wallet\n                lastTransTime = recentInputTrans.input.timestamp;\n            }\n\n            // get the transactions that were addressed to this wallet ie somebody sent some moeny\n            // and add its ouputs.\n            // since we save the timestamp we would only add the outputs of the transactions received\n            // only after the latest transactions made by us\n            transactions.forEach(transaction => {\n                if (transaction.input.timestamp > lastTransTime) {\n                    transaction.outputs.find(output => {\n                        if (output.address === this.publicKey) {\n                            balance += output.amount;\n                        }\n                    })\n                }\n            });\n\n            return balance;\n        });\n    }\n\n    /**\n     * recalculates the wallet's balance according to the transactions in the given blockchain\n     * and replaces the current balance with the calculated balance\n     * @param {Blockchain} blockchain\n     */\n    updateBalance(blockchain) {\n        exception.try(() => {\n            const newBalance = this.calculateBalance(blockchain);\n            if (newBalance !== this._balance) {\n                this._balance = this.calculateBalance(blockchain);\n                this._emitter.emit('update');\n            }\n        });\n    }\n\n    /**\n     * subscribe to an event\n     * @param {string} eventName\n     * @param {fn} callback\n     */\n    on(eventName, callback) {\n        if (eventName && callback) {\n            this._emitter.on(eventName, callback);\n        }\n    }\n\n    /**\n     * returns a string representation\n     */\n    /*string*/ toString() {\n        return `Wallet -\n        publicKey: ${this.publicKey.toString()},\n        balance  : ${this.balance}`;\n    }\n\n    /**\n     * returns a json representation\n     */\n    /*json*/ toJson() {\n        return {\n            publicKey: this.publicKey.toString(),\n            privateKey: this.keyPair.priv.toString(16,2),\n            balance: this.balance\n        };\n    }\n\n    /**\n     * returns a json representation converted to string\n     */\n    /*string*/ toJsonString() {\n        return JSON.stringify(this.toJson());\n    }\n\n    /**\n     * creates a new wallet to be used as the sender when awarding the mining reward\n     * @returns {Wallet}\n     */\n    static /*Wallet*/ blockchainWallet() {\n        return exception.try(() => {\n            const blockchainWallet = new this();\n            blockchainWallet.address = 'blockchain-wallet';\n            return blockchainWallet;\n        });\n    }\n\n    /**\n     * deserializes a wallet instance from JSON data\n     * @returns {Wallet}\n     * @param {json} json\n     */\n    static /*Wallet*/ fromJson(json) {\n        return exception.try(() => {\n            const output = new this();\n\n            output._balance = json.balance;\n            output._keyPair = cryptoUtil.deserializeKeyPair(json.publicKey, json.privateKey);\n            output._publicKey = output.keyPair.getPublic().encode('hex');\n\n            return output;\n        });\n    }\n}\n\nmodule.exports = Wallet;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567745375588
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/index.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar Block = require('./classes/Block');\n\nvar Blockchain = require('./classes/Blockchain');\n\nmodule.exports = {\n  Block: Block,\n  Blockchain: Blockchain\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkJsb2NrIiwicmVxdWlyZSIsIkJsb2NrY2hhaW4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxpQkFBRCxDQUFyQjs7QUFDQSxJQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQyxzQkFBRCxDQUExQjs7QUFFQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JKLEVBQUFBLEtBQUssRUFBTEEsS0FEYTtBQUViRSxFQUFBQSxVQUFVLEVBQVZBO0FBRmEsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21pbmFjb2luL21pbmFjb2luLXNlcnZlci9zcmMvbGliL2Jsb2NrY2hhaW4iLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IEJsb2NrID0gcmVxdWlyZSgnLi9jbGFzc2VzL0Jsb2NrJyk7XG5jb25zdCBCbG9ja2NoYWluID0gcmVxdWlyZSgnLi9jbGFzc2VzL0Jsb2NrY2hhaW4nKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgQmxvY2ssXG4gICAgQmxvY2tjaGFpblxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Block",
        "require",
        "Blockchain",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,iBAAD,CAArB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,sBAAD,CAA1B;;AAEAE,MAAM,CAACC,OAAP,GAAiB;AACbJ,EAAAA,KAAK,EAALA,KADa;AAEbE,EAAAA,UAAU,EAAVA;AAFa,CAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain",
      "sourcesContent": [
        "'use strict';\n\nconst Block = require('./classes/Block');\nconst Blockchain = require('./classes/Blockchain');\n\nmodule.exports = {\n    Block,\n    Blockchain\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1567354951998
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Block.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Block.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Block.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Block.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes",
        "sourceFileName": "Block.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'BLK';\n\nvar cryptoUtil = require('../../../util/cryptoUtil');\n\nvar _require = require('../../../config.js'),\n    DIFFICULTY = _require.DIFFICULTY,\n    MINE_RATE = _require.MINE_RATE;\n\nvar ioc = require('../../../util/iocContainer');\n\nvar _require2 = require('../../wallet'),\n    Transaction = _require2.Transaction;\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: Block\n * ---------------\n * implementation of a Blockchain block. \n *\n * author: John R. Kosinski\n */\n\nvar Block =\n/*#__PURE__*/\nfunction () {\n  _createClass(Block, [{\n    key: \"timestamp\",\n    get: function get() {\n      return this._timestamp;\n    }\n  }, {\n    key: \"lastHash\",\n    get: function get() {\n      return this._lastHash;\n    }\n  }, {\n    key: \"hash\",\n    get: function get() {\n      return this._hash;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._data;\n    }\n  }, {\n    key: \"nonce\",\n    get: function get() {\n      return this._nonce;\n    }\n  }, {\n    key: \"difficulty\",\n    get: function get() {\n      return this._difficulty;\n    }\n  }]);\n\n  function Block(timestamp, lastHash, hash, data, nonce, difficulty) {\n    _classCallCheck(this, Block);\n\n    this._timestamp = timestamp;\n    this._lastHash = lastHash;\n    this._hash = hash;\n    this._data = data;\n    this._nonce = nonce;\n    this._difficulty = difficulty || DIFFICULTY;\n    logger.info('block created: ' + this.toJsonString());\n  }\n\n  _createClass(Block, [{\n    key: \"toString\",\n\n    /**\n     * returns a string representation\n     */\n    value: function toString() {\n      var _this = this;\n\n      return exception[\"try\"](function () {\n        return \"Block -\\n            Timestamp : \".concat(_this.timestamp, \"\\n            Last Hash : \").concat(_this.lastHash.substring(0, 10), \"\\n            Hash      : \").concat(_this.hash.substring(0, 10), \"\\n            Data      : \").concat(_this.data, \"\\n            Difficulty: \").concat(_this.difficulty);\n      });\n    }\n    /**\n     * returns a json representation\n     */\n\n    /*json*/\n\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      var output = {\n        timestamp: this.timestamp,\n        lastHash: this.lastHash,\n        hash: this.hash,\n        difficulty: this.difficulty,\n        nonce: this.nonce,\n        data: []\n      };\n\n      if (this.data && this.data.length) {\n        this.data.forEach(function (t) {\n          if (t.toJson) output.data.push(t.toJson());\n        });\n      }\n\n      return output;\n    }\n    /**\n     * returns a json representation converted to string\n     */\n\n    /*string*/\n\n  }, {\n    key: \"toJsonString\",\n    value: function toJsonString() {\n      return JSON.stringify(this.toJson());\n    }\n    /**\n     * deserializes a Block instance from JSON data\n     * @returns {Block}\n     * @param {json} json\n     */\n\n  }, {\n    key: \"data\",\n    set: function set(d) {\n      this._data = d;\n    }\n    /**\n     * creates the special genesis block\n     * @returns {Block}\n     */\n\n  }], [{\n    key: \"genesis\",\n    value: function genesis() {\n      var _this2 = this;\n\n      return exception[\"try\"](function () {\n        return new _this2('Genesis time', '----', 'f1574-h4gh', [], 0, DIFFICULTY);\n      });\n    }\n    /**\n     * creates & returns a hash of the given data\n     * \n     * @param {int} timestamp block timestamp\n     * @param {string} lastHash hash of intended parent block\n     * @param {Transaction[]} data the data to include in the block\n     * @param {int} nonce created during mining\n     * @param {int} difficulty block mining difficulty\n     * @returns {string}\n     */\n\n  }, {\n    key: \"hash\",\n    value: function hash(timestamp, lastHash, data, nonce, difficulty) {\n      return exception[\"try\"](function () {\n        return cryptoUtil.hash({\n          timestamp: timestamp,\n          lastHash: lastHash,\n          data: Transaction.arrayToJson(data),\n          nonce: nonce,\n          difficulty: difficulty\n        });\n      });\n    }\n    /**\n     * mines a new block to be added to the chain, and returns it (without adding it to\n     * the blockchain)\n     *\n     * @param {Block} lastBlock the parent block (should be most recent block in chain)\n     * @param {Transaction[]} data transactions to be included in the block\n     */\n\n  }, {\n    key: \"mineBlock\",\n    value: function mineBlock(lastBlock, data) {\n      var _this3 = this;\n\n      return exception[\"try\"](function () {\n        var hash;\n        var timestamp = Date.now();\n        var lastHash = lastBlock.hash;\n        var difficulty = lastBlock.difficulty;\n        var nonce = 0;\n\n        do {\n          nonce++;\n          timestamp = Date.now();\n          difficulty = Block.adjustDifficulty(lastBlock, timestamp);\n          hash = Block.hash(timestamp, lastHash, data, nonce, difficulty);\n        } while (hash.substring(0, difficulty) !== '0'.repeat(difficulty));\n\n        logger.info(\"block \".concat(hash, \" mined\"));\n        return new _this3(timestamp, lastHash, hash, data, nonce, difficulty);\n      });\n    }\n    /**\n     * creates & returns a hash of the given block's essential data\n     * @returns string\n     * @param {Block} block\n     */\n\n  }, {\n    key: \"blockHash\",\n    value: function blockHash(block) {\n      return exception[\"try\"](function () {\n        //destructuring\n        var timestamp = block.timestamp,\n            lastHash = block.lastHash,\n            data = block.data,\n            nonce = block.nonce,\n            difficulty = block.difficulty;\n        return Block.hash(timestamp, lastHash, data, nonce, difficulty);\n      });\n    }\n  }, {\n    key: \"adjustDifficulty\",\n    value: function adjustDifficulty(lastBlock, currentTime) {\n      return exception[\"try\"](function () {\n        var difficulty = lastBlock.difficulty;\n        difficulty = lastBlock.timestamp + MINE_RATE > currentTime ? difficulty + 1 : difficulty - 1;\n        return difficulty;\n      });\n    }\n  }, {\n    key: \"fromJson\",\n    value: function fromJson(json) {\n      var _this4 = this;\n\n      return exception[\"try\"](function () {\n        var output = new _this4(json.timestamp, json.lastHash, json.hash, [], json.nonce, json.difficulty);\n\n        if (json.data) {\n          json.data.forEach(function (t) {\n            output.data.push(Transaction.fromJson(t));\n          });\n        }\n\n        return output;\n      });\n    }\n  }]);\n\n  return Block;\n}();\n\nmodule.exports = Block;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Block.js"
      ],
      "names": [
        "LOG_TAG",
        "cryptoUtil",
        "require",
        "DIFFICULTY",
        "MINE_RATE",
        "ioc",
        "Transaction",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Block",
        "_timestamp",
        "_lastHash",
        "_hash",
        "_data",
        "_nonce",
        "_difficulty",
        "timestamp",
        "lastHash",
        "hash",
        "data",
        "nonce",
        "difficulty",
        "info",
        "toJsonString",
        "substring",
        "output",
        "length",
        "forEach",
        "t",
        "toJson",
        "push",
        "JSON",
        "stringify",
        "d",
        "arrayToJson",
        "lastBlock",
        "Date",
        "now",
        "adjustDifficulty",
        "repeat",
        "block",
        "currentTime",
        "json",
        "fromJson",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAG,KAAhB;;AAEA,IAAMC,UAAU,GAAGC,OAAO,CAAC,0BAAD,CAA1B;;eACiCA,OAAO,CAAC,oBAAD,C;IAAhCC,U,YAAAA,U;IAAWC,S,YAAAA,S;;AACnB,IAAMC,GAAG,GAAGH,OAAO,CAAC,4BAAD,CAAnB;;gBACwBA,OAAO,CAAC,cAAD,C;IAAvBI,W,aAAAA,W;;AAER,IAAMC,MAAM,GAAGF,GAAG,CAACG,aAAJ,CAAkBC,YAAlB,CAA+BT,OAA/B,CAAf;AACA,IAAMU,SAAS,GAAGL,GAAG,CAACM,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;IAOMM,K;;;;;wBACc;AAAE,aAAO,KAAKC,UAAZ;AAAyB;;;wBAC5B;AAAE,aAAO,KAAKC,SAAZ;AAAwB;;;wBAC9B;AAAE,aAAO,KAAKC,KAAZ;AAAoB;;;wBACtB;AAAE,aAAO,KAAKC,KAAZ;AAAoB;;;wBACrB;AAAE,aAAO,KAAKC,MAAZ;AAAqB;;;wBAClB;AAAE,aAAO,KAAKC,WAAZ;AAA0B;;;AAE7C,iBAAYC,SAAZ,EAAuBC,QAAvB,EAAiCC,IAAjC,EAAuCC,IAAvC,EAA6CC,KAA7C,EAAoDC,UAApD,EAA+D;AAAA;;AAC3D,SAAKX,UAAL,GAAkBM,SAAlB;AACA,SAAKL,SAAL,GAAiBM,QAAjB;AACA,SAAKL,KAAL,GAAaM,IAAb;AACA,SAAKL,KAAL,GAAaM,IAAb;AACA,SAAKL,MAAL,GAAcM,KAAd;AACA,SAAKL,WAAL,GAAmBM,UAAU,IAAItB,UAAjC;AAEAI,IAAAA,MAAM,CAACmB,IAAP,CAAY,oBAAoB,KAAKC,YAAL,EAAhC;AACH;;;;;AAoFD;;;+BAGW;AAAA;;AACP,aAAOjB,SAAS,OAAT,CAAc,YAAM;AACvB,0DACc,KAAI,CAACU,SADnB,uCAEc,KAAI,CAACC,QAAL,CAAcO,SAAd,CAAwB,CAAxB,EAA0B,EAA1B,CAFd,uCAGc,KAAI,CAACN,IAAL,CAAUM,SAAV,CAAoB,CAApB,EAAsB,EAAtB,CAHd,uCAIc,KAAI,CAACL,IAJnB,uCAKc,KAAI,CAACE,UALnB;AAMH,OAPM,CAAP;AAQH;AAED;;;;AAGA;;;;6BAAkB;AACd,UAAMI,MAAM,GAAG;AACXT,QAAAA,SAAS,EAAE,KAAKA,SADL;AAEXC,QAAAA,QAAQ,EAAE,KAAKA,QAFJ;AAGXC,QAAAA,IAAI,EAAE,KAAKA,IAHA;AAIXG,QAAAA,UAAU,EAAE,KAAKA,UAJN;AAKXD,QAAAA,KAAK,EAAE,KAAKA,KALD;AAMXD,QAAAA,IAAI,EAAE;AANK,OAAf;;AAWA,UAAI,KAAKA,IAAL,IAAa,KAAKA,IAAL,CAAUO,MAA3B,EAAmC;AAC/B,aAAKP,IAAL,CAAUQ,OAAV,CAAkB,UAAAC,CAAC,EAAI;AACnB,cAAIA,CAAC,CAACC,MAAN,EACIJ,MAAM,CAACN,IAAP,CAAYW,IAAZ,CAAiBF,CAAC,CAACC,MAAF,EAAjB;AACP,SAHD;AAIH;;AAED,aAAOJ,MAAP;AACH;AAED;;;;AAGA;;;;mCAA0B;AACtB,aAAOM,IAAI,CAACC,SAAL,CAAe,KAAKH,MAAL,EAAf,CAAP;AACH;AAED;;;;;;;;sBAhISI,C,EAAG;AAAE,WAAKpB,KAAL,GAAaoB,CAAb;AAAiB;AAE/B;;;;;;;8BAI2B;AAAA;;AACvB,aAAO3B,SAAS,OAAT,CAAc,YAAM;AACvB,eAAO,IAAI,MAAJ,CAAS,cAAT,EAAwB,MAAxB,EAA+B,YAA/B,EAA4C,EAA5C,EAA+C,CAA/C,EAAiDP,UAAjD,CAAP;AACH,OAFM,CAAP;AAGH;AAED;;;;;;;;;;;;;yBAUuBiB,S,EAAWC,Q,EAAUE,I,EAAMC,K,EAAOC,U,EAAW;AAChE,aAAOf,SAAS,OAAT,CAAc,YAAM;AACvB,eAAOT,UAAU,CAACqB,IAAX,CAAgB;AACnBF,UAAAA,SAAS,EAATA,SADmB;AAEnBC,UAAAA,QAAQ,EAARA,QAFmB;AAGnBE,UAAAA,IAAI,EAAEjB,WAAW,CAACgC,WAAZ,CAAwBf,IAAxB,CAHa;AAInBC,UAAAA,KAAK,EAALA,KAJmB;AAKnBC,UAAAA,UAAU,EAAVA;AALmB,SAAhB,CAAP;AAOH,OARM,CAAP;AASH;AAED;;;;;;;;;;8BAO2Bc,S,EAAWhB,I,EAAK;AAAA;;AACvC,aAAOb,SAAS,OAAT,CAAc,YAAM;AACvB,YAAIY,IAAJ;AACA,YAAIF,SAAS,GAAGoB,IAAI,CAACC,GAAL,EAAhB;AACA,YAAMpB,QAAQ,GAAGkB,SAAS,CAACjB,IAA3B;AAHuB,YAIjBG,UAJiB,GAIFc,SAJE,CAIjBd,UAJiB;AAKvB,YAAID,KAAK,GAAG,CAAZ;;AAEA,WAAG;AACCA,UAAAA,KAAK;AACLJ,UAAAA,SAAS,GAAGoB,IAAI,CAACC,GAAL,EAAZ;AACAhB,UAAAA,UAAU,GAAGZ,KAAK,CAAC6B,gBAAN,CAAuBH,SAAvB,EAAkCnB,SAAlC,CAAb;AACAE,UAAAA,IAAI,GAAGT,KAAK,CAACS,IAAN,CAAWF,SAAX,EAAsBC,QAAtB,EAAgCE,IAAhC,EAAsCC,KAAtC,EAA6CC,UAA7C,CAAP;AACH,SALD,QAKQH,IAAI,CAACM,SAAL,CAAe,CAAf,EAAiBH,UAAjB,MAAiC,IAAIkB,MAAJ,CAAWlB,UAAX,CALzC;;AAOAlB,QAAAA,MAAM,CAACmB,IAAP,iBAAqBJ,IAArB;AACA,eAAO,IAAI,MAAJ,CAASF,SAAT,EAAoBC,QAApB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,KAA1C,EAAiDC,UAAjD,CAAP;AACH,OAhBM,CAAP;AAiBH;AAED;;;;;;;;8BAK4BmB,K,EAAM;AAC9B,aAAOlC,SAAS,OAAT,CAAc,YAAM;AACvB;AADuB,YAEfU,SAFe,GAEkCwB,KAFlC,CAEfxB,SAFe;AAAA,YAEJC,QAFI,GAEkCuB,KAFlC,CAEJvB,QAFI;AAAA,YAEME,IAFN,GAEkCqB,KAFlC,CAEMrB,IAFN;AAAA,YAEYC,KAFZ,GAEkCoB,KAFlC,CAEYpB,KAFZ;AAAA,YAEmBC,UAFnB,GAEkCmB,KAFlC,CAEmBnB,UAFnB;AAGvB,eAAOZ,KAAK,CAACS,IAAN,CAAWF,SAAX,EAAsBC,QAAtB,EAAgCE,IAAhC,EAAsCC,KAAtC,EAA6CC,UAA7C,CAAP;AACH,OAJM,CAAP;AAKH;;;qCAE+Bc,S,EAAWM,W,EAAY;AACnD,aAAOnC,SAAS,OAAT,CAAc,YAAM;AAAA,YACjBe,UADiB,GACFc,SADE,CACjBd,UADiB;AAEvBA,QAAAA,UAAU,GAAGc,SAAS,CAACnB,SAAV,GAAsBhB,SAAtB,GAAkCyC,WAAlC,GAAgDpB,UAAU,GAAG,CAA7D,GAAiEA,UAAU,GAAG,CAA3F;AACA,eAAOA,UAAP;AACH,OAJM,CAAP;AAKH;;;6BAqDyBqB,I,EAAM;AAAA;;AAC5B,aAAOpC,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMmB,MAAM,GAAG,IAAI,MAAJ,CAASiB,IAAI,CAAC1B,SAAd,EAAyB0B,IAAI,CAACzB,QAA9B,EAAwCyB,IAAI,CAACxB,IAA7C,EAAmD,EAAnD,EAAuDwB,IAAI,CAACtB,KAA5D,EAAmEsB,IAAI,CAACrB,UAAxE,CAAf;;AAEA,YAAIqB,IAAI,CAACvB,IAAT,EAAe;AACXuB,UAAAA,IAAI,CAACvB,IAAL,CAAUQ,OAAV,CAAkB,UAAAC,CAAC,EAAI;AACnBH,YAAAA,MAAM,CAACN,IAAP,CAAYW,IAAZ,CAAiB5B,WAAW,CAACyC,QAAZ,CAAqBf,CAArB,CAAjB;AACH,WAFD;AAGH;;AAED,eAAOH,MAAP;AACH,OAVM,CAAP;AAWH;;;;;;AAILmB,MAAM,CAACC,OAAP,GAAiBpC,KAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'BLK';\n\nconst cryptoUtil = require('../../../util/cryptoUtil');\nconst { DIFFICULTY,MINE_RATE } = require('../../../config.js');\nconst ioc = require('../../../util/iocContainer');\nconst { Transaction } = require('../../wallet');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: Block\n * ---------------\n * implementation of a Blockchain block. \n *\n * author: John R. Kosinski\n */\nclass Block{\n    get timestamp() { return this._timestamp; }\n    get lastHash() { return this._lastHash; }\n    get hash() { return this._hash; }\n    get data() { return this._data; }\n    get nonce() { return this._nonce; }\n    get difficulty() { return this._difficulty; }\n\n    constructor(timestamp, lastHash, hash, data, nonce, difficulty){\n        this._timestamp = timestamp;\n        this._lastHash = lastHash;\n        this._hash = hash;\n        this._data = data;\n        this._nonce = nonce;\n        this._difficulty = difficulty || DIFFICULTY;\n\n        logger.info('block created: ' + this.toJsonString());\n    }\n\n    set data(d) { this._data = d; }\n\n    /**\n     * creates the special genesis block\n     * @returns {Block}\n     */\n    static /*Block*/ genesis() {\n        return exception.try(() => {\n            return new this('Genesis time','----','f1574-h4gh',[],0,DIFFICULTY);\n        });\n    }\n\n    /**\n     * creates & returns a hash of the given data\n     * \n     * @param {int} timestamp block timestamp\n     * @param {string} lastHash hash of intended parent block\n     * @param {Transaction[]} data the data to include in the block\n     * @param {int} nonce created during mining\n     * @param {int} difficulty block mining difficulty\n     * @returns {string}\n     */\n    static /*string*/ hash(timestamp, lastHash, data, nonce, difficulty){\n        return exception.try(() => {\n            return cryptoUtil.hash({\n                timestamp, \n                lastHash, \n                data: Transaction.arrayToJson(data), \n                nonce, \n                difficulty\n            });\n        });\n    }\n\n    /**\n     * mines a new block to be added to the chain, and returns it (without adding it to\n     * the blockchain)\n     *\n     * @param {Block} lastBlock the parent block (should be most recent block in chain)\n     * @param {Transaction[]} data transactions to be included in the block\n     */\n    static /*Block*/ mineBlock(lastBlock, data){\n        return exception.try(() => {\n            let hash;\n            let timestamp = Date.now();\n            const lastHash = lastBlock.hash;\n            let { difficulty } = lastBlock;\n            let nonce = 0;  \n\n            do {\n                nonce++;\n                timestamp = Date.now();\n                difficulty = Block.adjustDifficulty(lastBlock, timestamp);\n                hash = Block.hash(timestamp, lastHash, data, nonce, difficulty);\n            } while(hash.substring(0,difficulty) !== '0'.repeat(difficulty));\n\n            logger.info(`block ${hash} mined`);\n            return new this(timestamp, lastHash, hash, data, nonce, difficulty);\n        });\n    }\n\n    /**\n     * creates & returns a hash of the given block's essential data\n     * @returns string\n     * @param {Block} block\n     */\n    static /*string*/ blockHash(block){\n        return exception.try(() => {\n            //destructuring\n            const { timestamp, lastHash, data, nonce, difficulty } = block;\n            return Block.hash(timestamp, lastHash, data, nonce, difficulty);\n        });\n    }\n\n    static /*int*/ adjustDifficulty(lastBlock, currentTime){\n        return exception.try(() => {\n            let { difficulty } = lastBlock;\n            difficulty = lastBlock.timestamp + MINE_RATE > currentTime ? difficulty + 1 : difficulty - 1;\n            return difficulty;\n        });\n    }\n\n    /**\n     * returns a string representation\n     */\n    toString() {\n        return exception.try(() => {\n            return `Block -\n            Timestamp : ${this.timestamp}\n            Last Hash : ${this.lastHash.substring(0,10)}\n            Hash      : ${this.hash.substring(0,10)}\n            Data      : ${this.data}\n            Difficulty: ${this.difficulty}`;\n        });\n    }\n\n    /**\n     * returns a json representation\n     */\n    /*json*/ toJson() {\n        const output = {\n            timestamp: this.timestamp,\n            lastHash: this.lastHash,\n            hash: this.hash,\n            difficulty: this.difficulty,\n            nonce: this.nonce,\n            data: [\n\n            ]\n        };\n\n        if (this.data && this.data.length) {\n            this.data.forEach(t => {\n                if (t.toJson) \n                    output.data.push(t.toJson());\n            });\n        }\n\n        return output;\n    }\n\n    /**\n     * returns a json representation converted to string\n     */\n    /*string*/ toJsonString() {\n        return JSON.stringify(this.toJson());\n    }\n\n    /**\n     * deserializes a Block instance from JSON data\n     * @returns {Block}\n     * @param {json} json\n     */\n    static /*Block*/ fromJson(json) {\n        return exception.try(() => {\n            const output = new this(json.timestamp, json.lastHash, json.hash, [], json.nonce, json.difficulty);\n\n            if (json.data) {\n                json.data.forEach(t => {\n                    output.data.push(Transaction.fromJson(t));\n                });\n            }\n\n            return output;\n        });\n    }\n}\n\n\nmodule.exports = Block;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567748078467
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Blockchain.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Blockchain.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Blockchain.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes/Blockchain.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes",
        "sourceFileName": "Blockchain.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'BLKCH';\n\nvar Block = require('./Block');\n\nvar ioc = require('../../../util/iocContainer');\n\nvar EventEmitter = require('events');\n\nvar R = require('ramda');\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: Blockchain\n * --------------------\n * container for all blocks. supports these events: \n * - update\n * - replace \n *\n * author: John R. Kosinski\n */\n\nvar Blockchain =\n/*#__PURE__*/\nfunction () {\n  _createClass(Blockchain, [{\n    key: \"chain\",\n    get: function get() {\n      return this._chain;\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this._chain.length;\n    }\n    /**\n     * constructor \n     */\n\n  }]);\n\n  function Blockchain() {\n    _classCallCheck(this, Blockchain);\n\n    this._emitter = new EventEmitter();\n    this._chain = [Block.genesis()];\n    this._emitter = new EventEmitter();\n  }\n  /**\n   * returns a list of all transactions, in all blocks, sorted first by block number \n   * and then by timestamp. \n   */\n\n  /*Transaction*/\n\n\n  _createClass(Blockchain, [{\n    key: \"allTransactions\",\n    value: function allTransactions() {\n      return extractTransactionsFromBlocks(this.chain);\n    }\n    /**\n     * searches the blockchain to see if a transaction with the same id exists.\n     * @param {string} id id of the transaction in question\n     * @returns {bool} true if a transaction with the same id exists\n     */\n\n    /*bool*/\n\n  }, {\n    key: \"containsTransaction\",\n    value: function containsTransaction(id) {\n      return this.findTransaction(id);\n    }\n    /**\n     * the opposite of containsTransaction(id). this one will return the block index \n     * (1-based) of the block that contains the specified transaction.  \n     * @param {string} id \n     * @returns {int} the 1-based block index of the found transaction \n     * (return value of 0 indicates transaction is not found)\n     */\n\n    /*int*/\n\n  }, {\n    key: \"findTransaction\",\n    value: function findTransaction(id) {\n      var _this = this;\n\n      return exception[\"try\"](function () {\n        var allTransactions = _this.allTransactions().reverse();\n\n        for (var n = 0; n < allTransactions.length; n++) {\n          var t = allTransactions[n];\n\n          if (id === t.id) {\n            return n + 1;\n          }\n        }\n\n        return 0;\n      });\n    }\n    /**\n     * mines a new block, includes the given transactions, and appends it to the chain. \n     * @param {Transaction[]} data transactions to add to the new block\n     * @returns {Block}\n     */\n\n    /*Block*/\n\n  }, {\n    key: \"addBlock\",\n    value: function addBlock(data) {\n      var _this2 = this;\n\n      return exception[\"try\"](function () {\n        var block = Block.mineBlock(_this2.chain[_this2.chain.length - 1], data); //check here to make sure that duplicate transactions don't exist\n\n        if (data) {\n          for (var t in data) {\n            if (_this2.containsTransaction(t.id)) {\n              //reject block\n              logger.warn(\"block is being rejected, because transaction \".concat(t.id, \" is a duplicate\"));\n              return null;\n            }\n          }\n\n          ;\n        }\n\n        _this2.chain.push(block);\n\n        logger.info(\"block \".concat(block.hash, \" added to chain. new chain height: \").concat(_this2.height));\n\n        _this2._emitter.emit('update');\n\n        return block;\n      });\n    }\n    /**\n     * validates each block in the chain. \n     * @param {Blockchain} chain \n     * @returns {bool} false if chain is invalid \n     */\n\n    /*bool*/\n\n  }, {\n    key: \"isValidChain\",\n    value: function isValidChain(chain) {\n      return exception[\"try\"](function () {\n        if (JSON.stringify(chain[0]) !== JSON.stringify(Block.genesis())) {\n          logger.warn('invalid chain: invalid genesis block');\n          return false;\n        } //if the last block has a transaction that exists elsewhere in the chain, then \n        // the chain is invalid \n\n\n        if (chain.length > 1) {\n          //get all transactions from ALL BUT LAST block\n          var allTrans = extractTransactionsFromBlocks(R.init(chain)); //examine all transactions in last block for duplicity\n\n          var lastBlock = chain[chain.length - 1];\n\n          for (var i = 0; i < lastBlock.data.length; i++) {\n            var t = lastBlock.data[i];\n\n            if (R.find(R.propEq('id', t.id))(allTrans)) {\n              logger.warn(\"invalid chain: transaction \".concat(t.id, \" is duplicated\"));\n              return false;\n            }\n          }\n        } //if the chain has any invalid blocks, then the chain is invalid\n        //TODO: redo with ramda\n\n\n        for (var _i = 1; _i < chain.length; _i++) {\n          var block = chain[_i];\n          var _lastBlock = chain[_i - 1];\n\n          if (block.lastHash !== _lastBlock.hash || block.hash !== Block.blockHash(block)) {\n            logger.warn(\"invalid chain: invalid block \".concat(block.hash));\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n    /**\n     * replace the entire existing chain with the given one \n     * @param {BlockChain} newChain \n     */\n\n  }, {\n    key: \"replaceChain\",\n    value: function replaceChain(newChain) {\n      var _this3 = this;\n\n      exception[\"try\"](function () {\n        if (newChain.length <= _this3._chain.length) {\n          logger.info(\"received chain is not longer than the current chain\");\n          return;\n        } else if (!_this3.isValidChain(newChain)) {\n          logger.info(\"received chain is invalid\");\n          return;\n        }\n\n        logger.info(\"replacing the current chain with new chain\");\n        _this3._chain = newChain;\n\n        _this3._emitter.emit('update');\n      });\n    }\n    /**\n     * subscribe to an event \n     * @param {string} eventName \n     * @param {fn} callback \n     */\n\n  }, {\n    key: \"on\",\n    value: function on(eventName, callback) {\n      if (eventName && callback) {\n        this._emitter.on(eventName, callback);\n      }\n    }\n    /**\n     * returns a json representation\n     */\n\n    /*json*/\n\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      var output = {\n        chain: []\n      };\n\n      this._chain.forEach(function (b) {\n        output.chain.push(b.toJson());\n      });\n\n      return output;\n    }\n    /**\n     * deserializes a Blockchain instance from JSON data\n     * @returns {Blockchain}\n     * @param {json} json\n     */\n\n  }], [{\n    key: \"fromJson\",\n    value: function fromJson(json) {\n      var _this4 = this;\n\n      return exception[\"try\"](function () {\n        var output = new _this4();\n        output._chain = [];\n\n        if (json && json.chain && json.chain.length) {\n          json.chain.forEach(function (b) {\n            output._chain.push(Block.fromJson(b));\n          });\n        }\n\n        return output;\n      });\n    }\n  }]);\n\n  return Blockchain;\n}();\n\nfunction extractTransactionsFromBlocks(blocks) {\n  return exception[\"try\"](function () {\n    var output = [];\n    blocks.forEach(function (block) {\n      output.push.apply(output, _toConsumableArray(block.data.sort(function (a, b) {\n        return a.input.timestamp < b.input.timestamp;\n      })));\n    });\n    return output;\n  });\n}\n\nmodule.exports = Blockchain;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Blockchain.js"
      ],
      "names": [
        "LOG_TAG",
        "Block",
        "require",
        "ioc",
        "EventEmitter",
        "R",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Blockchain",
        "_chain",
        "length",
        "_emitter",
        "genesis",
        "extractTransactionsFromBlocks",
        "chain",
        "id",
        "findTransaction",
        "allTransactions",
        "reverse",
        "n",
        "t",
        "data",
        "block",
        "mineBlock",
        "containsTransaction",
        "warn",
        "push",
        "info",
        "hash",
        "height",
        "emit",
        "JSON",
        "stringify",
        "allTrans",
        "init",
        "lastBlock",
        "i",
        "find",
        "propEq",
        "lastHash",
        "blockHash",
        "newChain",
        "isValidChain",
        "eventName",
        "callback",
        "on",
        "output",
        "forEach",
        "b",
        "toJson",
        "json",
        "fromJson",
        "blocks",
        "sort",
        "a",
        "input",
        "timestamp",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,OAAhB;;AAEA,IAAMC,KAAK,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,4BAAD,CAAnB;;AACA,IAAME,YAAY,GAAGF,OAAO,CAAC,QAAD,CAA5B;;AACA,IAAMG,CAAC,GAAGH,OAAO,CAAC,OAAD,CAAjB;;AAEA,IAAMI,MAAM,GAAGH,GAAG,CAACI,aAAJ,CAAkBC,YAAlB,CAA+BR,OAA/B,CAAf;AACA,IAAMS,SAAS,GAAGN,GAAG,CAACO,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;;;IASMM,U;;;;;wBACU;AAAE,aAAO,KAAKC,MAAZ;AAAqB;;;wBACtB;AAAE,aAAO,KAAKA,MAAL,CAAYC,MAAnB;AAA4B;AAE3C;;;;;;AAGA,wBAAa;AAAA;;AACT,SAAKC,QAAL,GAAgB,IAAIX,YAAJ,EAAhB;AACA,SAAKS,MAAL,GAAc,CAACZ,KAAK,CAACe,OAAN,EAAD,CAAd;AACA,SAAKD,QAAL,GAAgB,IAAIX,YAAJ,EAAhB;AACH;AAED;;;;;AAIA;;;;;sCAAkC;AAC9B,aAAOa,6BAA6B,CAAC,KAAKC,KAAN,CAApC;AACH;AAED;;;;;;AAKA;;;;wCAA6BC,E,EAAI;AAC7B,aAAO,KAAKC,eAAL,CAAqBD,EAArB,CAAP;AACH;AAED;;;;;;;;AAOA;;;;oCAAwBA,E,EAAI;AAAA;;AACxB,aAAOV,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMY,eAAe,GAAG,KAAI,CAACA,eAAL,GAAuBC,OAAvB,EAAxB;;AACA,aAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACF,eAAe,CAACP,MAAhC,EAAwCS,CAAC,EAAzC,EAA6C;AACzC,cAAMC,CAAC,GAAGH,eAAe,CAACE,CAAD,CAAzB;;AACA,cAAIJ,EAAE,KAAKK,CAAC,CAACL,EAAb,EAAiB;AACb,mBAAQI,CAAC,GAAC,CAAV;AACH;AACJ;;AAED,eAAO,CAAP;AACH,OAVM,CAAP;AAWH;AAED;;;;;;AAKA;;;;6BAAmBE,I,EAAK;AAAA;;AACpB,aAAOhB,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMiB,KAAK,GAAGzB,KAAK,CAAC0B,SAAN,CAAgB,MAAI,CAACT,KAAL,CAAW,MAAI,CAACA,KAAL,CAAWJ,MAAX,GAAkB,CAA7B,CAAhB,EAAiDW,IAAjD,CAAd,CADuB,CAGvB;;AACA,YAAIA,IAAJ,EAAU;AACN,eAAK,IAAID,CAAT,IAAcC,IAAd,EAAoB;AAChB,gBAAI,MAAI,CAACG,mBAAL,CAAyBJ,CAAC,CAACL,EAA3B,CAAJ,EAAoC;AAChC;AACAb,cAAAA,MAAM,CAACuB,IAAP,wDAA4DL,CAAC,CAACL,EAA9D;AACA,qBAAO,IAAP;AACH;AACJ;;AAAA;AACJ;;AAED,QAAA,MAAI,CAACD,KAAL,CAAWY,IAAX,CAAgBJ,KAAhB;;AACApB,QAAAA,MAAM,CAACyB,IAAP,iBAAqBL,KAAK,CAACM,IAA3B,gDAAqE,MAAI,CAACC,MAA1E;;AAEA,QAAA,MAAI,CAAClB,QAAL,CAAcmB,IAAd,CAAmB,QAAnB;;AACA,eAAOR,KAAP;AACH,OAnBM,CAAP;AAoBH;AAED;;;;;;AAKA;;;;iCAAsBR,K,EAAO;AACzB,aAAOT,SAAS,OAAT,CAAc,YAAM;AACvB,YAAI0B,IAAI,CAACC,SAAL,CAAelB,KAAK,CAAC,CAAD,CAApB,MAA6BiB,IAAI,CAACC,SAAL,CAAenC,KAAK,CAACe,OAAN,EAAf,CAAjC,EAAkE;AAC9DV,UAAAA,MAAM,CAACuB,IAAP,CAAY,sCAAZ;AACA,iBAAO,KAAP;AACH,SAJsB,CAMvB;AACA;;;AACA,YAAIX,KAAK,CAACJ,MAAN,GAAe,CAAnB,EAAsB;AAClB;AACA,cAAMuB,QAAQ,GAAGpB,6BAA6B,CAACZ,CAAC,CAACiC,IAAF,CAAOpB,KAAP,CAAD,CAA9C,CAFkB,CAIlB;;AACA,cAAMqB,SAAS,GAAGrB,KAAK,CAACA,KAAK,CAACJ,MAAN,GAAa,CAAd,CAAvB;;AACA,eAAI,IAAI0B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACD,SAAS,CAACd,IAAV,CAAeX,MAA9B,EAAsC0B,CAAC,EAAvC,EAA2C;AACvC,gBAAMhB,CAAC,GAAGe,SAAS,CAACd,IAAV,CAAee,CAAf,CAAV;;AACA,gBAAInC,CAAC,CAACoC,IAAF,CAAOpC,CAAC,CAACqC,MAAF,CAAS,IAAT,EAAelB,CAAC,CAACL,EAAjB,CAAP,EAA6BkB,QAA7B,CAAJ,EAA4C;AACxC/B,cAAAA,MAAM,CAACuB,IAAP,sCAA0CL,CAAC,CAACL,EAA5C;AACA,qBAAO,KAAP;AACH;AACJ;AACJ,SArBsB,CAuBvB;AACA;;;AACA,aAAK,IAAIqB,EAAC,GAAC,CAAX,EAAcA,EAAC,GAACtB,KAAK,CAACJ,MAAtB,EAA8B0B,EAAC,EAA/B,EAAmC;AAC/B,cAAMd,KAAK,GAAGR,KAAK,CAACsB,EAAD,CAAnB;AACA,cAAMD,UAAS,GAAGrB,KAAK,CAACsB,EAAC,GAAC,CAAH,CAAvB;;AAEA,cAAKd,KAAK,CAACiB,QAAN,KAAmBJ,UAAS,CAACP,IAA9B,IAAwCN,KAAK,CAACM,IAAN,KAAe/B,KAAK,CAAC2C,SAAN,CAAgBlB,KAAhB,CAA3D,EAAoF;AAChFpB,YAAAA,MAAM,CAACuB,IAAP,wCAA4CH,KAAK,CAACM,IAAlD;AACA,mBAAO,KAAP;AACH;AACJ;;AAED,eAAO,IAAP;AACH,OApCM,CAAP;AAqCH;AAED;;;;;;;iCAIaa,Q,EAAS;AAAA;;AAClBpC,MAAAA,SAAS,OAAT,CAAc,YAAM;AAChB,YAAIoC,QAAQ,CAAC/B,MAAT,IAAmB,MAAI,CAACD,MAAL,CAAYC,MAAnC,EAA0C;AACtCR,UAAAA,MAAM,CAACyB,IAAP,CAAY,qDAAZ;AACA;AACH,SAHD,MAIK,IAAI,CAAC,MAAI,CAACe,YAAL,CAAkBD,QAAlB,CAAL,EAAiC;AAClCvC,UAAAA,MAAM,CAACyB,IAAP,CAAY,2BAAZ;AACA;AACH;;AAEDzB,QAAAA,MAAM,CAACyB,IAAP,CAAY,4CAAZ;AACA,QAAA,MAAI,CAAClB,MAAL,GAAcgC,QAAd;;AAEA,QAAA,MAAI,CAAC9B,QAAL,CAAcmB,IAAd,CAAmB,QAAnB;AACH,OAdD;AAeH;AAED;;;;;;;;uBAKGa,S,EAAWC,Q,EAAU;AACpB,UAAID,SAAS,IAAIC,QAAjB,EAA2B;AACvB,aAAKjC,QAAL,CAAckC,EAAd,CAAiBF,SAAjB,EAA4BC,QAA5B;AACH;AACJ;AAED;;;;AAGA;;;;6BAAkB;AACd,UAAME,MAAM,GAAG;AACXhC,QAAAA,KAAK,EAAE;AADI,OAAf;;AAIA,WAAKL,MAAL,CAAYsC,OAAZ,CAAoB,UAAAC,CAAC,EAAI;AACrBF,QAAAA,MAAM,CAAChC,KAAP,CAAaY,IAAb,CAAkBsB,CAAC,CAACC,MAAF,EAAlB;AACH,OAFD;;AAIA,aAAOH,MAAP;AACH;AAED;;;;;;;;6BAK+BI,I,EAAM;AAAA;;AACjC,aAAO7C,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMyC,MAAM,GAAG,IAAI,MAAJ,EAAf;AAEAA,QAAAA,MAAM,CAACrC,MAAP,GAAgB,EAAhB;;AACA,YAAIyC,IAAI,IAAIA,IAAI,CAACpC,KAAb,IAAsBoC,IAAI,CAACpC,KAAL,CAAWJ,MAArC,EAA6C;AACzCwC,UAAAA,IAAI,CAACpC,KAAL,CAAWiC,OAAX,CAAmB,UAAAC,CAAC,EAAI;AACpBF,YAAAA,MAAM,CAACrC,MAAP,CAAciB,IAAd,CAAmB7B,KAAK,CAACsD,QAAN,CAAeH,CAAf,CAAnB;AACH,WAFD;AAGH;;AAED,eAAOF,MAAP;AACH,OAXM,CAAP;AAYH;;;;;;AAIL,SAASjC,6BAAT,CAAuCuC,MAAvC,EAA+C;AAC3C,SAAO/C,SAAS,OAAT,CAAc,YAAM;AACvB,QAAMyC,MAAM,GAAG,EAAf;AACAM,IAAAA,MAAM,CAACL,OAAP,CAAe,UAAAzB,KAAK,EAAI;AACpBwB,MAAAA,MAAM,CAACpB,IAAP,OAAAoB,MAAM,qBAASxB,KAAK,CAACD,IAAN,CAAWgC,IAAX,CAAgB,UAACC,CAAD,EAAGN,CAAH;AAAA,eAAUM,CAAC,CAACC,KAAF,CAAQC,SAAR,GAAoBR,CAAC,CAACO,KAAF,CAAQC,SAAtC;AAAA,OAAhB,CAAT,EAAN;AACH,KAFD;AAIA,WAAOV,MAAP;AACH,GAPM,CAAP;AAQH;;AAEDW,MAAM,CAACC,OAAP,GAAiBlD,UAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/blockchain/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'BLKCH';\n\nconst Block = require('./Block');\nconst ioc = require('../../../util/iocContainer');\nconst EventEmitter = require('events');\nconst R = require('ramda');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: Blockchain\n * --------------------\n * container for all blocks. supports these events: \n * - update\n * - replace \n *\n * author: John R. Kosinski\n */\nclass Blockchain{\n    get chain() { return this._chain; }\n    get height() { return this._chain.length; }\n\n    /**\n     * constructor \n     */\n    constructor(){\n        this._emitter = new EventEmitter();\n        this._chain = [Block.genesis()];\n        this._emitter = new EventEmitter();\n    }\n    \n    /**\n     * returns a list of all transactions, in all blocks, sorted first by block number \n     * and then by timestamp. \n     */\n    /*Transaction*/ allTransactions() {\n        return extractTransactionsFromBlocks(this.chain);\n    }\n    \n    /**\n     * searches the blockchain to see if a transaction with the same id exists.\n     * @param {string} id id of the transaction in question\n     * @returns {bool} true if a transaction with the same id exists\n     */\n    /*bool*/ containsTransaction(id) {\n        return this.findTransaction(id);\n    }\n    \n    /**\n     * the opposite of containsTransaction(id). this one will return the block index \n     * (1-based) of the block that contains the specified transaction.  \n     * @param {string} id \n     * @returns {int} the 1-based block index of the found transaction \n     * (return value of 0 indicates transaction is not found)\n     */\n    /*int*/ findTransaction(id) {\n        return exception.try(() => {\n            const allTransactions = this.allTransactions().reverse(); \n            for (let n=0; n<allTransactions.length; n++) {\n                const t = allTransactions[n];\n                if (id === t.id) {\n                    return (n+1);\n                }\n            }\n            \n            return 0;\n        });\n    }\n\n    /**\n     * mines a new block, includes the given transactions, and appends it to the chain. \n     * @param {Transaction[]} data transactions to add to the new block\n     * @returns {Block}\n     */\n    /*Block*/ addBlock(data){\n        return exception.try(() => {\n            const block = Block.mineBlock(this.chain[this.chain.length-1], data);\n            \n            //check here to make sure that duplicate transactions don't exist\n            if (data) {\n                for (let t in data) {\n                    if (this.containsTransaction(t.id)) {\n                        //reject block\n                        logger.warn(`block is being rejected, because transaction ${t.id} is a duplicate`);\n                        return null;\n                    } \n                };\n            }\n            \n            this.chain.push(block);\n            logger.info(`block ${block.hash} added to chain. new chain height: ${this.height}`);\n\n            this._emitter.emit('update');\n            return block;\n        });\n    }\n\n    /**\n     * validates each block in the chain. \n     * @param {Blockchain} chain \n     * @returns {bool} false if chain is invalid \n     */\n    /*bool*/ isValidChain(chain) {\n        return exception.try(() => {\n            if (JSON.stringify(chain[0]) !== JSON.stringify(Block.genesis())) {\n                logger.warn('invalid chain: invalid genesis block');\n                return false;\n            }\n            \n            //if the last block has a transaction that exists elsewhere in the chain, then \n            // the chain is invalid \n            if (chain.length > 1) {\n                //get all transactions from ALL BUT LAST block\n                const allTrans = extractTransactionsFromBlocks(R.init(chain)); \n                \n                //examine all transactions in last block for duplicity\n                const lastBlock = chain[chain.length-1]; \n                for(let i=0; i<lastBlock.data.length; i++) {\n                    const t = lastBlock.data[i]; \n                    if (R.find(R.propEq('id', t.id))(allTrans)) {\n                        logger.warn(`invalid chain: transaction ${t.id} is duplicated`);\n                        return false;\n                    }\n                }\n            }\n\n            //if the chain has any invalid blocks, then the chain is invalid\n            //TODO: redo with ramda\n            for (let i=1; i<chain.length; i++) {\n                const block = chain[i];\n                const lastBlock = chain[i-1];\n    \n                if ((block.lastHash !== lastBlock.hash) || (block.hash !== Block.blockHash(block))) {\n                    logger.warn(`invalid chain: invalid block ${block.hash}`);\n                    return false;\n                }\n            }\n\n            return true;\n        });\n    }\n\n    /**\n     * replace the entire existing chain with the given one \n     * @param {BlockChain} newChain \n     */\n    replaceChain(newChain){\n        exception.try(() => {\n            if (newChain.length <= this._chain.length){\n                logger.info(\"received chain is not longer than the current chain\");\n                return;\n            }\n            else if (!this.isValidChain(newChain)){\n                logger.info(\"received chain is invalid\");\n                return;\n            }\n\n            logger.info(\"replacing the current chain with new chain\");\n            this._chain = newChain;\n\n            this._emitter.emit('update');\n        });\n    }\n\n    /**\n     * subscribe to an event \n     * @param {string} eventName \n     * @param {fn} callback \n     */\n    on(eventName, callback) {\n        if (eventName && callback) {\n            this._emitter.on(eventName, callback);\n        }\n    }\n\n    /**\n     * returns a json representation\n     */\n    /*json*/ toJson() {\n        const output = {\n            chain: []\n        };\n\n        this._chain.forEach(b => {\n            output.chain.push(b.toJson());\n        });\n\n        return output;\n    }\n\n    /**\n     * deserializes a Blockchain instance from JSON data\n     * @returns {Blockchain}\n     * @param {json} json\n     */\n    static /*Blockchain*/ fromJson(json) {\n        return exception.try(() => {\n            const output = new this();\n\n            output._chain = [];\n            if (json && json.chain && json.chain.length) {\n                json.chain.forEach(b => {\n                    output._chain.push(Block.fromJson(b));\n                });\n            }\n\n            return output;\n        });\n    }\n}\n\n\nfunction extractTransactionsFromBlocks(blocks) {    \n    return exception.try(() => {\n        const output = [];\n        blocks.forEach(block => {\n            output.push(...block.data.sort((a,b) => (a.input.timestamp < b.input.timestamp))); \n        });\n        \n        return output; \n    });\n}\n\nmodule.exports = Blockchain;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567745364234
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/httpServer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/httpServer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/httpServer.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/httpServer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
        "sourceFileName": "httpServer.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'HTTP';\n\nvar ioc = require('./util/iocContainer');\n\nvar cors = require('cors');\n\nvar express = require('express');\n\nvar config = require('./config');\n\nvar _require = require('./util/jsonUtil'),\n    convertJson = _require.convertJson;\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\nvar running = false;\n/**\n * minacoin: HttpServer\n * --------------------\n * encapsulates the main components of the server-side interface, such as the \n * web server and the p2p server. \n *\n * author: John R. Kosinski\n */\n\nvar HttpServer =\n/*#__PURE__*/\nfunction () {\n  /**\n   * constructor\n   * @param {Blockchain} blockchain\n   * @param {Wallet} wallet\n   * @param {IP2PServer} p2pServer\n   * @param {TransactionPool} txPool\n   * @param {Miner} miner\n   */\n  function HttpServer(blockchain, wallet, p2pServer, txPool, miner) {\n    _classCallCheck(this, HttpServer);\n\n    this.blockchain = blockchain;\n    this.wallet = wallet;\n    this.p2pServer = p2pServer;\n    this.txPool = txPool;\n    this.miner = miner;\n  }\n  /**\n   * starts the server running\n   */\n\n\n  _createClass(HttpServer, [{\n    key: \"start\",\n    value: function start() {\n      var _this = this;\n\n      exception[\"try\"](function () {\n        if (!running) {\n          logger.info('starting p2p server...');\n\n          _this.p2pServer.listen();\n\n          var app = express();\n          var port = config.HTTP_PORT;\n          app.use(express.json());\n          app.use(cors({\n            origin: 'http://localhost:3000'\n          }));\n          app.get('/transactions', function (req, res) {\n            exception[\"try\"](function () {\n              logger.info('GET /transactions');\n              res.json(convertJson(_this.txPool.transactions));\n            });\n          });\n          app.get('/public', function (req, res) {\n            exception[\"try\"](function () {\n              logger.info('GET /public');\n\n              _this.wallet.updateBalance(_this.blockchain);\n\n              res.json({\n                address: _this.wallet.publicKey,\n                balance: _this.wallet.balance,\n                chainSize: _this.blockchain.height,\n                peers: _this.p2pServer.peerList(),\n                transactionPool: {\n                  count: _this.txPool.txCount,\n                  pending: _this.txPool.pendingTransactions(_this.wallet.publicKey)\n                }\n              });\n            });\n          });\n          app.get('/blocks', function (req, res) {\n            exception[\"try\"](function () {\n              logger.info('GET /blocks');\n              res.json(_this.blockchain.toJson());\n            });\n          }); //pass in: recipient, amount\n\n          app.post('/transact', function (req, res) {\n            exception[\"try\"](function () {\n              logger.info('POST /transact');\n              var _req$body = req.body,\n                  recipient = _req$body.recipient,\n                  amount = _req$body.amount;\n\n              var transaction = _this.wallet.createTransaction(recipient, amount, _this.blockchain, _this.txPool);\n\n              _this.p2pServer.broadcastTransaction(transaction);\n\n              res.redirect('/transactions');\n            });\n          });\n          app.post('/mine-transactions', function (req, res) {\n            exception[\"try\"](function () {\n              logger.info('POST /mine-transactions');\n\n              var block = _this.miner.mine();\n\n              logger.info(\"new block added: \".concat(block.toJsonString()));\n              res.redirect('/blocks');\n            });\n          });\n          logger.info('starting web server...');\n          app.listen(port, function () {\n            logger.info(\"app running on port \".concat(port));\n          });\n          running = true;\n        }\n      });\n    }\n  }]);\n\n  return HttpServer;\n}();\n\nmodule.exports = {\n  HttpServer: HttpServer\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "httpServer.js"
      ],
      "names": [
        "LOG_TAG",
        "ioc",
        "require",
        "cors",
        "express",
        "config",
        "convertJson",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "running",
        "HttpServer",
        "blockchain",
        "wallet",
        "p2pServer",
        "txPool",
        "miner",
        "info",
        "listen",
        "app",
        "port",
        "HTTP_PORT",
        "use",
        "json",
        "origin",
        "get",
        "req",
        "res",
        "transactions",
        "updateBalance",
        "address",
        "publicKey",
        "balance",
        "chainSize",
        "height",
        "peers",
        "peerList",
        "transactionPool",
        "count",
        "txCount",
        "pending",
        "pendingTransactions",
        "toJson",
        "post",
        "body",
        "recipient",
        "amount",
        "transaction",
        "createTransaction",
        "broadcastTransaction",
        "redirect",
        "block",
        "mine",
        "toJsonString",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAG,MAAhB;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAnB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,UAAD,CAAtB;;eACwBA,OAAO,CAAC,iBAAD,C;IAAvBI,W,YAAAA,W;;AAER,IAAMC,MAAM,GAAGN,GAAG,CAACO,aAAJ,CAAkBC,YAAlB,CAA+BT,OAA/B,CAAf;AACA,IAAMU,SAAS,GAAGT,GAAG,CAACU,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA,IAAIM,OAAO,GAAG,KAAd;AAEA;;;;;;;;;IAQMC,U;;;AACF;;;;;;;;AAQA,sBAAYC,UAAZ,EAAwBC,MAAxB,EAAgCC,SAAhC,EAA2CC,MAA3C,EAAmDC,KAAnD,EAA0D;AAAA;;AACtD,SAAKJ,UAAL,GAAkBA,UAAlB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACH;AAED;;;;;;;4BAGQ;AAAA;;AACJT,MAAAA,SAAS,OAAT,CAAc,YAAM;AAChB,YAAI,CAACG,OAAL,EAAc;AACVN,UAAAA,MAAM,CAACa,IAAP,CAAY,wBAAZ;;AACA,UAAA,KAAI,CAACH,SAAL,CAAeI,MAAf;;AAEA,cAAMC,GAAG,GAAGlB,OAAO,EAAnB;AACA,cAAMmB,IAAI,GAAGlB,MAAM,CAACmB,SAApB;AAEAF,UAAAA,GAAG,CAACG,GAAJ,CAAQrB,OAAO,CAACsB,IAAR,EAAR;AACAJ,UAAAA,GAAG,CAACG,GAAJ,CAAQtB,IAAI,CAAC;AACTwB,YAAAA,MAAM,EAAE;AADC,WAAD,CAAZ;AAIAL,UAAAA,GAAG,CAACM,GAAJ,CAAQ,eAAR,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnCpB,YAAAA,SAAS,OAAT,CAAc,YAAM;AAChBH,cAAAA,MAAM,CAACa,IAAP,CAAY,mBAAZ;AAEAU,cAAAA,GAAG,CAACJ,IAAJ,CAASpB,WAAW,CAAC,KAAI,CAACY,MAAL,CAAYa,YAAb,CAApB;AACH,aAJD;AAKH,WAND;AAQAT,UAAAA,GAAG,CAACM,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7BpB,YAAAA,SAAS,OAAT,CAAc,YAAM;AAChBH,cAAAA,MAAM,CAACa,IAAP,CAAY,aAAZ;;AAEA,cAAA,KAAI,CAACJ,MAAL,CAAYgB,aAAZ,CAA0B,KAAI,CAACjB,UAA/B;;AACAe,cAAAA,GAAG,CAACJ,IAAJ,CAAS;AACLO,gBAAAA,OAAO,EAAE,KAAI,CAACjB,MAAL,CAAYkB,SADhB;AAELC,gBAAAA,OAAO,EAAE,KAAI,CAACnB,MAAL,CAAYmB,OAFhB;AAGLC,gBAAAA,SAAS,EAAE,KAAI,CAACrB,UAAL,CAAgBsB,MAHtB;AAILC,gBAAAA,KAAK,EAAE,KAAI,CAACrB,SAAL,CAAesB,QAAf,EAJF;AAKLC,gBAAAA,eAAe,EAAE;AACbC,kBAAAA,KAAK,EAAE,KAAI,CAACvB,MAAL,CAAYwB,OADN;AAEbC,kBAAAA,OAAO,EAAE,KAAI,CAACzB,MAAL,CAAY0B,mBAAZ,CAAgC,KAAI,CAAC5B,MAAL,CAAYkB,SAA5C;AAFI;AALZ,eAAT;AAUH,aAdD;AAeH,WAhBD;AAkBAZ,UAAAA,GAAG,CAACM,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7BpB,YAAAA,SAAS,OAAT,CAAc,YAAM;AAChBH,cAAAA,MAAM,CAACa,IAAP,CAAY,aAAZ;AAEAU,cAAAA,GAAG,CAACJ,IAAJ,CAAS,KAAI,CAACX,UAAL,CAAgB8B,MAAhB,EAAT;AACH,aAJD;AAKH,WAND,EAtCU,CA8CV;;AACAvB,UAAAA,GAAG,CAACwB,IAAJ,CAAS,WAAT,EAAsB,UAACjB,GAAD,EAAMC,GAAN,EAAc;AAChCpB,YAAAA,SAAS,OAAT,CAAc,YAAM;AAChBH,cAAAA,MAAM,CAACa,IAAP,CAAY,gBAAZ;AADgB,8BAGcS,GAAG,CAACkB,IAHlB;AAAA,kBAGRC,SAHQ,aAGRA,SAHQ;AAAA,kBAGGC,MAHH,aAGGA,MAHH;;AAIhB,kBAAMC,WAAW,GAAG,KAAI,CAAClC,MAAL,CAAYmC,iBAAZ,CAChBH,SADgB,EAEhBC,MAFgB,EAGhB,KAAI,CAAClC,UAHW,EAIhB,KAAI,CAACG,MAJW,CAApB;;AAOA,cAAA,KAAI,CAACD,SAAL,CAAemC,oBAAf,CAAoCF,WAApC;;AACApB,cAAAA,GAAG,CAACuB,QAAJ,CAAa,eAAb;AACH,aAbD;AAcH,WAfD;AAiBA/B,UAAAA,GAAG,CAACwB,IAAJ,CAAS,oBAAT,EAA8B,UAACjB,GAAD,EAAMC,GAAN,EAAY;AACtCpB,YAAAA,SAAS,OAAT,CAAc,YAAM;AAChBH,cAAAA,MAAM,CAACa,IAAP,CAAY,yBAAZ;;AAEA,kBAAMkC,KAAK,GAAG,KAAI,CAACnC,KAAL,CAAWoC,IAAX,EAAd;;AACAhD,cAAAA,MAAM,CAACa,IAAP,4BAAgCkC,KAAK,CAACE,YAAN,EAAhC;AACA1B,cAAAA,GAAG,CAACuB,QAAJ,CAAa,SAAb;AACH,aAND;AAOH,WARD;AAUA9C,UAAAA,MAAM,CAACa,IAAP,CAAY,wBAAZ;AACAE,UAAAA,GAAG,CAACD,MAAJ,CAAWE,IAAX,EAAiB,YAAM;AACnBhB,YAAAA,MAAM,CAACa,IAAP,+BAAmCG,IAAnC;AACH,WAFD;AAIAV,UAAAA,OAAO,GAAG,IAAV;AACH;AACJ,OAlFD;AAmFH;;;;;;AAGL4C,MAAM,CAACC,OAAP,GAAiB;AAAE5C,EAAAA,UAAU,EAAVA;AAAF,CAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'HTTP';\n\nconst ioc = require('./util/iocContainer');\nconst cors = require('cors');\nconst express = require('express');\nconst config = require('./config');\nconst { convertJson } = require('./util/jsonUtil');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\nlet running = false;\n\n/**\n * minacoin: HttpServer\n * --------------------\n * encapsulates the main components of the server-side interface, such as the \n * web server and the p2p server. \n *\n * author: John R. Kosinski\n */\nclass HttpServer {\n    /**\n     * constructor\n     * @param {Blockchain} blockchain\n     * @param {Wallet} wallet\n     * @param {IP2PServer} p2pServer\n     * @param {TransactionPool} txPool\n     * @param {Miner} miner\n     */\n    constructor(blockchain, wallet, p2pServer, txPool, miner) {\n        this.blockchain = blockchain;\n        this.wallet = wallet;\n        this.p2pServer = p2pServer;\n        this.txPool = txPool;\n        this.miner = miner;\n    }\n\n    /**\n     * starts the server running\n     */\n    start() {\n        exception.try(() => {\n            if (!running) {\n                logger.info('starting p2p server...');\n                this.p2pServer.listen();\n\n                const app = express();\n                const port = config.HTTP_PORT;\n\n                app.use(express.json());\n                app.use(cors({\n                    origin: 'http://localhost:3000'\n                }));\n\n                app.get('/transactions', (req, res) => {\n                    exception.try(() => {\n                        logger.info('GET /transactions');\n\n                        res.json(convertJson(this.txPool.transactions));\n                    });\n                });\n\n                app.get('/public', (req, res) => {\n                    exception.try(() => {\n                        logger.info('GET /public');\n\n                        this.wallet.updateBalance(this.blockchain);\n                        res.json({\n                            address: this.wallet.publicKey, \n                            balance: this.wallet.balance, \n                            chainSize: this.blockchain.height, \n                            peers: this.p2pServer.peerList(),\n                            transactionPool: {\n                                count: this.txPool.txCount, \n                                pending: this.txPool.pendingTransactions(this.wallet.publicKey)\n                            }\n                        });\n                    });\n                });\n                \n                app.get('/blocks', (req, res) => {\n                    exception.try(() => {\n                        logger.info('GET /blocks');\n                        \n                        res.json(this.blockchain.toJson()); \n                    });\n                }); \n\n                //pass in: recipient, amount\n                app.post('/transact', (req, res) => {\n                    exception.try(() => {\n                        logger.info('POST /transact');\n\n                        const { recipient, amount } = req.body;\n                        const transaction = this.wallet.createTransaction(\n                            recipient,\n                            amount,\n                            this.blockchain,\n                            this.txPool\n                        );\n\n                        this.p2pServer.broadcastTransaction(transaction);\n                        res.redirect('/transactions');\n                    });\n                });\n\n                app.post('/mine-transactions',(req, res)=>{\n                    exception.try(() => {\n                        logger.info('POST /mine-transactions');\n\n                        const block = this.miner.mine();\n                        logger.info(`new block added: ${block.toJsonString()}`);\n                        res.redirect('/blocks');\n                    });\n                })\n\n                logger.info('starting web server...');\n                app.listen(port, () => {\n                    logger.info(`app running on port ${port}`);\n                });\n\n                running = true;\n            }\n        });\n    }\n}\n\nmodule.exports = { HttpServer };\n\n\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567756422487
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/jsonUtil.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/jsonUtil.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/jsonUtil.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util/jsonUtil.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
        "sourceFileName": "jsonUtil.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction convertJson(obj) {\n  if (Array.isArray(obj)) {\n    var output = [];\n    obj.forEach(function (i) {\n      output.push(convertJson(i));\n    });\n    return output;\n  }\n\n  if (obj.toJson) {\n    return obj.toJson();\n  }\n\n  return obj;\n}\n\nexports.convertJson = convertJson;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzb25VdGlsLmpzIl0sIm5hbWVzIjpbImNvbnZlcnRKc29uIiwib2JqIiwiQXJyYXkiLCJpc0FycmF5Iiwib3V0cHV0IiwiZm9yRWFjaCIsImkiLCJwdXNoIiwidG9Kc29uIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsU0FBU0EsV0FBVCxDQUFxQkMsR0FBckIsRUFBMEI7QUFDdEIsTUFBSUMsS0FBSyxDQUFDQyxPQUFOLENBQWNGLEdBQWQsQ0FBSixFQUF3QjtBQUNwQixRQUFNRyxNQUFNLEdBQUcsRUFBZjtBQUNBSCxJQUFBQSxHQUFHLENBQUNJLE9BQUosQ0FBWSxVQUFDQyxDQUFELEVBQU87QUFDZkYsTUFBQUEsTUFBTSxDQUFDRyxJQUFQLENBQVlQLFdBQVcsQ0FBQ00sQ0FBRCxDQUF2QjtBQUNILEtBRkQ7QUFHQSxXQUFPRixNQUFQO0FBQ0g7O0FBQ0QsTUFBSUgsR0FBRyxDQUFDTyxNQUFSLEVBQWdCO0FBQ1osV0FBT1AsR0FBRyxDQUFDTyxNQUFKLEVBQVA7QUFDSDs7QUFDRCxTQUFPUCxHQUFQO0FBQ0g7O0FBRURRLE9BQU8sQ0FBQ1QsV0FBUixHQUFzQkEsV0FBdEIiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21pbmFjb2luL21pbmFjb2luLXNlcnZlci9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY29udmVydEpzb24ob2JqKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkob2JqKSkge1xuICAgICAgICBjb25zdCBvdXRwdXQgPSBbXTtcbiAgICAgICAgb2JqLmZvckVhY2goKGkpID0+IHtcbiAgICAgICAgICAgIG91dHB1dC5wdXNoKGNvbnZlcnRKc29uKGkpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBvdXRwdXQ7XG4gICAgfVxuICAgIGlmIChvYmoudG9Kc29uKSB7XG4gICAgICAgIHJldHVybiBvYmoudG9Kc29uKCk7XG4gICAgfVxuICAgIHJldHVybiBvYmo7XG59XG5cbmV4cG9ydHMuY29udmVydEpzb24gPSBjb252ZXJ0SnNvbjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "jsonUtil.js"
      ],
      "names": [
        "convertJson",
        "obj",
        "Array",
        "isArray",
        "output",
        "forEach",
        "i",
        "push",
        "toJson",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,SAASA,WAAT,CAAqBC,GAArB,EAA0B;AACtB,MAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;AACpB,QAAMG,MAAM,GAAG,EAAf;AACAH,IAAAA,GAAG,CAACI,OAAJ,CAAY,UAACC,CAAD,EAAO;AACfF,MAAAA,MAAM,CAACG,IAAP,CAAYP,WAAW,CAACM,CAAD,CAAvB;AACH,KAFD;AAGA,WAAOF,MAAP;AACH;;AACD,MAAIH,GAAG,CAACO,MAAR,EAAgB;AACZ,WAAOP,GAAG,CAACO,MAAJ,EAAP;AACH;;AACD,SAAOP,GAAP;AACH;;AAEDQ,OAAO,CAACT,WAAR,GAAsBA,WAAtB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/util",
      "sourcesContent": [
        "'use strict';\n\nfunction convertJson(obj) {\n    if (Array.isArray(obj)) {\n        const output = [];\n        obj.forEach((i) => {\n            output.push(convertJson(i));\n        });\n        return output;\n    }\n    if (obj.toJson) {\n        return obj.toJson();\n    }\n    return obj;\n}\n\nexports.convertJson = convertJson;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567696974850
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/LocalJsonDb.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/LocalJsonDb.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/LocalJsonDb.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/LocalJsonDb.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes",
        "sourceFileName": "LocalJsonDb.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\n\nvar LOG_TAG = \"LDB\";\n\nvar ioc = require('../../../util/iocContainer');\n\nvar fs = require('fs');\n\nvar IDatabase = require('./IDatabase.js');\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: LocalJsonDb\n * ---------------------\n * implementation of IDatabase that reads/writes local files. \n *\n * author: John R. Kosinski\n */\n\nvar LocalFileDb =\n/*#__PURE__*/\nfunction (_IDatabase) {\n  _inherits(LocalFileDb, _IDatabase);\n\n  function LocalFileDb() {\n    var _this;\n\n    _classCallCheck(this, LocalFileDb);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LocalFileDb).call(this));\n\n    _save.add(_assertThisInitialized(_this));\n\n    return _this;\n  }\n  /**\n   * serialize & save the given blockchain to data source\n   * @param {Blockchain} blockchain\n   */\n\n\n  _createClass(LocalFileDb, [{\n    key: \"saveBlockchain\",\n    value: function () {\n      var _saveBlockchain = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(blockchain) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _classPrivateMethodGet(this, _save, _save2).call(this, 'blockchain', blockchain);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function saveBlockchain(_x) {\n        return _saveBlockchain.apply(this, arguments);\n      }\n\n      return saveBlockchain;\n    }()\n    /**\n     * read blockchain data from data source and return as json\n     * @returns {json}\n     */\n\n    /*json*/\n\n  }, {\n    key: \"getBlockchain\",\n    value: function () {\n      var _getBlockchain = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.read('blockchain');\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getBlockchain() {\n        return _getBlockchain.apply(this, arguments);\n      }\n\n      return getBlockchain;\n    }()\n    /**\n     * serialize & save the given wallet to data source\n     * @param {Wallet} wallet\n     */\n\n  }, {\n    key: \"saveWallet\",\n    value: function () {\n      var _saveWallet = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(wallet) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _classPrivateMethodGet(this, _save, _save2).call(this, 'wallet', wallet);\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function saveWallet(_x2) {\n        return _saveWallet.apply(this, arguments);\n      }\n\n      return saveWallet;\n    }()\n    /**\n     * read wallet data from data source and return as Wallet instance\n     * @returns {json}\n     */\n\n    /*json*/\n\n  }, {\n    key: \"getWallet\",\n    value: function () {\n      var _getWallet = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.read('wallet');\n\n              case 2:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getWallet() {\n        return _getWallet.apply(this, arguments);\n      }\n\n      return getWallet;\n    }()\n    /**\n     * writes a value (json object) to a DB file \n     * @param {string} key \n     * @param {json} obj \n     */\n\n  }, {\n    key: \"read\",\n\n    /**\n     * reads a value (json object) from the DB file \n     * @param {string} key \n     */\n    value: function () {\n      var _read = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(key) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return exception.tryAsync(\n                /*#__PURE__*/\n                _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee5() {\n                  var data;\n                  return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          _context5.next = 2;\n                          return readFile(key + '.txt');\n\n                        case 2:\n                          data = _context5.sent;\n                          return _context5.abrupt(\"return\", data ? JSON.parse(data) : null);\n\n                        case 4:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                })));\n\n              case 2:\n                return _context6.abrupt(\"return\", _context6.sent);\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function read(_x3) {\n        return _read.apply(this, arguments);\n      }\n\n      return read;\n    }()\n  }]);\n\n  return LocalFileDb;\n}(IDatabase);\n/**\n * write string data to a text file\n * @param {string} path\n * @param {string} data\n * @returns {Promise(bool)}\n */\n\n\nvar _save = new WeakSet();\n\nvar _save2 =\n/*#__PURE__*/\nfunction () {\n  var _save3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee8(key, obj) {\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return exception.tryAsync(\n            /*#__PURE__*/\n            _asyncToGenerator(\n            /*#__PURE__*/\n            regeneratorRuntime.mark(function _callee7() {\n              var data;\n              return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                while (1) {\n                  switch (_context7.prev = _context7.next) {\n                    case 0:\n                      data = {};\n\n                      if (obj) {\n                        data = JSON.stringify(obj.toJson());\n                      }\n\n                      _context7.next = 4;\n                      return writeFile(key + '.txt', data);\n\n                    case 4:\n                    case \"end\":\n                      return _context7.stop();\n                  }\n                }\n              }, _callee7);\n            })));\n\n          case 2:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  function _save2(_x4, _x5) {\n    return _save3.apply(this, arguments);\n  }\n\n  return _save2;\n}();\n\nfunction\n/*bool*/\nwriteFile(path, data) {\n  exception[\"try\"](function () {\n    return new Promise(function (resolve, reject) {\n      fs.writeFile(path, data, function (err, data) {\n        if (err) reject(err);else resolve(true);\n      });\n    });\n  });\n}\n/**\n * read string data from a text file\n * @param {string} path\n * @returns {Promise(string)}\n */\n\n\nfunction\n/*string*/\nreadFile(path) {\n  return exception[\"try\"](function () {\n    return new Promise(function (resolve, reject) {\n      fs.readFile(path, function (err, data) {\n        if (err) {\n          logger.error(err);\n          resolve(null);\n        } else {\n          resolve(data.toString());\n        }\n      });\n    });\n  });\n}\n\nvar database = new LocalFileDb();\nmodule.exports = database;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxvY2FsSnNvbkRiLmpzIl0sIm5hbWVzIjpbIkxPR19UQUciLCJpb2MiLCJyZXF1aXJlIiwiZnMiLCJJRGF0YWJhc2UiLCJsb2dnZXIiLCJsb2dnZXJGYWN0b3J5IiwiY3JlYXRlTG9nZ2VyIiwiZXhjZXB0aW9uIiwiZWhGYWN0b3J5IiwiY3JlYXRlSGFuZGxlciIsIkxvY2FsRmlsZURiIiwiYmxvY2tjaGFpbiIsInJlYWQiLCJ3YWxsZXQiLCJrZXkiLCJ0cnlBc3luYyIsInJlYWRGaWxlIiwiZGF0YSIsIkpTT04iLCJwYXJzZSIsIm9iaiIsInN0cmluZ2lmeSIsInRvSnNvbiIsIndyaXRlRmlsZSIsInBhdGgiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImVyciIsImVycm9yIiwidG9TdHJpbmciLCJkYXRhYmFzZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLE9BQU8sR0FBRyxLQUFoQjs7QUFFQSxJQUFNQyxHQUFHLEdBQUdDLE9BQU8sQ0FBQyw0QkFBRCxDQUFuQjs7QUFDQSxJQUFNQyxFQUFFLEdBQUdELE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBLElBQU1FLFNBQVMsR0FBR0YsT0FBTyxDQUFDLGdCQUFELENBQXpCOztBQUVBLElBQU1HLE1BQU0sR0FBR0osR0FBRyxDQUFDSyxhQUFKLENBQWtCQyxZQUFsQixDQUErQlAsT0FBL0IsQ0FBZjtBQUNBLElBQU1RLFNBQVMsR0FBR1AsR0FBRyxDQUFDUSxTQUFKLENBQWNDLGFBQWQsQ0FBNEJMLE1BQTVCLENBQWxCO0FBRUE7Ozs7Ozs7O0lBT01NLFc7Ozs7O0FBQ0YseUJBQWM7QUFBQTs7QUFBQTs7QUFDVjs7QUFEVTs7QUFBQTtBQUViO0FBRUQ7Ozs7Ozs7Ozs7OytDQUlxQkMsVTs7Ozs7OzhDQUNYLEksc0JBQUEsSSxFQUFXLFksRUFBY0EsVTs7Ozs7Ozs7Ozs7Ozs7OztBQUduQzs7Ozs7QUFJQTs7Ozs7Ozs7Ozs7Ozt1QkFDaUIsS0FBS0MsSUFBTCxDQUFVLFlBQVYsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUdqQjs7Ozs7Ozs7OztnREFJaUJDLE07Ozs7Ozs4Q0FDUCxJLHNCQUFBLEksRUFBVyxRLEVBQVVBLE07Ozs7Ozs7Ozs7Ozs7Ozs7QUFHL0I7Ozs7O0FBSUE7Ozs7Ozs7Ozs7Ozs7dUJBQ2lCLEtBQUtELElBQUwsQ0FBVSxRQUFWLEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFHakI7Ozs7Ozs7OztBQWVBOzs7Ozs7O2dEQUlXRSxHOzs7Ozs7dUJBQ01QLFNBQVMsQ0FBQ1EsUUFBVjtBQUFBO0FBQUE7QUFBQTtBQUFBLHdDQUFtQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGlDQUNUQyxRQUFRLENBQUNGLEdBQUcsR0FBRyxNQUFQLENBREM7O0FBQUE7QUFDdEJHLDBCQUFBQSxJQURzQjtBQUFBLDREQUVyQkEsSUFBSSxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0YsSUFBWCxDQUFILEdBQXNCLElBRkw7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsaUJBQW5CLEc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUF6REtkLFM7QUFpRTFCOzs7Ozs7Ozs7Ozs7Ozs7NENBdkJnQlcsRyxFQUFLTSxHOzs7Ozs7bUJBQ1BiLFNBQVMsQ0FBQ1EsUUFBVjtBQUFBO0FBQUE7QUFBQTtBQUFBLG9DQUFtQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDakJFLHNCQUFBQSxJQURpQixHQUNWLEVBRFU7O0FBRXJCLDBCQUFJRyxHQUFKLEVBQVM7QUFDTEgsd0JBQUFBLElBQUksR0FBR0MsSUFBSSxDQUFDRyxTQUFMLENBQWVELEdBQUcsQ0FBQ0UsTUFBSixFQUFmLENBQVA7QUFDSDs7QUFKb0I7QUFBQSw2QkFLZkMsU0FBUyxDQUFDVCxHQUFHLEdBQUcsTUFBUCxFQUFlRyxJQUFmLENBTE07O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsYUFBbkIsRzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE0QmQ7QUFBUztBQUFTTSxTQUFsQixDQUE0QkMsSUFBNUIsRUFBa0NQLElBQWxDLEVBQXdDO0FBQ3BDVixFQUFBQSxTQUFTLE9BQVQsQ0FBYyxZQUFNO0FBQ2hCLFdBQU8sSUFBSWtCLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDcEN6QixNQUFBQSxFQUFFLENBQUNxQixTQUFILENBQWFDLElBQWIsRUFBbUJQLElBQW5CLEVBQXlCLFVBQUNXLEdBQUQsRUFBTVgsSUFBTixFQUFlO0FBQ3BDLFlBQUlXLEdBQUosRUFDSUQsTUFBTSxDQUFDQyxHQUFELENBQU4sQ0FESixLQUdJRixPQUFPLENBQUMsSUFBRCxDQUFQO0FBQ1AsT0FMRDtBQU1ILEtBUE0sQ0FBUDtBQVFILEdBVEQ7QUFVSDtBQUVEOzs7Ozs7O0FBS0E7QUFBUztBQUFXVixRQUFwQixDQUE2QlEsSUFBN0IsRUFBbUM7QUFDL0IsU0FBT2pCLFNBQVMsT0FBVCxDQUFjLFlBQU07QUFDdkIsV0FBTyxJQUFJa0IsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUNwQ3pCLE1BQUFBLEVBQUUsQ0FBQ2MsUUFBSCxDQUFZUSxJQUFaLEVBQWtCLFVBQUNJLEdBQUQsRUFBTVgsSUFBTixFQUFlO0FBQzdCLFlBQUlXLEdBQUosRUFBUztBQUNMeEIsVUFBQUEsTUFBTSxDQUFDeUIsS0FBUCxDQUFhRCxHQUFiO0FBQ0FGLFVBQUFBLE9BQU8sQ0FBQyxJQUFELENBQVA7QUFDSCxTQUhELE1BSUs7QUFDREEsVUFBQUEsT0FBTyxDQUFDVCxJQUFJLENBQUNhLFFBQUwsRUFBRCxDQUFQO0FBQ0g7QUFDSixPQVJEO0FBU0gsS0FWTSxDQUFQO0FBV0gsR0FaTSxDQUFQO0FBYUg7O0FBRUQsSUFBTUMsUUFBUSxHQUFHLElBQUlyQixXQUFKLEVBQWpCO0FBQ0FzQixNQUFNLENBQUNDLE9BQVAsR0FBaUJGLFFBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FjZXIvRGVza3RvcC9taW5hY29pbi9taW5hY29pbi9taW5hY29pbi1zZXJ2ZXIvc3JjL2xpYi9kYXRhYmFzZS9jbGFzc2VzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBMT0dfVEFHID0gXCJMREJcIjtcblxuY29uc3QgaW9jID0gcmVxdWlyZSgnLi4vLi4vLi4vdXRpbC9pb2NDb250YWluZXInKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IElEYXRhYmFzZSA9IHJlcXVpcmUoJy4vSURhdGFiYXNlLmpzJyk7XG5cbmNvbnN0IGxvZ2dlciA9IGlvYy5sb2dnZXJGYWN0b3J5LmNyZWF0ZUxvZ2dlcihMT0dfVEFHKTtcbmNvbnN0IGV4Y2VwdGlvbiA9IGlvYy5laEZhY3RvcnkuY3JlYXRlSGFuZGxlcihsb2dnZXIpO1xuXG4vKipcbiAqIG1pbmFjb2luOiBMb2NhbEpzb25EYlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBpbXBsZW1lbnRhdGlvbiBvZiBJRGF0YWJhc2UgdGhhdCByZWFkcy93cml0ZXMgbG9jYWwgZmlsZXMuIFxuICpcbiAqIGF1dGhvcjogSm9obiBSLiBLb3NpbnNraVxuICovXG5jbGFzcyBMb2NhbEZpbGVEYiBleHRlbmRzIElEYXRhYmFzZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogc2VyaWFsaXplICYgc2F2ZSB0aGUgZ2l2ZW4gYmxvY2tjaGFpbiB0byBkYXRhIHNvdXJjZVxuICAgICAqIEBwYXJhbSB7QmxvY2tjaGFpbn0gYmxvY2tjaGFpblxuICAgICAqL1xuICAgIGFzeW5jIHNhdmVCbG9ja2NoYWluKGJsb2NrY2hhaW4pIHtcbiAgICAgICAgYXdhaXQgdGhpcy4jc2F2ZSgnYmxvY2tjaGFpbicsIGJsb2NrY2hhaW4pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHJlYWQgYmxvY2tjaGFpbiBkYXRhIGZyb20gZGF0YSBzb3VyY2UgYW5kIHJldHVybiBhcyBqc29uXG4gICAgICogQHJldHVybnMge2pzb259XG4gICAgICovXG4gICAgLypqc29uKi8gYXN5bmMgZ2V0QmxvY2tjaGFpbigpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucmVhZCgnYmxvY2tjaGFpbicpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHNlcmlhbGl6ZSAmIHNhdmUgdGhlIGdpdmVuIHdhbGxldCB0byBkYXRhIHNvdXJjZVxuICAgICAqIEBwYXJhbSB7V2FsbGV0fSB3YWxsZXRcbiAgICAgKi9cbiAgICBhc3luYyBzYXZlV2FsbGV0KHdhbGxldCkge1xuICAgICAgICBhd2FpdCB0aGlzLiNzYXZlKCd3YWxsZXQnLCB3YWxsZXQpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHJlYWQgd2FsbGV0IGRhdGEgZnJvbSBkYXRhIHNvdXJjZSBhbmQgcmV0dXJuIGFzIFdhbGxldCBpbnN0YW5jZVxuICAgICAqIEByZXR1cm5zIHtqc29ufVxuICAgICAqL1xuICAgIC8qanNvbiovIGFzeW5jIGdldFdhbGxldCgpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucmVhZCgnd2FsbGV0Jyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogd3JpdGVzIGEgdmFsdWUgKGpzb24gb2JqZWN0KSB0byBhIERCIGZpbGUgXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGtleSBcbiAgICAgKiBAcGFyYW0ge2pzb259IG9iaiBcbiAgICAgKi9cbiAgICBhc3luYyAjc2F2ZShrZXksIG9iaikge1xuICAgICAgICBhd2FpdCBleGNlcHRpb24udHJ5QXN5bmMoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgbGV0IGRhdGEgPSB7fTtcbiAgICAgICAgICAgIGlmIChvYmopIHtcbiAgICAgICAgICAgICAgICBkYXRhID0gSlNPTi5zdHJpbmdpZnkob2JqLnRvSnNvbigpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGF3YWl0IHdyaXRlRmlsZShrZXkgKyAnLnR4dCcsIGRhdGEpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiByZWFkcyBhIHZhbHVlIChqc29uIG9iamVjdCkgZnJvbSB0aGUgREIgZmlsZSBcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IFxuICAgICAqL1xuICAgIGFzeW5jIHJlYWQoa2V5KSB7XG4gICAgICAgIHJldHVybiBhd2FpdCBleGNlcHRpb24udHJ5QXN5bmMoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlYWRGaWxlKGtleSArICcudHh0Jyk7XG4gICAgICAgICAgICByZXR1cm4gZGF0YSA/IEpTT04ucGFyc2UoZGF0YSkgOiBudWxsO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5cblxuLyoqXG4gKiB3cml0ZSBzdHJpbmcgZGF0YSB0byBhIHRleHQgZmlsZVxuICogQHBhcmFtIHtzdHJpbmd9IHBhdGhcbiAqIEBwYXJhbSB7c3RyaW5nfSBkYXRhXG4gKiBAcmV0dXJucyB7UHJvbWlzZShib29sKX1cbiAqL1xuZnVuY3Rpb24gLypib29sKi8gd3JpdGVGaWxlKHBhdGgsIGRhdGEpIHtcbiAgICBleGNlcHRpb24udHJ5KCgpID0+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGZzLndyaXRlRmlsZShwYXRoLCBkYXRhLCAoZXJyLCBkYXRhKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGVycilcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHRydWUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuXG4vKipcbiAqIHJlYWQgc3RyaW5nIGRhdGEgZnJvbSBhIHRleHQgZmlsZVxuICogQHBhcmFtIHtzdHJpbmd9IHBhdGhcbiAqIEByZXR1cm5zIHtQcm9taXNlKHN0cmluZyl9XG4gKi9cbmZ1bmN0aW9uIC8qc3RyaW5nKi8gcmVhZEZpbGUocGF0aCkge1xuICAgIHJldHVybiBleGNlcHRpb24udHJ5KCgpID0+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGZzLnJlYWRGaWxlKHBhdGgsIChlcnIsIGRhdGEpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIGxvZ2dlci5lcnJvcihlcnIpO1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKG51bGwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShkYXRhLnRvU3RyaW5nKCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cblxuY29uc3QgZGF0YWJhc2UgPSBuZXcgTG9jYWxGaWxlRGIoKTtcbm1vZHVsZS5leHBvcnRzID0gZGF0YWJhc2U7Il19",
    "map": {
      "version": 3,
      "sources": [
        "LocalJsonDb.js"
      ],
      "names": [
        "LOG_TAG",
        "ioc",
        "require",
        "fs",
        "IDatabase",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "LocalFileDb",
        "blockchain",
        "read",
        "wallet",
        "key",
        "tryAsync",
        "readFile",
        "data",
        "JSON",
        "parse",
        "obj",
        "stringify",
        "toJson",
        "writeFile",
        "path",
        "Promise",
        "resolve",
        "reject",
        "err",
        "error",
        "toString",
        "database",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,KAAhB;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,4BAAD,CAAnB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,gBAAD,CAAzB;;AAEA,IAAMG,MAAM,GAAGJ,GAAG,CAACK,aAAJ,CAAkBC,YAAlB,CAA+BP,OAA/B,CAAf;AACA,IAAMQ,SAAS,GAAGP,GAAG,CAACQ,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;IAOMM,W;;;;;AACF,yBAAc;AAAA;;AAAA;;AACV;;AADU;;AAAA;AAEb;AAED;;;;;;;;;;;+CAIqBC,U;;;;;;8CACX,I,sBAAA,I,EAAW,Y,EAAcA,U;;;;;;;;;;;;;;;;AAGnC;;;;;AAIA;;;;;;;;;;;;;uBACiB,KAAKC,IAAL,CAAU,YAAV,C;;;;;;;;;;;;;;;;;;;AAGjB;;;;;;;;;;gDAIiBC,M;;;;;;8CACP,I,sBAAA,I,EAAW,Q,EAAUA,M;;;;;;;;;;;;;;;;AAG/B;;;;;AAIA;;;;;;;;;;;;;uBACiB,KAAKD,IAAL,CAAU,QAAV,C;;;;;;;;;;;;;;;;;;;AAGjB;;;;;;;;;AAeA;;;;;;;gDAIWE,G;;;;;;uBACMP,SAAS,CAACQ,QAAV;AAAA;AAAA;AAAA;AAAA,wCAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACTC,QAAQ,CAACF,GAAG,GAAG,MAAP,CADC;;AAAA;AACtBG,0BAAAA,IADsB;AAAA,4DAErBA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAH,GAAsB,IAFL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAnB,G;;;;;;;;;;;;;;;;;;;;;;EAzDKd,S;AAiE1B;;;;;;;;;;;;;;;4CAvBgBW,G,EAAKM,G;;;;;;mBACPb,SAAS,CAACQ,QAAV;AAAA;AAAA;AAAA;AAAA,oCAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBE,sBAAAA,IADiB,GACV,EADU;;AAErB,0BAAIG,GAAJ,EAAS;AACLH,wBAAAA,IAAI,GAAGC,IAAI,CAACG,SAAL,CAAeD,GAAG,CAACE,MAAJ,EAAf,CAAP;AACH;;AAJoB;AAAA,6BAKfC,SAAS,CAACT,GAAG,GAAG,MAAP,EAAeG,IAAf,CALM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAnB,G;;;;;;;;;;;;;;;;;AA4Bd;AAAS;AAASM,SAAlB,CAA4BC,IAA5B,EAAkCP,IAAlC,EAAwC;AACpCV,EAAAA,SAAS,OAAT,CAAc,YAAM;AAChB,WAAO,IAAIkB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCzB,MAAAA,EAAE,CAACqB,SAAH,CAAaC,IAAb,EAAmBP,IAAnB,EAAyB,UAACW,GAAD,EAAMX,IAAN,EAAe;AACpC,YAAIW,GAAJ,EACID,MAAM,CAACC,GAAD,CAAN,CADJ,KAGIF,OAAO,CAAC,IAAD,CAAP;AACP,OALD;AAMH,KAPM,CAAP;AAQH,GATD;AAUH;AAED;;;;;;;AAKA;AAAS;AAAWV,QAApB,CAA6BQ,IAA7B,EAAmC;AAC/B,SAAOjB,SAAS,OAAT,CAAc,YAAM;AACvB,WAAO,IAAIkB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCzB,MAAAA,EAAE,CAACc,QAAH,CAAYQ,IAAZ,EAAkB,UAACI,GAAD,EAAMX,IAAN,EAAe;AAC7B,YAAIW,GAAJ,EAAS;AACLxB,UAAAA,MAAM,CAACyB,KAAP,CAAaD,GAAb;AACAF,UAAAA,OAAO,CAAC,IAAD,CAAP;AACH,SAHD,MAIK;AACDA,UAAAA,OAAO,CAACT,IAAI,CAACa,QAAL,EAAD,CAAP;AACH;AACJ,OARD;AASH,KAVM,CAAP;AAWH,GAZM,CAAP;AAaH;;AAED,IAAMC,QAAQ,GAAG,IAAIrB,WAAJ,EAAjB;AACAsB,MAAM,CAACC,OAAP,GAAiBF,QAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = \"LDB\";\n\nconst ioc = require('../../../util/iocContainer');\nconst fs = require('fs');\nconst IDatabase = require('./IDatabase.js');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: LocalJsonDb\n * ---------------------\n * implementation of IDatabase that reads/writes local files. \n *\n * author: John R. Kosinski\n */\nclass LocalFileDb extends IDatabase {\n    constructor() {\n        super();\n    }\n\n    /**\n     * serialize & save the given blockchain to data source\n     * @param {Blockchain} blockchain\n     */\n    async saveBlockchain(blockchain) {\n        await this.#save('blockchain', blockchain);\n    }\n\n    /**\n     * read blockchain data from data source and return as json\n     * @returns {json}\n     */\n    /*json*/ async getBlockchain() {\n        return await this.read('blockchain');\n    }\n\n    /**\n     * serialize & save the given wallet to data source\n     * @param {Wallet} wallet\n     */\n    async saveWallet(wallet) {\n        await this.#save('wallet', wallet);\n    }\n\n    /**\n     * read wallet data from data source and return as Wallet instance\n     * @returns {json}\n     */\n    /*json*/ async getWallet() {\n        return await this.read('wallet');\n    }\n\n    /**\n     * writes a value (json object) to a DB file \n     * @param {string} key \n     * @param {json} obj \n     */\n    async #save(key, obj) {\n        await exception.tryAsync(async () => {\n            let data = {};\n            if (obj) {\n                data = JSON.stringify(obj.toJson());\n            }\n            await writeFile(key + '.txt', data);\n        });\n    }\n\n    /**\n     * reads a value (json object) from the DB file \n     * @param {string} key \n     */\n    async read(key) {\n        return await exception.tryAsync(async () => {\n            const data = await readFile(key + '.txt');\n            return data ? JSON.parse(data) : null;\n        });\n    }\n}\n\n\n/**\n * write string data to a text file\n * @param {string} path\n * @param {string} data\n * @returns {Promise(bool)}\n */\nfunction /*bool*/ writeFile(path, data) {\n    exception.try(() => {\n        return new Promise((resolve, reject) => {\n            fs.writeFile(path, data, (err, data) => {\n                if (err)\n                    reject(err);\n                else\n                    resolve(true);\n            });\n        });\n    });\n}\n\n/**\n * read string data from a text file\n * @param {string} path\n * @returns {Promise(string)}\n */\nfunction /*string*/ readFile(path) {\n    return exception.try(() => {\n        return new Promise((resolve, reject) => {\n            fs.readFile(path, (err, data) => {\n                if (err) {\n                    logger.error(err);\n                    resolve(null);\n                }\n                else {\n                    resolve(data.toString());\n                }\n            });\n        });\n    });\n}\n\nconst database = new LocalFileDb();\nmodule.exports = database;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567780459206
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/IDatabase.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/IDatabase.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/IDatabase.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes/IDatabase.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes",
        "sourceFileName": "IDatabase.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * minacoin: IDatabase\n * -------------------\n * interface for app database which stores things like the blockchain \n * and wallet info. \n *\n * author: John R. Kosinski\n */\nvar IDatabase =\n/*#__PURE__*/\nfunction () {\n  function IDatabase() {\n    _classCallCheck(this, IDatabase);\n  }\n\n  _createClass(IDatabase, [{\n    key: \"saveBlockchain\",\n    value: function saveBlockchain(blockchain) {}\n  }, {\n    key: \"getBlockchain\",\n    value: function getBlockchain() {}\n  }, {\n    key: \"saveWallet\",\n    value: function saveWallet(wallet) {}\n  }, {\n    key: \"getWallet\",\n    value: function getWallet() {}\n  }]);\n\n  return IDatabase;\n}();\n\nmodule.exports = IDatabase;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIklEYXRhYmFzZS5qcyJdLCJuYW1lcyI6WyJJRGF0YWJhc2UiLCJibG9ja2NoYWluIiwid2FsbGV0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFDQTs7Ozs7Ozs7SUFRTUEsUzs7Ozs7Ozs7O21DQUNhQyxVLEVBQVksQ0FBRzs7O29DQUNkLENBQUc7OzsrQkFDUkMsTSxFQUFRLENBQUc7OztnQ0FDVixDQUFHOzs7Ozs7QUFHbkJDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkosU0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21pbmFjb2luL21pbmFjb2luLXNlcnZlci9zcmMvbGliL2RhdGFiYXNlL2NsYXNzZXMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8qKlxuICogbWluYWNvaW46IElEYXRhYmFzZVxuICogLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogaW50ZXJmYWNlIGZvciBhcHAgZGF0YWJhc2Ugd2hpY2ggc3RvcmVzIHRoaW5ncyBsaWtlIHRoZSBibG9ja2NoYWluIFxuICogYW5kIHdhbGxldCBpbmZvLiBcbiAqXG4gKiBhdXRob3I6IEpvaG4gUi4gS29zaW5za2lcbiAqL1xuY2xhc3MgSURhdGFiYXNlIHtcbiAgICBzYXZlQmxvY2tjaGFpbihibG9ja2NoYWluKSB7IH1cbiAgICBnZXRCbG9ja2NoYWluKCkgeyB9XG4gICAgc2F2ZVdhbGxldCh3YWxsZXQpIHsgfVxuICAgIGdldFdhbGxldCgpIHsgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IElEYXRhYmFzZTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "IDatabase.js"
      ],
      "names": [
        "IDatabase",
        "blockchain",
        "wallet",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;AACA;;;;;;;;IAQMA,S;;;;;;;;;mCACaC,U,EAAY,CAAG;;;oCACd,CAAG;;;+BACRC,M,EAAQ,CAAG;;;gCACV,CAAG;;;;;;AAGnBC,MAAM,CAACC,OAAP,GAAiBJ,SAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/minacoin/minacoin-server/src/lib/database/classes",
      "sourcesContent": [
        "\n/**\n * minacoin: IDatabase\n * -------------------\n * interface for app database which stores things like the blockchain \n * and wallet info. \n *\n * author: John R. Kosinski\n */\nclass IDatabase {\n    saveBlockchain(blockchain) { }\n    getBlockchain() { }\n    saveWallet(wallet) { }\n    getWallet() { }\n}\n\nmodule.exports = IDatabase;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567780445531
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/index.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar LOG_TAG = 'IDX'; //configure IOC container\n\nvar ioc = require('./util/iocContainer');\n\nioc.service('loggerFactory', function (c) {\n  return require('./util/winstonLogger');\n});\nioc.service('ehFactory', function (c) {\n  return require('./util/exceptionHandler');\n});\nioc.service('p2pServerFactory', function (c) {\n  return require('./lib/p2p/classes/SwarmP2PServer').factory;\n});\nioc.service('database', function (c) {\n  return require('./lib/database/classes/LocalJsonDb');\n});\n\nvar Server = require('./Server');\n\nvar config = require('./config');\n\nvar server = new Server(config);\nserver.run();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkxPR19UQUciLCJpb2MiLCJyZXF1aXJlIiwic2VydmljZSIsImMiLCJmYWN0b3J5IiwiU2VydmVyIiwiY29uZmlnIiwic2VydmVyIiwicnVuIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxPQUFPLEdBQUcsS0FBaEIsQyxDQUVBOztBQUNBLElBQU1DLEdBQUcsR0FBR0MsT0FBTyxDQUFDLHFCQUFELENBQW5COztBQUNBRCxHQUFHLENBQUNFLE9BQUosQ0FBWSxlQUFaLEVBQTZCLFVBQUFDLENBQUM7QUFBQSxTQUFJRixPQUFPLENBQUMsc0JBQUQsQ0FBWDtBQUFBLENBQTlCO0FBQ0FELEdBQUcsQ0FBQ0UsT0FBSixDQUFZLFdBQVosRUFBeUIsVUFBQUMsQ0FBQztBQUFBLFNBQUlGLE9BQU8sQ0FBQyx5QkFBRCxDQUFYO0FBQUEsQ0FBMUI7QUFDQUQsR0FBRyxDQUFDRSxPQUFKLENBQVksa0JBQVosRUFBZ0MsVUFBQUMsQ0FBQztBQUFBLFNBQUdGLE9BQU8sQ0FBQyxrQ0FBRCxDQUFQLENBQTRDRyxPQUEvQztBQUFBLENBQWpDO0FBQ0FKLEdBQUcsQ0FBQ0UsT0FBSixDQUFZLFVBQVosRUFBd0IsVUFBQUMsQ0FBQztBQUFBLFNBQUdGLE9BQU8sQ0FBQyxvQ0FBRCxDQUFWO0FBQUEsQ0FBekI7O0FBRUEsSUFBTUksTUFBTSxHQUFHSixPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFDQSxJQUFNSyxNQUFNLEdBQUdMLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUVBLElBQU1NLE1BQU0sR0FBRyxJQUFJRixNQUFKLENBQVdDLE1BQVgsQ0FBZjtBQUNBQyxNQUFNLENBQUNDLEdBQVAiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21hc3Rlci9taW5hY29pbi9taW5hY29pbi1zZXJ2ZXIvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBMT0dfVEFHID0gJ0lEWCc7XG5cbi8vY29uZmlndXJlIElPQyBjb250YWluZXJcbmNvbnN0IGlvYyA9IHJlcXVpcmUoJy4vdXRpbC9pb2NDb250YWluZXInKTtcbmlvYy5zZXJ2aWNlKCdsb2dnZXJGYWN0b3J5JywgYyA9PiByZXF1aXJlKCcuL3V0aWwvd2luc3RvbkxvZ2dlcicpKTtcbmlvYy5zZXJ2aWNlKCdlaEZhY3RvcnknLCBjID0+IHJlcXVpcmUoJy4vdXRpbC9leGNlcHRpb25IYW5kbGVyJykpO1xuaW9jLnNlcnZpY2UoJ3AycFNlcnZlckZhY3RvcnknLCBjPT4gcmVxdWlyZSgnLi9saWIvcDJwL2NsYXNzZXMvU3dhcm1QMlBTZXJ2ZXInKS5mYWN0b3J5KTtcbmlvYy5zZXJ2aWNlKCdkYXRhYmFzZScsIGM9PiByZXF1aXJlKCcuL2xpYi9kYXRhYmFzZS9jbGFzc2VzL0xvY2FsSnNvbkRiJykpO1xuXG5jb25zdCBTZXJ2ZXIgPSByZXF1aXJlKCcuL1NlcnZlcicpO1xuY29uc3QgY29uZmlnID0gcmVxdWlyZSgnLi9jb25maWcnKTsgXG5cbmNvbnN0IHNlcnZlciA9IG5ldyBTZXJ2ZXIoY29uZmlnKTsgXG5zZXJ2ZXIucnVuKCk7IFxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "LOG_TAG",
        "ioc",
        "require",
        "service",
        "c",
        "factory",
        "Server",
        "config",
        "server",
        "run"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,OAAO,GAAG,KAAhB,C,CAEA;;AACA,IAAMC,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAnB;;AACAD,GAAG,CAACE,OAAJ,CAAY,eAAZ,EAA6B,UAAAC,CAAC;AAAA,SAAIF,OAAO,CAAC,sBAAD,CAAX;AAAA,CAA9B;AACAD,GAAG,CAACE,OAAJ,CAAY,WAAZ,EAAyB,UAAAC,CAAC;AAAA,SAAIF,OAAO,CAAC,yBAAD,CAAX;AAAA,CAA1B;AACAD,GAAG,CAACE,OAAJ,CAAY,kBAAZ,EAAgC,UAAAC,CAAC;AAAA,SAAGF,OAAO,CAAC,kCAAD,CAAP,CAA4CG,OAA/C;AAAA,CAAjC;AACAJ,GAAG,CAACE,OAAJ,CAAY,UAAZ,EAAwB,UAAAC,CAAC;AAAA,SAAGF,OAAO,CAAC,oCAAD,CAAV;AAAA,CAAzB;;AAEA,IAAMI,MAAM,GAAGJ,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAMK,MAAM,GAAGL,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAMM,MAAM,GAAG,IAAIF,MAAJ,CAAWC,MAAX,CAAf;AACAC,MAAM,CAACC,GAAP",
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'IDX';\n\n//configure IOC container\nconst ioc = require('./util/iocContainer');\nioc.service('loggerFactory', c => require('./util/winstonLogger'));\nioc.service('ehFactory', c => require('./util/exceptionHandler'));\nioc.service('p2pServerFactory', c=> require('./lib/p2p/classes/SwarmP2PServer').factory);\nioc.service('database', c=> require('./lib/database/classes/LocalJsonDb'));\n\nconst Server = require('./Server');\nconst config = require('./config'); \n\nconst server = new Server(config); \nserver.run(); \n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567888638956
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util/iocContainer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util/iocContainer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util/iocContainer.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util/iocContainer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util",
        "sourceFileName": "iocContainer.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n/**\n * ------------------------\n * simple homemade IOC container to serve our purposes.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Container =\n/*#__PURE__*/\nfunction () {\n  function Container() {\n    _classCallCheck(this, Container);\n\n    this.services = {};\n  }\n  /**\n   * register a service by name, with the IOC container\n   *\n   * @param {string} serviceName\n   * @param {fn} callback\n   */\n\n\n  _createClass(Container, [{\n    key: \"service\",\n    value: function service(serviceName, callback) {\n      var _this = this;\n\n      Object.defineProperty(this, serviceName, {\n        get: function get() {\n          if (!_this.services.hasOwnProperty(serviceName)) {\n            _this.services[serviceName] = callback(_this);\n          }\n\n          return _this.services[serviceName];\n        },\n        configurable: true,\n        enumerable: true\n      });\n      return this;\n    }\n  }]);\n\n  return Container;\n}(); //export singleton instance\n\n\nvar container = new Container();\nmodule.exports = container;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlvY0NvbnRhaW5lci5qcyJdLCJuYW1lcyI6WyJDb250YWluZXIiLCJzZXJ2aWNlcyIsInNlcnZpY2VOYW1lIiwiY2FsbGJhY2siLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldCIsImhhc093blByb3BlcnR5IiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImNvbnRhaW5lciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBO0FBRUE7Ozs7Ozs7Ozs7Ozs7O0lBT01BLFM7OztBQUNGLHVCQUFjO0FBQUE7O0FBQ1YsU0FBS0MsUUFBTCxHQUFnQixFQUFoQjtBQUNIO0FBRUQ7Ozs7Ozs7Ozs7NEJBTVFDLFcsRUFBYUMsUSxFQUFVO0FBQUE7O0FBQzNCQyxNQUFBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0IsSUFBdEIsRUFBNEJILFdBQTVCLEVBQXlDO0FBQ3JDSSxRQUFBQSxHQUFHLEVBQUUsZUFBTTtBQUNQLGNBQUksQ0FBQyxLQUFJLENBQUNMLFFBQUwsQ0FBY00sY0FBZCxDQUE2QkwsV0FBN0IsQ0FBTCxFQUFnRDtBQUM1QyxZQUFBLEtBQUksQ0FBQ0QsUUFBTCxDQUFjQyxXQUFkLElBQTZCQyxRQUFRLENBQUMsS0FBRCxDQUFyQztBQUNIOztBQUNELGlCQUFPLEtBQUksQ0FBQ0YsUUFBTCxDQUFjQyxXQUFkLENBQVA7QUFDSCxTQU5vQztBQU9yQ00sUUFBQUEsWUFBWSxFQUFFLElBUHVCO0FBUXJDQyxRQUFBQSxVQUFVLEVBQUU7QUFSeUIsT0FBekM7QUFXQSxhQUFPLElBQVA7QUFDSDs7OztLQUdMOzs7QUFDQSxJQUFNQyxTQUFTLEdBQUcsSUFBSVYsU0FBSixFQUFsQjtBQUNBVyxNQUFNLENBQUNDLE9BQVAsR0FBaUJGLFNBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FjZXIvRGVza3RvcC9taW5hY29pbi9tYXN0ZXIvbWluYWNvaW4vbWluYWNvaW4tc2VydmVyL3NyYy91dGlsIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogc2ltcGxlIGhvbWVtYWRlIElPQyBjb250YWluZXIgdG8gc2VydmUgb3VyIHB1cnBvc2VzLlxuICpcbiAqIEF1dGhvcjogSm9obiBSLiBLb3NpbnNraVxuICogRGF0ZTogMjcgQXVnIDIwMTlcbiAqL1xuY2xhc3MgQ29udGFpbmVyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5zZXJ2aWNlcyA9IHt9O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHJlZ2lzdGVyIGEgc2VydmljZSBieSBuYW1lLCB3aXRoIHRoZSBJT0MgY29udGFpbmVyXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gc2VydmljZU5hbWVcbiAgICAgKiBAcGFyYW0ge2ZufSBjYWxsYmFja1xuICAgICAqL1xuICAgIHNlcnZpY2Uoc2VydmljZU5hbWUsIGNhbGxiYWNrKSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBzZXJ2aWNlTmFtZSwge1xuICAgICAgICAgICAgZ2V0OiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLnNlcnZpY2VzLmhhc093blByb3BlcnR5KHNlcnZpY2VOYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNlcnZpY2VzW3NlcnZpY2VOYW1lXSA9IGNhbGxiYWNrKHRoaXMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zZXJ2aWNlc1tzZXJ2aWNlTmFtZV07XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59XG5cbi8vZXhwb3J0IHNpbmdsZXRvbiBpbnN0YW5jZVxuY29uc3QgY29udGFpbmVyID0gbmV3IENvbnRhaW5lcigpO1xubW9kdWxlLmV4cG9ydHMgPSBjb250YWluZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "iocContainer.js"
      ],
      "names": [
        "Container",
        "services",
        "serviceName",
        "callback",
        "Object",
        "defineProperty",
        "get",
        "hasOwnProperty",
        "configurable",
        "enumerable",
        "container",
        "module",
        "exports"
      ],
      "mappings": "AAAA;AAEA;;;;;;;;;;;;;;IAOMA,S;;;AACF,uBAAc;AAAA;;AACV,SAAKC,QAAL,GAAgB,EAAhB;AACH;AAED;;;;;;;;;;4BAMQC,W,EAAaC,Q,EAAU;AAAA;;AAC3BC,MAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4BH,WAA5B,EAAyC;AACrCI,QAAAA,GAAG,EAAE,eAAM;AACP,cAAI,CAAC,KAAI,CAACL,QAAL,CAAcM,cAAd,CAA6BL,WAA7B,CAAL,EAAgD;AAC5C,YAAA,KAAI,CAACD,QAAL,CAAcC,WAAd,IAA6BC,QAAQ,CAAC,KAAD,CAArC;AACH;;AACD,iBAAO,KAAI,CAACF,QAAL,CAAcC,WAAd,CAAP;AACH,SANoC;AAOrCM,QAAAA,YAAY,EAAE,IAPuB;AAQrCC,QAAAA,UAAU,EAAE;AARyB,OAAzC;AAWA,aAAO,IAAP;AACH;;;;KAGL;;;AACA,IAAMC,SAAS,GAAG,IAAIV,SAAJ,EAAlB;AACAW,MAAM,CAACC,OAAP,GAAiBF,SAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util",
      "sourcesContent": [
        "'use strict';\n\n/**\n * ------------------------\n * simple homemade IOC container to serve our purposes.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\nclass Container {\n    constructor() {\n        this.services = {};\n    }\n\n    /**\n     * register a service by name, with the IOC container\n     *\n     * @param {string} serviceName\n     * @param {fn} callback\n     */\n    service(serviceName, callback) {\n        Object.defineProperty(this, serviceName, {\n            get: () => {\n                if (!this.services.hasOwnProperty(serviceName)) {\n                    this.services[serviceName] = callback(this);\n                }\n                return this.services[serviceName];\n            },\n            configurable: true,\n            enumerable: true\n        });\n\n        return this;\n    }\n}\n\n//export singleton instance\nconst container = new Container();\nmodule.exports = container;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567888638956
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/Server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/Server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/Server.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/Server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src",
        "sourceFileName": "Server.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'SRV';\n\nvar ioc = require('./util/iocContainer'); //imports\n\n\nvar _require = require('./lib/miner'),\n    Miner = _require.Miner;\n\nvar _require2 = require('./lib/blockchain'),\n    Blockchain = _require2.Blockchain;\n\nvar _require3 = require('./lib/wallet'),\n    Wallet = _require3.Wallet,\n    TransactionPool = _require3.TransactionPool;\n\nvar _require4 = require('./HttpServer'),\n    HttpServer = _require4.HttpServer;\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n\nvar Server =\n/*#__PURE__*/\nfunction () {\n  function Server(config) {\n    _classCallCheck(this, Server);\n\n    this.config = config;\n  }\n\n  _createClass(Server, [{\n    key: \"run\",\n    value: function () {\n      var _run = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return initializeBlockchain(this.config);\n\n              case 2:\n                this.blockchain = _context.sent;\n                //on blockchain changes, save to database\n                this.blockchain.on('update', function () {\n                  ioc.database.saveBlockchain(_this.blockchain);\n                }); //create instance of wallet\n\n                _context.next = 6;\n                return initializeWallet(this.config);\n\n              case 6:\n                this.wallet = _context.sent;\n                //on wallet changes, save to database\n                this.wallet.on('update replace', function () {\n                  ioc.database.saveWallet(_this.wallet);\n                }); //create transaction pool\n\n                this.txPool = new TransactionPool(); //create instance of P2P server\n\n                this.p2pServer = ioc.p2pServerFactory.createInstance(this.blockchain, this.txPool, this.wallet); //create a miner\n\n                this.miner = new Miner(this.blockchain, this.txPool, this.wallet, this.p2pServer); //create and start server\n\n                this.httpServer = new HttpServer(this.config.HTTP_PORT, this.blockchain, this.wallet, this.p2pServer, this.txPool, this.miner);\n                this.httpServer.start(); //createTestChain(); \n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function run() {\n        return _run.apply(this, arguments);\n      }\n\n      return run;\n    }()\n  }]);\n\n  return Server;\n}();\n\nfunction initializeBlockchain(_x) {\n  return _initializeBlockchain.apply(this, arguments);\n}\n\nfunction _initializeBlockchain() {\n  _initializeBlockchain = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(config) {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return exception.tryAsync(\n            /*#__PURE__*/\n            _asyncToGenerator(\n            /*#__PURE__*/\n            regeneratorRuntime.mark(function _callee2() {\n              var blockchain, blockchainData;\n              return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      logger.info('initializing blockchain...');\n                      blockchain = null;\n\n                      if (!config.USE_DATABASE) {\n                        _context2.next = 7;\n                        break;\n                      }\n\n                      _context2.next = 5;\n                      return ioc.database.getBlockchain();\n\n                    case 5:\n                      blockchainData = _context2.sent;\n\n                      if (blockchainData) {\n                        blockchain = Blockchain.fromJson(blockchainData);\n                      }\n\n                    case 7:\n                      if (!blockchain) {\n                        logger.info('no blockchain found in DB; creating new one...');\n                        blockchain = new Blockchain();\n                        ioc.database.saveBlockchain(blockchain);\n                      }\n\n                      return _context2.abrupt(\"return\", blockchain);\n\n                    case 9:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            })));\n\n          case 2:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _initializeBlockchain.apply(this, arguments);\n}\n\nfunction initializeWallet(_x2) {\n  return _initializeWallet.apply(this, arguments);\n} //TODO: convert these to unit tests \n\n\nfunction _initializeWallet() {\n  _initializeWallet = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(config) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return exception.tryAsync(\n            /*#__PURE__*/\n            _asyncToGenerator(\n            /*#__PURE__*/\n            regeneratorRuntime.mark(function _callee4() {\n              var wallet, walletData;\n              return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      logger.info('initializing wallet...');\n                      wallet = null;\n\n                      if (!config.USE_DATABASE) {\n                        _context4.next = 7;\n                        break;\n                      }\n\n                      _context4.next = 5;\n                      return ioc.database.getWallet();\n\n                    case 5:\n                      walletData = _context4.sent;\n\n                      if (walletData) {\n                        wallet = Wallet.fromJson(walletData);\n                      }\n\n                    case 7:\n                      if (!wallet) {\n                        logger.info('no wallet found in DB; creating new one...');\n                        wallet = new Wallet();\n                        ioc.database.saveWallet(wallet);\n                      }\n\n                      return _context4.abrupt(\"return\", wallet);\n\n                    case 9:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, _callee4);\n            })));\n\n          case 2:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _initializeWallet.apply(this, arguments);\n}\n\nfunction createTestChain() {\n  return _createTestChain.apply(this, arguments);\n}\n\nfunction _createTestChain() {\n  _createTestChain = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6() {\n    var blockchain, txPool, wallet1, wallet2, wallet3, miner1, miner2, miner3, bc;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            blockchain = new Blockchain();\n            txPool = new TransactionPool();\n            wallet1 = new Wallet();\n            wallet2 = new Wallet();\n            wallet3 = new Wallet();\n            miner1 = new Miner(blockchain, txPool, wallet1);\n            miner2 = new Miner(blockchain, txPool, wallet2);\n            miner3 = new Miner(blockchain, txPool, wallet3);\n            wallet1.createTransaction(wallet2.publicKey, 10, blockchain, txPool);\n            wallet1.createTransaction(wallet3.publicKey, 10, blockchain, txPool);\n            wallet3.createTransaction(wallet2.publicKey, 100, blockchain, txPool);\n            miner1.mine();\n            wallet1.updateBalance(blockchain);\n            wallet2.updateBalance(blockchain);\n            wallet3.updateBalance(blockchain);\n            console.log('wallet 1 balance: ' + wallet1.balance);\n            console.log('wallet 2 balance: ' + wallet2.balance);\n            console.log('wallet 3 balance: ' + wallet3.balance);\n            ioc.database.saveBlockchain(blockchain);\n            _context6.t0 = Blockchain;\n            _context6.next = 22;\n            return ioc.database.getBlockchain();\n\n          case 22:\n            _context6.t1 = _context6.sent;\n            bc = _context6.t0.fromJson.call(_context6.t0, _context6.t1);\n            wallet2.createTransaction(wallet1.publicKey, 10, blockchain, txPool);\n            wallet3.createTransaction(wallet1.publicKey, 10, blockchain, txPool);\n            wallet2.createTransaction(wallet3.publicKey, 100, blockchain, txPool);\n            miner3.mine();\n            wallet1.updateBalance(blockchain);\n            wallet2.updateBalance(blockchain);\n            wallet3.updateBalance(blockchain);\n            console.log('wallet 1 balance: ' + wallet1.balance);\n            console.log('wallet 2 balance: ' + wallet2.balance);\n            console.log('wallet 3 balance: ' + wallet3.balance);\n\n          case 34:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _createTestChain.apply(this, arguments);\n}\n\nfunction runTestServers() {\n  return _runTestServers.apply(this, arguments);\n}\n\nfunction _runTestServers() {\n  _runTestServers = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7() {\n    var server1, server2, server3;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            server1 = new Server({});\n            server2 = new Server();\n            server3 = new Server();\n\n          case 3:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _runTestServers.apply(this, arguments);\n}\n\nmodule.exports = Server;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Server.js"
      ],
      "names": [
        "LOG_TAG",
        "ioc",
        "require",
        "Miner",
        "Blockchain",
        "Wallet",
        "TransactionPool",
        "HttpServer",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Server",
        "config",
        "initializeBlockchain",
        "blockchain",
        "on",
        "database",
        "saveBlockchain",
        "initializeWallet",
        "wallet",
        "saveWallet",
        "txPool",
        "p2pServer",
        "p2pServerFactory",
        "createInstance",
        "miner",
        "httpServer",
        "HTTP_PORT",
        "start",
        "tryAsync",
        "info",
        "USE_DATABASE",
        "getBlockchain",
        "blockchainData",
        "fromJson",
        "getWallet",
        "walletData",
        "createTestChain",
        "wallet1",
        "wallet2",
        "wallet3",
        "miner1",
        "miner2",
        "miner3",
        "createTransaction",
        "publicKey",
        "mine",
        "updateBalance",
        "console",
        "log",
        "balance",
        "bc",
        "runTestServers",
        "server1",
        "server2",
        "server3",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,KAAhB;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAnB,C,CAEA;;;eACkBA,OAAO,CAAC,aAAD,C;IAAjBC,K,YAAAA,K;;gBACeD,OAAO,CAAC,kBAAD,C;IAAtBE,U,aAAAA,U;;gBAC4BF,OAAO,CAAC,cAAD,C;IAAnCG,M,aAAAA,M;IAAQC,e,aAAAA,e;;gBACOJ,OAAO,CAAC,cAAD,C;IAAtBK,U,aAAAA,U;;AAER,IAAMC,MAAM,GAAGP,GAAG,CAACQ,aAAJ,CAAkBC,YAAlB,CAA+BV,OAA/B,CAAf;AACA,IAAMW,SAAS,GAAGV,GAAG,CAACW,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;;IAEMM,M;;;AACF,kBAAYC,MAAZ,EAAoB;AAAA;;AAChB,SAAKA,MAAL,GAAcA,MAAd;AACH;;;;;;;;;;;;;;;uBAI2BC,oBAAoB,CAAC,KAAKD,MAAN,C;;;AAA5C,qBAAKE,U;AAEL;AACA,qBAAKA,UAAL,CAAgBC,EAAhB,CAAmB,QAAnB,EAA6B,YAAM;AAC/BjB,kBAAAA,GAAG,CAACkB,QAAJ,CAAaC,cAAb,CAA4B,KAAI,CAACH,UAAjC;AACH,iBAFD,E,CAIA;;;uBACoBI,gBAAgB,CAAC,KAAKN,MAAN,C;;;AAApC,qBAAKO,M;AAEL;AACA,qBAAKA,MAAL,CAAYJ,EAAZ,CAAe,gBAAf,EAAiC,YAAM;AACnCjB,kBAAAA,GAAG,CAACkB,QAAJ,CAAaI,UAAb,CAAwB,KAAI,CAACD,MAA7B;AACH,iBAFD,E,CAIA;;AACA,qBAAKE,MAAL,GAAc,IAAIlB,eAAJ,EAAd,C,CAEA;;AACA,qBAAKmB,SAAL,GAAiBxB,GAAG,CAACyB,gBAAJ,CAAqBC,cAArB,CAAoC,KAAKV,UAAzC,EAAqD,KAAKO,MAA1D,EAAkE,KAAKF,MAAvE,CAAjB,C,CAEA;;AACA,qBAAKM,KAAL,GAAa,IAAIzB,KAAJ,CAAU,KAAKc,UAAf,EAA2B,KAAKO,MAAhC,EAAwC,KAAKF,MAA7C,EAAqD,KAAKG,SAA1D,CAAb,C,CAEA;;AACA,qBAAKI,UAAL,GAAkB,IAAItB,UAAJ,CACd,KAAKQ,MAAL,CAAYe,SADE,EAEd,KAAKb,UAFS,EAGd,KAAKK,MAHS,EAId,KAAKG,SAJS,EAKd,KAAKD,MALS,EAMd,KAAKI,KANS,CAAlB;AAQA,qBAAKC,UAAL,CAAgBE,KAAhB,G,CAEA;;;;;;;;;;;;;;;;;;;;;SAKOf,oB;;;;;;;0BAAf,kBAAoCD,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACiBJ,SAAS,CAACqB,QAAV;AAAA;AAAA;AAAA;AAAA,oCAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BxB,sBAAAA,MAAM,CAACyB,IAAP,CAAY,4BAAZ;AAEIhB,sBAAAA,UAHwB,GAGX,IAHW;;AAAA,2BAKxBF,MAAM,CAACmB,YALiB;AAAA;AAAA;AAAA;;AAAA;AAAA,6BAMGjC,GAAG,CAACkB,QAAJ,CAAagB,aAAb,EANH;;AAAA;AAMpBC,sBAAAA,cANoB;;AAOxB,0BAAIA,cAAJ,EAAoB;AAChBnB,wBAAAA,UAAU,GAAGb,UAAU,CAACiC,QAAX,CAAoBD,cAApB,CAAb;AACH;;AATuB;AAY5B,0BAAI,CAACnB,UAAL,EAAiB;AACbT,wBAAAA,MAAM,CAACyB,IAAP,CAAY,gDAAZ;AACAhB,wBAAAA,UAAU,GAAG,IAAIb,UAAJ,EAAb;AACAH,wBAAAA,GAAG,CAACkB,QAAJ,CAAaC,cAAb,CAA4BH,UAA5B;AACH;;AAhB2B,wDAkBrBA,UAlBqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAnB,GADjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAuBeI,gB;;EAuBf;;;;;;0BAvBA,kBAAgCN,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACiBJ,SAAS,CAACqB,QAAV;AAAA;AAAA;AAAA;AAAA,oCAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BxB,sBAAAA,MAAM,CAACyB,IAAP,CAAY,wBAAZ;AAEIX,sBAAAA,MAHwB,GAGf,IAHe;;AAAA,2BAKxBP,MAAM,CAACmB,YALiB;AAAA;AAAA;AAAA;;AAAA;AAAA,6BAMDjC,GAAG,CAACkB,QAAJ,CAAamB,SAAb,EANC;;AAAA;AAMpBC,sBAAAA,UANoB;;AAOxB,0BAAIA,UAAJ,EAAgB;AACZjB,wBAAAA,MAAM,GAAGjB,MAAM,CAACgC,QAAP,CAAgBE,UAAhB,CAAT;AACH;;AATuB;AAY5B,0BAAI,CAACjB,MAAL,EAAa;AACTd,wBAAAA,MAAM,CAACyB,IAAP,CAAY,4CAAZ;AACAX,wBAAAA,MAAM,GAAG,IAAIjB,MAAJ,EAAT;AACAJ,wBAAAA,GAAG,CAACkB,QAAJ,CAAaI,UAAb,CAAwBD,MAAxB;AACH;;AAhB2B,wDAkBrBA,MAlBqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAnB,GADjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAwBekB,e;;;;;;;0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACUvB,YAAAA,UADV,GACuB,IAAIb,UAAJ,EADvB;AAEUoB,YAAAA,MAFV,GAEmB,IAAIlB,eAAJ,EAFnB;AAIUmC,YAAAA,OAJV,GAIoB,IAAIpC,MAAJ,EAJpB;AAKUqC,YAAAA,OALV,GAKoB,IAAIrC,MAAJ,EALpB;AAMUsC,YAAAA,OANV,GAMoB,IAAItC,MAAJ,EANpB;AAQUuC,YAAAA,MARV,GAQmB,IAAIzC,KAAJ,CAAUc,UAAV,EAAsBO,MAAtB,EAA8BiB,OAA9B,CARnB;AASUI,YAAAA,MATV,GASmB,IAAI1C,KAAJ,CAAUc,UAAV,EAAsBO,MAAtB,EAA8BkB,OAA9B,CATnB;AAUUI,YAAAA,MAVV,GAUmB,IAAI3C,KAAJ,CAAUc,UAAV,EAAsBO,MAAtB,EAA8BmB,OAA9B,CAVnB;AAYIF,YAAAA,OAAO,CAACM,iBAAR,CAA0BL,OAAO,CAACM,SAAlC,EAA6C,EAA7C,EAAiD/B,UAAjD,EAA6DO,MAA7D;AACAiB,YAAAA,OAAO,CAACM,iBAAR,CAA0BJ,OAAO,CAACK,SAAlC,EAA6C,EAA7C,EAAiD/B,UAAjD,EAA6DO,MAA7D;AACAmB,YAAAA,OAAO,CAACI,iBAAR,CAA0BL,OAAO,CAACM,SAAlC,EAA6C,GAA7C,EAAkD/B,UAAlD,EAA8DO,MAA9D;AAEAoB,YAAAA,MAAM,CAACK,IAAP;AAEAR,YAAAA,OAAO,CAACS,aAAR,CAAsBjC,UAAtB;AACAyB,YAAAA,OAAO,CAACQ,aAAR,CAAsBjC,UAAtB;AACA0B,YAAAA,OAAO,CAACO,aAAR,CAAsBjC,UAAtB;AAEAkC,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBX,OAAO,CAACY,OAA3C;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBV,OAAO,CAACW,OAA3C;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBT,OAAO,CAACU,OAA3C;AAEApD,YAAAA,GAAG,CAACkB,QAAJ,CAAaC,cAAb,CAA4BH,UAA5B;AA1BJ,2BA2Beb,UA3Bf;AAAA;AAAA,mBA2ByCH,GAAG,CAACkB,QAAJ,CAAagB,aAAb,EA3BzC;;AAAA;AAAA;AA2BUmB,YAAAA,EA3BV,gBA2B0BjB,QA3B1B;AA6BIK,YAAAA,OAAO,CAACK,iBAAR,CAA0BN,OAAO,CAACO,SAAlC,EAA6C,EAA7C,EAAiD/B,UAAjD,EAA6DO,MAA7D;AACAmB,YAAAA,OAAO,CAACI,iBAAR,CAA0BN,OAAO,CAACO,SAAlC,EAA6C,EAA7C,EAAiD/B,UAAjD,EAA6DO,MAA7D;AACAkB,YAAAA,OAAO,CAACK,iBAAR,CAA0BJ,OAAO,CAACK,SAAlC,EAA6C,GAA7C,EAAkD/B,UAAlD,EAA8DO,MAA9D;AAEAsB,YAAAA,MAAM,CAACG,IAAP;AAEAR,YAAAA,OAAO,CAACS,aAAR,CAAsBjC,UAAtB;AACAyB,YAAAA,OAAO,CAACQ,aAAR,CAAsBjC,UAAtB;AACA0B,YAAAA,OAAO,CAACO,aAAR,CAAsBjC,UAAtB;AAEAkC,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBX,OAAO,CAACY,OAA3C;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBV,OAAO,CAACW,OAA3C;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBT,OAAO,CAACU,OAA3C;;AAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA4CeE,c;;;;;;;0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,YAAAA,OADV,GACoB,IAAI1C,MAAJ,CAAW,EAAX,CADpB;AAIU2C,YAAAA,OAJV,GAIoB,IAAI3C,MAAJ,EAJpB;AAKU4C,YAAAA,OALV,GAKoB,IAAI5C,MAAJ,EALpB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AASA6C,MAAM,CAACC,OAAP,GAAiB9C,MAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'SRV';\n\nconst ioc = require('./util/iocContainer');\n\n//imports\nconst { Miner } = require('./lib/miner');\nconst { Blockchain } = require('./lib/blockchain');\nconst { Wallet, TransactionPool } = require('./lib/wallet');\nconst { HttpServer } = require('./HttpServer');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\nclass Server {\n    constructor(config) {\n        this.config = config;\n    }\n    \n    async run() {\n        //create instance of blockchain\n        this.blockchain = await initializeBlockchain(this.config);\n    \n        //on blockchain changes, save to database\n        this.blockchain.on('update', () => {\n            ioc.database.saveBlockchain(this.blockchain);\n        });\n    \n        //create instance of wallet\n        this.wallet = await initializeWallet(this.config);\n    \n        //on wallet changes, save to database\n        this.wallet.on('update replace', () => {\n            ioc.database.saveWallet(this.wallet);\n        });\n    \n        //create transaction pool\n        this.txPool = new TransactionPool();\n    \n        //create instance of P2P server\n        this.p2pServer = ioc.p2pServerFactory.createInstance(this.blockchain, this.txPool, this.wallet);\n    \n        //create a miner\n        this.miner = new Miner(this.blockchain, this.txPool, this.wallet, this.p2pServer);\n    \n        //create and start server\n        this.httpServer = new HttpServer(\n            this.config.HTTP_PORT, \n            this.blockchain, \n            this.wallet, \n            this.p2pServer, \n            this.txPool, \n            this.miner\n        );\n        this.httpServer.start();\n        \n        //createTestChain(); \n    }\n}\n\n\nasync function initializeBlockchain(config) {\n    return await exception.tryAsync(async () => {\n        logger.info('initializing blockchain...');\n\n        let blockchain = null;\n\n        if (config.USE_DATABASE) {\n            let blockchainData = await ioc.database.getBlockchain();\n            if (blockchainData) {\n                blockchain = Blockchain.fromJson(blockchainData);\n            }\n        }\n\n        if (!blockchain) {\n            logger.info('no blockchain found in DB; creating new one...')\n            blockchain = new Blockchain();\n            ioc.database.saveBlockchain(blockchain);\n        }\n\n        return blockchain;\n    });\n}\n\nasync function initializeWallet(config) {\n    return await exception.tryAsync(async () => {\n        logger.info('initializing wallet...');\n\n        let wallet = null;\n\n        if (config.USE_DATABASE) {\n            let walletData = await ioc.database.getWallet();\n            if (walletData) {\n                wallet = Wallet.fromJson(walletData);\n            }\n        }\n\n        if (!wallet) {\n            logger.info('no wallet found in DB; creating new one...')\n            wallet = new Wallet();\n            ioc.database.saveWallet(wallet);\n        }\n\n        return wallet;\n    });\n}\n\n//TODO: convert these to unit tests \nasync function createTestChain() {\n    const blockchain = new Blockchain(); \n    const txPool = new TransactionPool(); \n    \n    const wallet1 = new Wallet(); \n    const wallet2 = new Wallet(); \n    const wallet3 = new Wallet(); \n\n    const miner1 = new Miner(blockchain, txPool, wallet1); \n    const miner2 = new Miner(blockchain, txPool, wallet2); \n    const miner3 = new Miner(blockchain, txPool, wallet3); \n    \n    wallet1.createTransaction(wallet2.publicKey, 10, blockchain, txPool); \n    wallet1.createTransaction(wallet3.publicKey, 10, blockchain, txPool); \n    wallet3.createTransaction(wallet2.publicKey, 100, blockchain, txPool);     \n    \n    miner1.mine(); \n    \n    wallet1.updateBalance(blockchain);\n    wallet2.updateBalance(blockchain);\n    wallet3.updateBalance(blockchain);\n    \n    console.log('wallet 1 balance: ' + wallet1.balance);\n    console.log('wallet 2 balance: ' + wallet2.balance);\n    console.log('wallet 3 balance: ' + wallet3.balance);\n    \n    ioc.database.saveBlockchain(blockchain); \n    const bc = Blockchain.fromJson(await ioc.database.getBlockchain()); \n    \n    wallet2.createTransaction(wallet1.publicKey, 10, blockchain, txPool); \n    wallet3.createTransaction(wallet1.publicKey, 10, blockchain, txPool); \n    wallet2.createTransaction(wallet3.publicKey, 100, blockchain, txPool);     \n    \n    miner3.mine();\n    \n    wallet1.updateBalance(blockchain);\n    wallet2.updateBalance(blockchain);\n    wallet3.updateBalance(blockchain);\n    \n    console.log('wallet 1 balance: ' + wallet1.balance);\n    console.log('wallet 2 balance: ' + wallet2.balance);\n    console.log('wallet 3 balance: ' + wallet3.balance);\n}\n\nasync function runTestServers() {\n    const server1 = new Server({\n        \n    }); \n    const server2 = new Server(); \n    const server3 = new Server(); \n}\n\n\nmodule.exports = Server;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567889528339
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/miner\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/miner/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/miner",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/miner/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/miner/index.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/miner/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/miner",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar Miner = require('./classes/Miner');\n\nmodule.exports = {\n  Miner: Miner\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIk1pbmVyIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLGlCQUFELENBQXJCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkgsRUFBQUEsS0FBSyxFQUFMQTtBQURhLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FjZXIvRGVza3RvcC9taW5hY29pbi9tYXN0ZXIvbWluYWNvaW4vbWluYWNvaW4tc2VydmVyL3NyYy9saWIvbWluZXIiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IE1pbmVyID0gcmVxdWlyZSgnLi9jbGFzc2VzL01pbmVyJyk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIE1pbmVyXG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Miner",
        "require",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,iBAAD,CAArB;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACbH,EAAAA,KAAK,EAALA;AADa,CAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/miner",
      "sourcesContent": [
        "'use strict';\n\nconst Miner = require('./classes/Miner');\n\nmodule.exports = {\n    Miner\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1567888638956
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/miner/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/miner/classes/Miner.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/miner/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/miner/classes/Miner.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/miner/classes/Miner.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/miner/classes/Miner.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/miner/classes",
        "sourceFileName": "Miner.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'MNR';\n\nvar ioc = require('../../../util/iocContainer');\n\nvar _require = require('../../wallet'),\n    Transaction = _require.Transaction,\n    Wallet = _require.Wallet;\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: Miner\n * ---------------\n * handles mining new coins \n *\n * author: John R. Kosinski\n */\n\nvar Miner =\n/*#__PURE__*/\nfunction () {\n  _createClass(Miner, [{\n    key: \"blockchain\",\n    get: function get() {\n      return this._blockchain;\n    }\n  }, {\n    key: \"transactionPool\",\n    get: function get() {\n      return this._transactionPool;\n    }\n  }, {\n    key: \"wallet\",\n    get: function get() {\n      return this._wallet;\n    }\n  }, {\n    key: \"p2pServer\",\n    get: function get() {\n      return this._p2pServer;\n    }\n    /**\n     * constructor \n     * @param {Blockchain} blockchain \n     * @param {TransactionPool} transactionPool \n     * @param {Wallet} wallet \n     * @param {IP2PServer} p2pServer \n     */\n\n  }]);\n\n  function Miner(blockchain, transactionPool, wallet, p2pServer) {\n    _classCallCheck(this, Miner);\n\n    this._blockchain = blockchain;\n    this._transactionPool = transactionPool;\n    this._wallet = wallet;\n    this._p2pServer = p2pServer;\n  }\n  /**\n   * selects transactions from the transaction pool to add to a new block, creates \n   * & adds the new block to the blockchain, and returns the new block. \n   * @returns {Block}\n   */\n\n  /*Block*/\n\n\n  _createClass(Miner, [{\n    key: \"mine\",\n    value: function mine() {\n      var _this = this;\n\n      return exception[\"try\"](function () {\n        //get transactions from transaction pool\n        var validTransactions = _this.transactionPool.validTransactions();\n\n        if (validTransactions && validTransactions.length > 0) {\n          //add a reward for self\n          validTransactions.push(Transaction.rewardTransaction(_this.wallet, Wallet.blockchainWallet())); //add them into a block\n\n          var block = _this.blockchain.addBlock(validTransactions);\n\n          if (block) {\n            //sync the chain\n            if (_this.p2pServer) {\n              _this.p2pServer.syncChain();\n            } //clear the transaction pool\n\n\n            _this.transactionPool.clear(); //broadcast directive to clear transaction pool\n\n\n            if (_this.p2pServer) {\n              _this.p2pServer.broadcastClearTransactions();\n            }\n          } else {\n            //clear the transaction pool; maybe we have an old or corrupt pool\n            _this.transactionPool.clear();\n          }\n\n          return block;\n        } else {\n          logger.info('no valid transactions available to mine');\n          return null;\n        }\n      });\n    }\n  }]);\n\n  return Miner;\n}();\n\nmodule.exports = Miner;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1pbmVyLmpzIl0sIm5hbWVzIjpbIkxPR19UQUciLCJpb2MiLCJyZXF1aXJlIiwiVHJhbnNhY3Rpb24iLCJXYWxsZXQiLCJsb2dnZXIiLCJsb2dnZXJGYWN0b3J5IiwiY3JlYXRlTG9nZ2VyIiwiZXhjZXB0aW9uIiwiZWhGYWN0b3J5IiwiY3JlYXRlSGFuZGxlciIsIk1pbmVyIiwiX2Jsb2NrY2hhaW4iLCJfdHJhbnNhY3Rpb25Qb29sIiwiX3dhbGxldCIsIl9wMnBTZXJ2ZXIiLCJibG9ja2NoYWluIiwidHJhbnNhY3Rpb25Qb29sIiwid2FsbGV0IiwicDJwU2VydmVyIiwidmFsaWRUcmFuc2FjdGlvbnMiLCJsZW5ndGgiLCJwdXNoIiwicmV3YXJkVHJhbnNhY3Rpb24iLCJibG9ja2NoYWluV2FsbGV0IiwiYmxvY2siLCJhZGRCbG9jayIsInN5bmNDaGFpbiIsImNsZWFyIiwiYnJvYWRjYXN0Q2xlYXJUcmFuc2FjdGlvbnMiLCJpbmZvIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBRUEsSUFBTUEsT0FBTyxHQUFHLEtBQWhCOztBQUVBLElBQU1DLEdBQUcsR0FBR0MsT0FBTyxDQUFDLDRCQUFELENBQW5COztlQUNnQ0EsT0FBTyxDQUFDLGNBQUQsQztJQUEvQkMsVyxZQUFBQSxXO0lBQWFDLE0sWUFBQUEsTTs7QUFFckIsSUFBTUMsTUFBTSxHQUFHSixHQUFHLENBQUNLLGFBQUosQ0FBa0JDLFlBQWxCLENBQStCUCxPQUEvQixDQUFmO0FBQ0EsSUFBTVEsU0FBUyxHQUFHUCxHQUFHLENBQUNRLFNBQUosQ0FBY0MsYUFBZCxDQUE0QkwsTUFBNUIsQ0FBbEI7QUFFQTs7Ozs7Ozs7SUFPTU0sSzs7Ozs7d0JBQ2U7QUFBRSxhQUFPLEtBQUtDLFdBQVo7QUFBMEI7Ozt3QkFDdkI7QUFBRSxhQUFPLEtBQUtDLGdCQUFaO0FBQStCOzs7d0JBQzFDO0FBQUUsYUFBTyxLQUFLQyxPQUFaO0FBQXNCOzs7d0JBQ3JCO0FBQUUsYUFBTyxLQUFLQyxVQUFaO0FBQXlCO0FBRTNDOzs7Ozs7Ozs7O0FBT0EsaUJBQVlDLFVBQVosRUFBd0JDLGVBQXhCLEVBQXlDQyxNQUF6QyxFQUFpREMsU0FBakQsRUFBNEQ7QUFBQTs7QUFDeEQsU0FBS1AsV0FBTCxHQUFtQkksVUFBbkI7QUFDQSxTQUFLSCxnQkFBTCxHQUF3QkksZUFBeEI7QUFDQSxTQUFLSCxPQUFMLEdBQWVJLE1BQWY7QUFDQSxTQUFLSCxVQUFMLEdBQWtCSSxTQUFsQjtBQUNIO0FBRUQ7Ozs7OztBQUtBOzs7OzsyQkFBaUI7QUFBQTs7QUFDYixhQUFPWCxTQUFTLE9BQVQsQ0FBYyxZQUFNO0FBQ3ZCO0FBQ0EsWUFBTVksaUJBQWlCLEdBQUcsS0FBSSxDQUFDSCxlQUFMLENBQXFCRyxpQkFBckIsRUFBMUI7O0FBRUEsWUFBSUEsaUJBQWlCLElBQUlBLGlCQUFpQixDQUFDQyxNQUFsQixHQUEyQixDQUFwRCxFQUF3RDtBQUNwRDtBQUNBRCxVQUFBQSxpQkFBaUIsQ0FBQ0UsSUFBbEIsQ0FBdUJuQixXQUFXLENBQUNvQixpQkFBWixDQUE4QixLQUFJLENBQUNMLE1BQW5DLEVBQTJDZCxNQUFNLENBQUNvQixnQkFBUCxFQUEzQyxDQUF2QixFQUZvRCxDQUlwRDs7QUFDQSxjQUFNQyxLQUFLLEdBQUcsS0FBSSxDQUFDVCxVQUFMLENBQWdCVSxRQUFoQixDQUF5Qk4saUJBQXpCLENBQWQ7O0FBRUEsY0FBSUssS0FBSixFQUFXO0FBQ1A7QUFDQSxnQkFBSSxLQUFJLENBQUNOLFNBQVQsRUFBb0I7QUFDaEIsY0FBQSxLQUFJLENBQUNBLFNBQUwsQ0FBZVEsU0FBZjtBQUNILGFBSk0sQ0FNUDs7O0FBQ0EsWUFBQSxLQUFJLENBQUNWLGVBQUwsQ0FBcUJXLEtBQXJCLEdBUE8sQ0FTUDs7O0FBQ0EsZ0JBQUksS0FBSSxDQUFDVCxTQUFULEVBQW9CO0FBQ2hCLGNBQUEsS0FBSSxDQUFDQSxTQUFMLENBQWVVLDBCQUFmO0FBQ0g7QUFDSixXQWJELE1BY0s7QUFDRDtBQUNBLFlBQUEsS0FBSSxDQUFDWixlQUFMLENBQXFCVyxLQUFyQjtBQUNIOztBQUVELGlCQUFPSCxLQUFQO0FBQ0gsU0EzQkQsTUE0Qks7QUFDRHBCLFVBQUFBLE1BQU0sQ0FBQ3lCLElBQVAsQ0FBWSx5Q0FBWjtBQUNBLGlCQUFPLElBQVA7QUFDSDtBQUNKLE9BcENNLENBQVA7QUFxQ0g7Ozs7OztBQUdMQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJyQixLQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9hY2VyL0Rlc2t0b3AvbWluYWNvaW4vbWFzdGVyL21pbmFjb2luL21pbmFjb2luLXNlcnZlci9zcmMvbGliL21pbmVyL2NsYXNzZXMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IExPR19UQUcgPSAnTU5SJztcblxuY29uc3QgaW9jID0gcmVxdWlyZSgnLi4vLi4vLi4vdXRpbC9pb2NDb250YWluZXInKTtcbmNvbnN0IHsgVHJhbnNhY3Rpb24sIFdhbGxldCB9ID0gcmVxdWlyZSgnLi4vLi4vd2FsbGV0Jyk7XG5cbmNvbnN0IGxvZ2dlciA9IGlvYy5sb2dnZXJGYWN0b3J5LmNyZWF0ZUxvZ2dlcihMT0dfVEFHKTtcbmNvbnN0IGV4Y2VwdGlvbiA9IGlvYy5laEZhY3RvcnkuY3JlYXRlSGFuZGxlcihsb2dnZXIpO1xuXG4vKipcbiAqIG1pbmFjb2luOiBNaW5lclxuICogLS0tLS0tLS0tLS0tLS0tXG4gKiBoYW5kbGVzIG1pbmluZyBuZXcgY29pbnMgXG4gKlxuICogYXV0aG9yOiBKb2huIFIuIEtvc2luc2tpXG4gKi9cbmNsYXNzIE1pbmVyIHtcbiAgICBnZXQgYmxvY2tjaGFpbigpIHsgcmV0dXJuIHRoaXMuX2Jsb2NrY2hhaW47IH1cbiAgICBnZXQgdHJhbnNhY3Rpb25Qb29sKCkgeyByZXR1cm4gdGhpcy5fdHJhbnNhY3Rpb25Qb29sOyB9XG4gICAgZ2V0IHdhbGxldCgpIHsgcmV0dXJuIHRoaXMuX3dhbGxldDsgfVxuICAgIGdldCBwMnBTZXJ2ZXIoKSB7IHJldHVybiB0aGlzLl9wMnBTZXJ2ZXI7IH1cblxuICAgIC8qKlxuICAgICAqIGNvbnN0cnVjdG9yIFxuICAgICAqIEBwYXJhbSB7QmxvY2tjaGFpbn0gYmxvY2tjaGFpbiBcbiAgICAgKiBAcGFyYW0ge1RyYW5zYWN0aW9uUG9vbH0gdHJhbnNhY3Rpb25Qb29sIFxuICAgICAqIEBwYXJhbSB7V2FsbGV0fSB3YWxsZXQgXG4gICAgICogQHBhcmFtIHtJUDJQU2VydmVyfSBwMnBTZXJ2ZXIgXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoYmxvY2tjaGFpbiwgdHJhbnNhY3Rpb25Qb29sLCB3YWxsZXQsIHAycFNlcnZlcikge1xuICAgICAgICB0aGlzLl9ibG9ja2NoYWluID0gYmxvY2tjaGFpbjtcbiAgICAgICAgdGhpcy5fdHJhbnNhY3Rpb25Qb29sID0gdHJhbnNhY3Rpb25Qb29sO1xuICAgICAgICB0aGlzLl93YWxsZXQgPSB3YWxsZXQ7XG4gICAgICAgIHRoaXMuX3AycFNlcnZlciA9IHAycFNlcnZlcjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBzZWxlY3RzIHRyYW5zYWN0aW9ucyBmcm9tIHRoZSB0cmFuc2FjdGlvbiBwb29sIHRvIGFkZCB0byBhIG5ldyBibG9jaywgY3JlYXRlcyBcbiAgICAgKiAmIGFkZHMgdGhlIG5ldyBibG9jayB0byB0aGUgYmxvY2tjaGFpbiwgYW5kIHJldHVybnMgdGhlIG5ldyBibG9jay4gXG4gICAgICogQHJldHVybnMge0Jsb2NrfVxuICAgICAqL1xuICAgIC8qQmxvY2sqLyBtaW5lKCkge1xuICAgICAgICByZXR1cm4gZXhjZXB0aW9uLnRyeSgoKSA9PiB7XG4gICAgICAgICAgICAvL2dldCB0cmFuc2FjdGlvbnMgZnJvbSB0cmFuc2FjdGlvbiBwb29sXG4gICAgICAgICAgICBjb25zdCB2YWxpZFRyYW5zYWN0aW9ucyA9IHRoaXMudHJhbnNhY3Rpb25Qb29sLnZhbGlkVHJhbnNhY3Rpb25zKCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmICh2YWxpZFRyYW5zYWN0aW9ucyAmJiB2YWxpZFRyYW5zYWN0aW9ucy5sZW5ndGggPiAwKSAge1xuICAgICAgICAgICAgICAgIC8vYWRkIGEgcmV3YXJkIGZvciBzZWxmXG4gICAgICAgICAgICAgICAgdmFsaWRUcmFuc2FjdGlvbnMucHVzaChUcmFuc2FjdGlvbi5yZXdhcmRUcmFuc2FjdGlvbih0aGlzLndhbGxldCwgV2FsbGV0LmJsb2NrY2hhaW5XYWxsZXQoKSkpO1xuICAgIFxuICAgICAgICAgICAgICAgIC8vYWRkIHRoZW0gaW50byBhIGJsb2NrXG4gICAgICAgICAgICAgICAgY29uc3QgYmxvY2sgPSB0aGlzLmJsb2NrY2hhaW4uYWRkQmxvY2sodmFsaWRUcmFuc2FjdGlvbnMpO1xuICAgIFxuICAgICAgICAgICAgICAgIGlmIChibG9jaykge1xuICAgICAgICAgICAgICAgICAgICAvL3N5bmMgdGhlIGNoYWluXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnAycFNlcnZlcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wMnBTZXJ2ZXIuc3luY0NoYWluKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIC8vY2xlYXIgdGhlIHRyYW5zYWN0aW9uIHBvb2xcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50cmFuc2FjdGlvblBvb2wuY2xlYXIoKTtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIC8vYnJvYWRjYXN0IGRpcmVjdGl2ZSB0byBjbGVhciB0cmFuc2FjdGlvbiBwb29sXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnAycFNlcnZlcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wMnBTZXJ2ZXIuYnJvYWRjYXN0Q2xlYXJUcmFuc2FjdGlvbnMoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy9jbGVhciB0aGUgdHJhbnNhY3Rpb24gcG9vbDsgbWF5YmUgd2UgaGF2ZSBhbiBvbGQgb3IgY29ycnVwdCBwb29sXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudHJhbnNhY3Rpb25Qb29sLmNsZWFyKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgIFxuICAgICAgICAgICAgICAgIHJldHVybiBibG9jaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGxvZ2dlci5pbmZvKCdubyB2YWxpZCB0cmFuc2FjdGlvbnMgYXZhaWxhYmxlIHRvIG1pbmUnKTsgXG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7IFxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gTWluZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "Miner.js"
      ],
      "names": [
        "LOG_TAG",
        "ioc",
        "require",
        "Transaction",
        "Wallet",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Miner",
        "_blockchain",
        "_transactionPool",
        "_wallet",
        "_p2pServer",
        "blockchain",
        "transactionPool",
        "wallet",
        "p2pServer",
        "validTransactions",
        "length",
        "push",
        "rewardTransaction",
        "blockchainWallet",
        "block",
        "addBlock",
        "syncChain",
        "clear",
        "broadcastClearTransactions",
        "info",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAG,KAAhB;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,4BAAD,CAAnB;;eACgCA,OAAO,CAAC,cAAD,C;IAA/BC,W,YAAAA,W;IAAaC,M,YAAAA,M;;AAErB,IAAMC,MAAM,GAAGJ,GAAG,CAACK,aAAJ,CAAkBC,YAAlB,CAA+BP,OAA/B,CAAf;AACA,IAAMQ,SAAS,GAAGP,GAAG,CAACQ,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;IAOMM,K;;;;;wBACe;AAAE,aAAO,KAAKC,WAAZ;AAA0B;;;wBACvB;AAAE,aAAO,KAAKC,gBAAZ;AAA+B;;;wBAC1C;AAAE,aAAO,KAAKC,OAAZ;AAAsB;;;wBACrB;AAAE,aAAO,KAAKC,UAAZ;AAAyB;AAE3C;;;;;;;;;;AAOA,iBAAYC,UAAZ,EAAwBC,eAAxB,EAAyCC,MAAzC,EAAiDC,SAAjD,EAA4D;AAAA;;AACxD,SAAKP,WAAL,GAAmBI,UAAnB;AACA,SAAKH,gBAAL,GAAwBI,eAAxB;AACA,SAAKH,OAAL,GAAeI,MAAf;AACA,SAAKH,UAAL,GAAkBI,SAAlB;AACH;AAED;;;;;;AAKA;;;;;2BAAiB;AAAA;;AACb,aAAOX,SAAS,OAAT,CAAc,YAAM;AACvB;AACA,YAAMY,iBAAiB,GAAG,KAAI,CAACH,eAAL,CAAqBG,iBAArB,EAA1B;;AAEA,YAAIA,iBAAiB,IAAIA,iBAAiB,CAACC,MAAlB,GAA2B,CAApD,EAAwD;AACpD;AACAD,UAAAA,iBAAiB,CAACE,IAAlB,CAAuBnB,WAAW,CAACoB,iBAAZ,CAA8B,KAAI,CAACL,MAAnC,EAA2Cd,MAAM,CAACoB,gBAAP,EAA3C,CAAvB,EAFoD,CAIpD;;AACA,cAAMC,KAAK,GAAG,KAAI,CAACT,UAAL,CAAgBU,QAAhB,CAAyBN,iBAAzB,CAAd;;AAEA,cAAIK,KAAJ,EAAW;AACP;AACA,gBAAI,KAAI,CAACN,SAAT,EAAoB;AAChB,cAAA,KAAI,CAACA,SAAL,CAAeQ,SAAf;AACH,aAJM,CAMP;;;AACA,YAAA,KAAI,CAACV,eAAL,CAAqBW,KAArB,GAPO,CASP;;;AACA,gBAAI,KAAI,CAACT,SAAT,EAAoB;AAChB,cAAA,KAAI,CAACA,SAAL,CAAeU,0BAAf;AACH;AACJ,WAbD,MAcK;AACD;AACA,YAAA,KAAI,CAACZ,eAAL,CAAqBW,KAArB;AACH;;AAED,iBAAOH,KAAP;AACH,SA3BD,MA4BK;AACDpB,UAAAA,MAAM,CAACyB,IAAP,CAAY,yCAAZ;AACA,iBAAO,IAAP;AACH;AACJ,OApCM,CAAP;AAqCH;;;;;;AAGLC,MAAM,CAACC,OAAP,GAAiBrB,KAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/miner/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'MNR';\n\nconst ioc = require('../../../util/iocContainer');\nconst { Transaction, Wallet } = require('../../wallet');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: Miner\n * ---------------\n * handles mining new coins \n *\n * author: John R. Kosinski\n */\nclass Miner {\n    get blockchain() { return this._blockchain; }\n    get transactionPool() { return this._transactionPool; }\n    get wallet() { return this._wallet; }\n    get p2pServer() { return this._p2pServer; }\n\n    /**\n     * constructor \n     * @param {Blockchain} blockchain \n     * @param {TransactionPool} transactionPool \n     * @param {Wallet} wallet \n     * @param {IP2PServer} p2pServer \n     */\n    constructor(blockchain, transactionPool, wallet, p2pServer) {\n        this._blockchain = blockchain;\n        this._transactionPool = transactionPool;\n        this._wallet = wallet;\n        this._p2pServer = p2pServer;\n    }\n\n    /**\n     * selects transactions from the transaction pool to add to a new block, creates \n     * & adds the new block to the blockchain, and returns the new block. \n     * @returns {Block}\n     */\n    /*Block*/ mine() {\n        return exception.try(() => {\n            //get transactions from transaction pool\n            const validTransactions = this.transactionPool.validTransactions();\n            \n            if (validTransactions && validTransactions.length > 0)  {\n                //add a reward for self\n                validTransactions.push(Transaction.rewardTransaction(this.wallet, Wallet.blockchainWallet()));\n    \n                //add them into a block\n                const block = this.blockchain.addBlock(validTransactions);\n    \n                if (block) {\n                    //sync the chain\n                    if (this.p2pServer) {\n                        this.p2pServer.syncChain();\n                    }\n        \n                    //clear the transaction pool\n                    this.transactionPool.clear();\n        \n                    //broadcast directive to clear transaction pool\n                    if (this.p2pServer) {\n                        this.p2pServer.broadcastClearTransactions();\n                    }\n                }\n                else {\n                    //clear the transaction pool; maybe we have an old or corrupt pool\n                    this.transactionPool.clear();\n                }\n    \n                return block;\n            }\n            else {\n                logger.info('no valid transactions available to mine'); \n                return null; \n            }\n        });\n    }\n}\n\nmodule.exports = Miner;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567888638956
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/index.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar Transaction = require('./classes/Transaction');\n\nvar TransactionPool = require('./classes/TransactionPool');\n\nvar Wallet = require('./classes/Wallet');\n\nmodule.exports = {\n  Transaction: Transaction,\n  TransactionPool: TransactionPool,\n  Wallet: Wallet\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlRyYW5zYWN0aW9uIiwicmVxdWlyZSIsIlRyYW5zYWN0aW9uUG9vbCIsIldhbGxldCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLFdBQVcsR0FBR0MsT0FBTyxDQUFDLHVCQUFELENBQTNCOztBQUNBLElBQU1DLGVBQWUsR0FBR0QsT0FBTyxDQUFDLDJCQUFELENBQS9COztBQUNBLElBQU1FLE1BQU0sR0FBR0YsT0FBTyxDQUFDLGtCQUFELENBQXRCOztBQUVBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkwsRUFBQUEsV0FBVyxFQUFYQSxXQURhO0FBRWJFLEVBQUFBLGVBQWUsRUFBZkEsZUFGYTtBQUdiQyxFQUFBQSxNQUFNLEVBQU5BO0FBSGEsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21hc3Rlci9taW5hY29pbi9taW5hY29pbi1zZXJ2ZXIvc3JjL2xpYi93YWxsZXQiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IFRyYW5zYWN0aW9uID0gcmVxdWlyZSgnLi9jbGFzc2VzL1RyYW5zYWN0aW9uJyk7XG5jb25zdCBUcmFuc2FjdGlvblBvb2wgPSByZXF1aXJlKCcuL2NsYXNzZXMvVHJhbnNhY3Rpb25Qb29sJyk7XG5jb25zdCBXYWxsZXQgPSByZXF1aXJlKCcuL2NsYXNzZXMvV2FsbGV0Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIFRyYW5zYWN0aW9uLFxuICAgIFRyYW5zYWN0aW9uUG9vbCxcbiAgICBXYWxsZXRcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Transaction",
        "require",
        "TransactionPool",
        "Wallet",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,WAAW,GAAGC,OAAO,CAAC,uBAAD,CAA3B;;AACA,IAAMC,eAAe,GAAGD,OAAO,CAAC,2BAAD,CAA/B;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,kBAAD,CAAtB;;AAEAG,MAAM,CAACC,OAAP,GAAiB;AACbL,EAAAA,WAAW,EAAXA,WADa;AAEbE,EAAAA,eAAe,EAAfA,eAFa;AAGbC,EAAAA,MAAM,EAANA;AAHa,CAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet",
      "sourcesContent": [
        "'use strict';\n\nconst Transaction = require('./classes/Transaction');\nconst TransactionPool = require('./classes/TransactionPool');\nconst Wallet = require('./classes/Wallet');\n\nmodule.exports = {\n    Transaction,\n    TransactionPool,\n    Wallet\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1567888638956
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes/Transaction.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes/Transaction.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes/Transaction.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes/Transaction.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes",
        "sourceFileName": "Transaction.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'TRNS';\n\nvar cryptoUtil = require('../../../util/cryptoUtil');\n\nvar ioc = require('../../../util/iocContainer');\n\nvar _require = require('../../../config'),\n    MINING_REWARD = _require.MINING_REWARD;\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: Transaction\n * ---------------------\n * a transaction consists of one input and two outputs. The first output goes to the\n * recipient; the second output sends the change back to the sender. The sender's entire\n * wallet balance is the input to the transaction, the actual sent amount is the first\n * output (to the recipient), and the remainder is in the second output back to the sender.\n * \n * Input format: {\n *      timestamp: <int>,  //datetime in ms\n *      amount: <float>,   //full amount of sender's wallet\n *      address: <string>, //public key of sender wallet\n *      signature: <EC.Signature> //cryptographic signature of transaction \n * }\n * \n * Output format: {\n *      amount: <float>,   //amount to send to address\n *      address: <string>, //public key of recipient wallet\n * }\n *\n * author: John R. Kosinski\n */\n\nvar Transaction =\n/*#__PURE__*/\nfunction () {\n  /**\n   * constructor\n   */\n  function Transaction() {\n    _classCallCheck(this, Transaction);\n\n    this.id = cryptoUtil.id();\n    this.input = null;\n    this.outputs = [];\n    logger.info(\"created new transaction \".concat(this.id));\n  }\n  /*Transaction*/\n\n\n  _createClass(Transaction, [{\n    key: \"update\",\n    value: function update(senderWallet, recipient, amount) {\n      var _this = this;\n\n      return exception[\"try\"](function () {\n        logger.info(\"updating transaction \".concat(_this.id, \"...\"));\n\n        var senderOutput = _this.outputs.find(function (output) {\n          return output.address === senderWallet.publicKey;\n        });\n\n        if (amount > senderWallet.amount) {\n          logger.warn(\"amount \".concat(amount, \" exceeds balance\"));\n          return null;\n        }\n\n        senderOutput.amount = senderOutput.amount - amount;\n\n        _this.outputs.push({\n          amount: amount,\n          address: recipient\n        });\n\n        Transaction.signTransaction(_this, senderWallet);\n        return _this;\n      });\n    }\n    /**\n     * returns a json representation\n     */\n\n    /*json*/\n\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      return {\n        id: this.id,\n        input: serializeTxInput(this.input),\n        outputs: this.outputs\n      };\n    }\n    /**\n     * returns a json representation converted to string\n     */\n\n    /*string*/\n\n  }, {\n    key: \"toJsonString\",\n    value: function toJsonString() {\n      return JSON.stringify(this.toJson());\n    }\n  }], [{\n    key: \"signTransaction\",\n    value: function signTransaction(transaction, senderWallet) {\n      return exception[\"try\"](function () {\n        logger.info(\"signing transaction \".concat(transaction.id));\n        transaction.input = {\n          timestamp: Date.now(),\n          amount: senderWallet.balance,\n          address: senderWallet.publicKey,\n          signature: senderWallet.sign(cryptoUtil.hash(transaction.outputs))\n        };\n        return transaction;\n      });\n    }\n  }, {\n    key: \"newTransaction\",\n    value: function newTransaction(senderWallet, recipient, amount) {\n      return exception[\"try\"](function () {\n        if (amount > senderWallet.balance) {\n          logger.warn(\"amount \".concat(amount, \" exceeds balance\"));\n          return;\n        }\n\n        return Transaction.transactionWithOutputs(senderWallet, [{\n          amount: senderWallet.balance - amount,\n          address: senderWallet.publicKey\n        }, {\n          amount: amount,\n          address: recipient\n        }]);\n      });\n    }\n    /**\n     * cryptographically verifies the validity of the given Transaction \n     * @param {Transaction} transaction \n     * @returns {bool}\n     */\n\n  }, {\n    key: \"verifyTransaction\",\n    value: function verifyTransaction(transaction) {\n      return exception[\"try\"](function () {\n        var output = cryptoUtil.verifySignature(transaction.input.address, transaction.input.signature, cryptoUtil.hash(transaction.outputs));\n\n        if (!output) {\n          logger.warn(\"transaction \".concat(transaction.id, \" failed verification\"));\n        }\n\n        return output;\n      });\n    }\n    /**\n     * awards a small reward to the miner's wallet for mining a new block \n     * \n     * @param {Wallet} minerWallet the miner's wallet \n     * @param {Wallet} blockchainWallet a wallet to stand in as the wallet of the sender\n     * of the reward\n     * @returns {Transaction}\n     */\n\n  }, {\n    key: \"rewardTransaction\",\n    value: function rewardTransaction(minerWallet, blockchainWallet) {\n      return exception[\"try\"](function () {\n        return Transaction.transactionWithOutputs(blockchainWallet, [{\n          amount: MINING_REWARD,\n          address: minerWallet.publicKey\n        }]);\n      });\n    }\n    /**\n     * creates & signs a new Transaction instance with the given outputs\n     * @param {Wallet} senderWallet \n     * @param {Output[]} outputs \n     * @returns {Transaction}\n     */\n\n  }, {\n    key: \"transactionWithOutputs\",\n    value: function transactionWithOutputs(senderWallet, outputs) {\n      var _this2 = this;\n\n      return exception[\"try\"](function () {\n        var _transaction$outputs;\n\n        var transaction = new _this2();\n\n        (_transaction$outputs = transaction.outputs).push.apply(_transaction$outputs, _toConsumableArray(outputs));\n\n        Transaction.signTransaction(transaction, senderWallet);\n        return transaction;\n      });\n    }\n    /**\n     * deserializes a Transaction instance from JSON data\n     * @returns {Transaction}\n     * @param {json} json\n     */\n\n  }, {\n    key: \"fromJson\",\n    value: function fromJson(json) {\n      var _this3 = this;\n\n      return exception[\"try\"](function () {\n        var output = new _this3();\n        output.id = json.id;\n        output.input = deserializeTxInput(json.input);\n        output.outputs = json.outputs;\n        return output;\n      });\n    }\n  }, {\n    key: \"arrayToJson\",\n    value: function arrayToJson(array) {\n      return exception[\"try\"](function () {\n        var output = [];\n        array.forEach(function (t) {\n          output.push(t.toJson ? t.toJson() : t);\n        });\n        return output;\n      });\n    }\n  }]);\n\n  return Transaction;\n}();\n\nfunction serializeTxInput(txInput) {\n  return exception[\"try\"](function () {\n    var output = {\n      address: txInput.address,\n      amount: txInput.amount,\n      timestamp: txInput.timestamp\n    };\n\n    if (txInput.signature) {\n      output.signature = cryptoUtil.serializeSignature(txInput.signature);\n    }\n\n    return output;\n  });\n}\n\nfunction deserializeTxInput(txInput) {\n  return exception[\"try\"](function () {\n    var output = {\n      address: txInput.address,\n      amount: txInput.amount,\n      timestamp: txInput.timestamp\n    };\n\n    if (txInput.signature) {\n      output.signature = cryptoUtil.deserializeSignature(txInput.signature);\n    }\n\n    return output;\n  });\n}\n\nmodule.exports = Transaction;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Transaction.js"
      ],
      "names": [
        "LOG_TAG",
        "cryptoUtil",
        "require",
        "ioc",
        "MINING_REWARD",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Transaction",
        "id",
        "input",
        "outputs",
        "info",
        "senderWallet",
        "recipient",
        "amount",
        "senderOutput",
        "find",
        "output",
        "address",
        "publicKey",
        "warn",
        "push",
        "signTransaction",
        "serializeTxInput",
        "JSON",
        "stringify",
        "toJson",
        "transaction",
        "timestamp",
        "Date",
        "now",
        "balance",
        "signature",
        "sign",
        "hash",
        "transactionWithOutputs",
        "verifySignature",
        "minerWallet",
        "blockchainWallet",
        "json",
        "deserializeTxInput",
        "array",
        "forEach",
        "t",
        "txInput",
        "serializeSignature",
        "deserializeSignature",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,MAAhB;;AAEA,IAAMC,UAAU,GAAGC,OAAO,CAAC,0BAAD,CAA1B;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,4BAAD,CAAnB;;eAC2BA,OAAO,CAAC,iBAAD,C;IAA1BE,a,YAAAA,a;;AAER,IAAMC,MAAM,GAAGF,GAAG,CAACG,aAAJ,CAAkBC,YAAlB,CAA+BP,OAA/B,CAAf;AACA,IAAMQ,SAAS,GAAGL,GAAG,CAACM,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;;;;;;;;;;;;;;;;IAsBMM,W;;;AAEF;;;AAGA,yBAAa;AAAA;;AACT,SAAKC,EAAL,GAAUX,UAAU,CAACW,EAAX,EAAV;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,OAAL,GAAe,EAAf;AAEAT,IAAAA,MAAM,CAACU,IAAP,mCAAuC,KAAKH,EAA5C;AACH;AAED;;;;;2BAAuBI,Y,EAAcC,S,EAAWC,M,EAAQ;AAAA;;AACpD,aAAOV,SAAS,OAAT,CAAc,YAAM;AACvBH,QAAAA,MAAM,CAACU,IAAP,gCAAoC,KAAI,CAACH,EAAzC;;AACA,YAAMO,YAAY,GAAG,KAAI,CAACL,OAAL,CAAaM,IAAb,CAAkB,UAAAC,MAAM;AAAA,iBAAIA,MAAM,CAACC,OAAP,KAAmBN,YAAY,CAACO,SAApC;AAAA,SAAxB,CAArB;;AAEA,YAAIL,MAAM,GAAGF,YAAY,CAACE,MAA1B,EAAiC;AAC7Bb,UAAAA,MAAM,CAACmB,IAAP,kBAAsBN,MAAtB;AACA,iBAAO,IAAP;AACH;;AAEDC,QAAAA,YAAY,CAACD,MAAb,GAAuBC,YAAY,CAACD,MAAb,GAAsBA,MAA7C;;AACA,QAAA,KAAI,CAACJ,OAAL,CAAaW,IAAb,CAAkB;AAACP,UAAAA,MAAM,EAAEA,MAAT;AAAgBI,UAAAA,OAAO,EAAEL;AAAzB,SAAlB;;AACAN,QAAAA,WAAW,CAACe,eAAZ,CAA4B,KAA5B,EAAiCV,YAAjC;AAEA,eAAO,KAAP;AACH,OAdM,CAAP;AAeH;AAED;;;;AAGA;;;;6BAAkB;AACd,aAAO;AACHJ,QAAAA,EAAE,EAAE,KAAKA,EADN;AAEHC,QAAAA,KAAK,EAAEc,gBAAgB,CAAC,KAAKd,KAAN,CAFpB;AAGHC,QAAAA,OAAO,EAAE,KAAKA;AAHX,OAAP;AAKH;AAED;;;;AAGA;;;;mCAA0B;AACtB,aAAOc,IAAI,CAACC,SAAL,CAAe,KAAKC,MAAL,EAAf,CAAP;AACH;;;oCAEsCC,W,EAAaf,Y,EAAc;AAC9D,aAAOR,SAAS,OAAT,CAAc,YAAM;AACvBH,QAAAA,MAAM,CAACU,IAAP,+BAAmCgB,WAAW,CAACnB,EAA/C;AACAmB,QAAAA,WAAW,CAAClB,KAAZ,GAAoB;AAChBmB,UAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EADK;AAEhBhB,UAAAA,MAAM,EAAEF,YAAY,CAACmB,OAFL;AAGhBb,UAAAA,OAAO,EAAEN,YAAY,CAACO,SAHN;AAIhBa,UAAAA,SAAS,EAAEpB,YAAY,CAACqB,IAAb,CAAkBpC,UAAU,CAACqC,IAAX,CAAgBP,WAAW,CAACjB,OAA5B,CAAlB;AAJK,SAApB;AAMA,eAAOiB,WAAP;AACH,OATM,CAAP;AAUH;;;mCAEqCf,Y,EAAcC,S,EAAWC,M,EAAQ;AACnE,aAAOV,SAAS,OAAT,CAAc,YAAM;AACvB,YAAIU,MAAM,GAAGF,YAAY,CAACmB,OAA1B,EAAmC;AAC/B9B,UAAAA,MAAM,CAACmB,IAAP,kBAAsBN,MAAtB;AACA;AACH;;AAED,eAAOP,WAAW,CAAC4B,sBAAZ,CAAmCvB,YAAnC,EAAiD,CAAC;AACjDE,UAAAA,MAAM,EAAGF,YAAY,CAACmB,OAAb,GAAsBjB,MADkB;AAEjDI,UAAAA,OAAO,EAAEN,YAAY,CAACO;AAF2B,SAAD,EAGhD;AACAL,UAAAA,MAAM,EAAGA,MADT;AAEAI,UAAAA,OAAO,EAAEL;AAFT,SAHgD,CAAjD,CAAP;AAQH,OAdM,CAAP;AAeH;AAED;;;;;;;;sCAKkCc,W,EAAa;AAC3C,aAAOvB,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMa,MAAM,GAAGpB,UAAU,CAACuC,eAAX,CACXT,WAAW,CAAClB,KAAZ,CAAkBS,OADP,EAEXS,WAAW,CAAClB,KAAZ,CAAkBuB,SAFP,EAGXnC,UAAU,CAACqC,IAAX,CAAgBP,WAAW,CAACjB,OAA5B,CAHW,CAAf;;AAMA,YAAI,CAACO,MAAL,EAAa;AACThB,UAAAA,MAAM,CAACmB,IAAP,uBAA2BO,WAAW,CAACnB,EAAvC;AACH;;AAED,eAAOS,MAAP;AACH,OAZM,CAAP;AAaH;AAED;;;;;;;;;;;sCAQyCoB,W,EAAaC,gB,EAAkB;AACpE,aAAOlC,SAAS,OAAT,CAAc,YAAM;AACvB,eAAOG,WAAW,CAAC4B,sBAAZ,CAAmCG,gBAAnC,EAAqD,CAAC;AACrDxB,UAAAA,MAAM,EAAEd,aAD6C;AAErDkB,UAAAA,OAAO,EAAEmB,WAAW,CAAClB;AAFgC,SAAD,CAArD,CAAP;AAKH,OANM,CAAP;AAOH;AAED;;;;;;;;;2CAM8CP,Y,EAAcF,O,EAAS;AAAA;;AACjE,aAAON,SAAS,OAAT,CAAc,YAAM;AAAA;;AACvB,YAAMuB,WAAW,GAAG,IAAI,MAAJ,EAApB;;AACA,gCAAAA,WAAW,CAACjB,OAAZ,EAAoBW,IAApB,gDAA4BX,OAA5B;;AACAH,QAAAA,WAAW,CAACe,eAAZ,CAA4BK,WAA5B,EAAyCf,YAAzC;AACA,eAAOe,WAAP;AACH,OALM,CAAP;AAMH;AAED;;;;;;;;6BAKgCY,I,EAAM;AAAA;;AAClC,aAAOnC,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMa,MAAM,GAAG,IAAI,MAAJ,EAAf;AACAA,QAAAA,MAAM,CAACT,EAAP,GAAY+B,IAAI,CAAC/B,EAAjB;AACAS,QAAAA,MAAM,CAACR,KAAP,GAAgB+B,kBAAkB,CAACD,IAAI,CAAC9B,KAAN,CAAlC;AACAQ,QAAAA,MAAM,CAACP,OAAP,GAAiB6B,IAAI,CAAC7B,OAAtB;AAEA,eAAOO,MAAP;AACH,OAPM,CAAP;AAQH;;;gCAE6BwB,K,EAAO;AACjC,aAAOrC,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMa,MAAM,GAAG,EAAf;AACAwB,QAAAA,KAAK,CAACC,OAAN,CAAc,UAACC,CAAD,EAAO;AACjB1B,UAAAA,MAAM,CAACI,IAAP,CAAYsB,CAAC,CAACjB,MAAF,GAAWiB,CAAC,CAACjB,MAAF,EAAX,GAAwBiB,CAApC;AACH,SAFD;AAGA,eAAO1B,MAAP;AACH,OANM,CAAP;AAOH;;;;;;AAGL,SAASM,gBAAT,CAA0BqB,OAA1B,EAAmC;AAC/B,SAAOxC,SAAS,OAAT,CAAc,YAAM;AACvB,QAAMa,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE0B,OAAO,CAAC1B,OADN;AAEXJ,MAAAA,MAAM,EAAE8B,OAAO,CAAC9B,MAFL;AAGXc,MAAAA,SAAS,EAAEgB,OAAO,CAAChB;AAHR,KAAf;;AAMA,QAAIgB,OAAO,CAACZ,SAAZ,EAAuB;AACnBf,MAAAA,MAAM,CAACe,SAAP,GAAmBnC,UAAU,CAACgD,kBAAX,CAA8BD,OAAO,CAACZ,SAAtC,CAAnB;AACH;;AAED,WAAOf,MAAP;AACH,GAZM,CAAP;AAaH;;AAED,SAASuB,kBAAT,CAA4BI,OAA5B,EAAqC;AACjC,SAAOxC,SAAS,OAAT,CAAc,YAAM;AACvB,QAAMa,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE0B,OAAO,CAAC1B,OADN;AAEXJ,MAAAA,MAAM,EAAE8B,OAAO,CAAC9B,MAFL;AAGXc,MAAAA,SAAS,EAAEgB,OAAO,CAAChB;AAHR,KAAf;;AAMA,QAAIgB,OAAO,CAACZ,SAAZ,EAAuB;AACnBf,MAAAA,MAAM,CAACe,SAAP,GAAmBnC,UAAU,CAACiD,oBAAX,CAAgCF,OAAO,CAACZ,SAAxC,CAAnB;AACH;;AAED,WAAOf,MAAP;AACH,GAZM,CAAP;AAaH;;AAED8B,MAAM,CAACC,OAAP,GAAiBzC,WAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'TRNS';\n\nconst cryptoUtil = require('../../../util/cryptoUtil');\nconst ioc = require('../../../util/iocContainer');\nconst { MINING_REWARD }  = require('../../../config');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: Transaction\n * ---------------------\n * a transaction consists of one input and two outputs. The first output goes to the\n * recipient; the second output sends the change back to the sender. The sender's entire\n * wallet balance is the input to the transaction, the actual sent amount is the first\n * output (to the recipient), and the remainder is in the second output back to the sender.\n * \n * Input format: {\n *      timestamp: <int>,  //datetime in ms\n *      amount: <float>,   //full amount of sender's wallet\n *      address: <string>, //public key of sender wallet\n *      signature: <EC.Signature> //cryptographic signature of transaction \n * }\n * \n * Output format: {\n *      amount: <float>,   //amount to send to address\n *      address: <string>, //public key of recipient wallet\n * }\n *\n * author: John R. Kosinski\n */\nclass Transaction {\n\n    /**\n     * constructor\n     */\n    constructor(){\n        this.id = cryptoUtil.id();\n        this.input = null;\n        this.outputs = [];\n\n        logger.info(`created new transaction ${this.id}`);\n    }\n\n    /*Transaction*/ update(senderWallet, recipient, amount) {\n        return exception.try(() => {\n            logger.info(`updating transaction ${this.id}...`)\n            const senderOutput = this.outputs.find(output => output.address === senderWallet.publicKey);\n\n            if (amount > senderWallet.amount){\n                logger.warn(`amount ${amount} exceeds balance`);\n                return null;\n            }\n\n            senderOutput.amount = (senderOutput.amount - amount);\n            this.outputs.push({amount: amount,address: recipient});\n            Transaction.signTransaction(this,senderWallet);\n\n            return this;\n        });\n    }\n\n    /**\n     * returns a json representation\n     */\n    /*json*/ toJson() {\n        return {\n            id: this.id,\n            input: serializeTxInput(this.input),\n            outputs: this.outputs\n        }\n    }\n\n    /**\n     * returns a json representation converted to string\n     */\n    /*string*/ toJsonString() {\n        return JSON.stringify(this.toJson());\n    }\n\n    static /*Transaction*/ signTransaction(transaction, senderWallet) {\n        return exception.try(() => {\n            logger.info(`signing transaction ${transaction.id}`);\n            transaction.input = {\n                timestamp: Date.now(),\n                amount: senderWallet.balance,\n                address: senderWallet.publicKey,\n                signature: senderWallet.sign(cryptoUtil.hash(transaction.outputs))\n            };\n            return transaction;\n        });\n    }\n\n    static /*Transaction*/ newTransaction(senderWallet, recipient, amount) {\n        return exception.try(() => {\n            if (amount > senderWallet.balance) {\n                logger.warn(`amount ${amount} exceeds balance`);\n                return;\n            }\n\n            return Transaction.transactionWithOutputs(senderWallet, [{\n                    amount:  senderWallet.balance -amount,\n                    address: senderWallet.publicKey\n                },  {\n                    amount:  amount,\n                    address: recipient\n                }\n            ]);\n        });\n    }\n\n    /**\n     * cryptographically verifies the validity of the given Transaction \n     * @param {Transaction} transaction \n     * @returns {bool}\n     */\n    static /*bool*/ verifyTransaction(transaction) {\n        return exception.try(() => {\n            const output = cryptoUtil.verifySignature(\n                transaction.input.address,\n                transaction.input.signature,\n                cryptoUtil.hash(transaction.outputs)\n            );\n\n            if (!output) {\n                logger.warn(`transaction ${transaction.id} failed verification`);\n            }\n\n            return output;\n        });\n    }\n\n    /**\n     * awards a small reward to the miner's wallet for mining a new block \n     * \n     * @param {Wallet} minerWallet the miner's wallet \n     * @param {Wallet} blockchainWallet a wallet to stand in as the wallet of the sender\n     * of the reward\n     * @returns {Transaction}\n     */\n    static /*Transaction*/ rewardTransaction(minerWallet, blockchainWallet) {\n        return exception.try(() => {\n            return Transaction.transactionWithOutputs(blockchainWallet, [{\n                    amount: MINING_REWARD,\n                    address: minerWallet.publicKey\n                }]\n            );\n        });\n    }\n\n    /**\n     * creates & signs a new Transaction instance with the given outputs\n     * @param {Wallet} senderWallet \n     * @param {Output[]} outputs \n     * @returns {Transaction}\n     */\n    static /*Transaction*/ transactionWithOutputs(senderWallet, outputs) {\n        return exception.try(() => {\n            const transaction = new this();\n            transaction.outputs.push(...outputs);\n            Transaction.signTransaction(transaction, senderWallet);\n            return transaction;\n        });\n    }\n\n    /**\n     * deserializes a Transaction instance from JSON data\n     * @returns {Transaction}\n     * @param {json} json\n     */\n    static /*Transaction*/ fromJson(json) {\n        return exception.try(() => {\n            const output = new this();\n            output.id = json.id;\n            output.input =  deserializeTxInput(json.input); \n            output.outputs = json.outputs;\n\n            return output;\n        });\n    }\n    \n    static /*[json]*/ arrayToJson(array) {\n        return exception.try(() => {\n            const output = []; \n            array.forEach((t) => {\n                output.push(t.toJson ? t.toJson() : t); \n            });\n            return output; \n        });\n    }\n}\n\nfunction serializeTxInput(txInput) {\n    return exception.try(() => {\n        const output = { \n            address: txInput.address,\n            amount: txInput.amount,\n            timestamp: txInput.timestamp\n        }; \n        \n        if (txInput.signature) {\n            output.signature = cryptoUtil.serializeSignature(txInput.signature); \n        }\n        \n        return output; \n    });\n}\n\nfunction deserializeTxInput(txInput) {\n    return exception.try(() => {\n        const output = { \n            address: txInput.address,\n            amount: txInput.amount,\n            timestamp: txInput.timestamp\n        }; \n        \n        if (txInput.signature) {\n            output.signature = cryptoUtil.deserializeSignature(txInput.signature);\n        }\n        \n        return output; \n    });\n}\n\nmodule.exports = Transaction;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567888638956
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util/cryptoUtil.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util/cryptoUtil.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util/cryptoUtil.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util/cryptoUtil.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util",
        "sourceFileName": "cryptoUtil.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar LOG_TAG = 'CRPT';\n\nvar SHA256 = require('crypto-js/sha256');\n\nvar uuidV1 = require('uuid/v1');\n\nvar EC = require('elliptic').ec;\n\nvar ec = new EC('secp256k1'); //TODO: this is far from ideal\n\nvar Signature = require('../../node_modules/elliptic/lib/elliptic/ec/signature');\n/**\n * generates & returns a new elliptic keypair\n * @returns {KeyPair}\n */\n\n/*EC.KeyPair*/\n\n\nexports.generateKeyPair = function () {\n  return ec.genKeyPair();\n};\n/**\n * deserializes a key pair from string (hex) representations of its \n * public & private keys\n * @param pub string (hex) representation of public key\n * @param priv string (hex) representation of private key\n * @returns {KeyPair}\n */\n\n/*EC.KeyPair*/\n\n\nexports.deserializeKeyPair = function (pub, priv) {\n  return ec.keyPair({\n    priv: priv,\n    privEnc: 'hex',\n    pub: pub,\n    pubEnc: 'hex'\n  });\n};\n/**\n * generates & returns a new UUID\n * @returns {string}\n */\n\n/*string*/\n\n\nexports.id = function () {\n  return uuidV1();\n};\n/**\n * generates a SHA256 hash of given data \n * @param {json} data \n */\n\n/*string*/\n\n\nexports.hash = function (data) {\n  return SHA256(JSON.stringify(data)).toString();\n};\n/**\n * validates a signature \n * @param {string} publicKey\n * @param {string} signature\n * @param {string} dataHash\n * @returns {bool}\n */\n\n/*bool*/\n\n\nexports.verifySignature = function (publicKey, signature, dataHash) {\n  return ec.keyFromPublic(publicKey, 'hex').verify(dataHash, signature);\n};\n\nexports.serializeSignature = function (signature) {\n  return {\n    r: signature.r.toString('hex'),\n    s: signature.s.toString('hex')\n  };\n};\n\nexports.deserializeSignature = function (json) {\n  return new Signature(json, 'hex');\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyeXB0b1V0aWwuanMiXSwibmFtZXMiOlsiTE9HX1RBRyIsIlNIQTI1NiIsInJlcXVpcmUiLCJ1dWlkVjEiLCJFQyIsImVjIiwiU2lnbmF0dXJlIiwiZXhwb3J0cyIsImdlbmVyYXRlS2V5UGFpciIsImdlbktleVBhaXIiLCJkZXNlcmlhbGl6ZUtleVBhaXIiLCJwdWIiLCJwcml2Iiwia2V5UGFpciIsInByaXZFbmMiLCJwdWJFbmMiLCJpZCIsImhhc2giLCJkYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsInRvU3RyaW5nIiwidmVyaWZ5U2lnbmF0dXJlIiwicHVibGljS2V5Iiwic2lnbmF0dXJlIiwiZGF0YUhhc2giLCJrZXlGcm9tUHVibGljIiwidmVyaWZ5Iiwic2VyaWFsaXplU2lnbmF0dXJlIiwiciIsInMiLCJkZXNlcmlhbGl6ZVNpZ25hdHVyZSIsImpzb24iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLE9BQU8sR0FBRyxNQUFoQjs7QUFFQSxJQUFNQyxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxrQkFBRCxDQUF0Qjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQXRCOztBQUNBLElBQU1FLEVBQUUsR0FBR0YsT0FBTyxDQUFDLFVBQUQsQ0FBUCxDQUFvQkcsRUFBL0I7O0FBQ0EsSUFBTUEsRUFBRSxHQUFHLElBQUlELEVBQUosQ0FBTyxXQUFQLENBQVgsQyxDQUVBOztBQUNBLElBQU1FLFNBQVMsR0FBR0osT0FBTyxDQUFDLHVEQUFELENBQXpCO0FBRUE7Ozs7O0FBSUE7OztBQUFlSyxPQUFPLENBQUNDLGVBQVIsR0FBMEIsWUFBTTtBQUMzQyxTQUFPSCxFQUFFLENBQUNJLFVBQUgsRUFBUDtBQUNILENBRmM7QUFJZjs7Ozs7Ozs7QUFPQTs7O0FBQWVGLE9BQU8sQ0FBQ0csa0JBQVIsR0FBNkIsVUFBQ0MsR0FBRCxFQUFNQyxJQUFOLEVBQWU7QUFDdkQsU0FBT1AsRUFBRSxDQUFDUSxPQUFILENBQVc7QUFDZEQsSUFBQUEsSUFBSSxFQUFFQSxJQURRO0FBRWRFLElBQUFBLE9BQU8sRUFBRSxLQUZLO0FBR2RILElBQUFBLEdBQUcsRUFBRUEsR0FIUztBQUlkSSxJQUFBQSxNQUFNLEVBQUU7QUFKTSxHQUFYLENBQVA7QUFNSCxDQVBjO0FBU2Y7Ozs7O0FBSUE7OztBQUFXUixPQUFPLENBQUNTLEVBQVIsR0FBYSxZQUFNO0FBQzFCLFNBQU9iLE1BQU0sRUFBYjtBQUNILENBRlU7QUFJWDs7Ozs7QUFJQTs7O0FBQVdJLE9BQU8sQ0FBQ1UsSUFBUixHQUFlLFVBQUNDLElBQUQsRUFBVTtBQUNoQyxTQUFPakIsTUFBTSxDQUFDa0IsSUFBSSxDQUFDQyxTQUFMLENBQWVGLElBQWYsQ0FBRCxDQUFOLENBQTZCRyxRQUE3QixFQUFQO0FBQ0gsQ0FGVTtBQUlYOzs7Ozs7OztBQU9BOzs7QUFBU2QsT0FBTyxDQUFDZSxlQUFSLEdBQTBCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUF1QkMsUUFBdkIsRUFBb0M7QUFDbkUsU0FBT3BCLEVBQUUsQ0FBQ3FCLGFBQUgsQ0FBaUJILFNBQWpCLEVBQTJCLEtBQTNCLEVBQWtDSSxNQUFsQyxDQUF5Q0YsUUFBekMsRUFBbURELFNBQW5ELENBQVA7QUFDSCxDQUZROztBQUlUakIsT0FBTyxDQUFDcUIsa0JBQVIsR0FBNkIsVUFBQ0osU0FBRCxFQUFlO0FBQ3hDLFNBQU87QUFDSEssSUFBQUEsQ0FBQyxFQUFFTCxTQUFTLENBQUNLLENBQVYsQ0FBWVIsUUFBWixDQUFxQixLQUFyQixDQURBO0FBRUhTLElBQUFBLENBQUMsRUFBRU4sU0FBUyxDQUFDTSxDQUFWLENBQVlULFFBQVosQ0FBcUIsS0FBckI7QUFGQSxHQUFQO0FBSUgsQ0FMRDs7QUFPQWQsT0FBTyxDQUFDd0Isb0JBQVIsR0FBK0IsVUFBQ0MsSUFBRCxFQUFVO0FBQ3JDLFNBQU8sSUFBSTFCLFNBQUosQ0FBYzBCLElBQWQsRUFBb0IsS0FBcEIsQ0FBUDtBQUNILENBRkQiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21hc3Rlci9taW5hY29pbi9taW5hY29pbi1zZXJ2ZXIvc3JjL3V0aWwiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IExPR19UQUcgPSAnQ1JQVCc7XG5cbmNvbnN0IFNIQTI1NiA9IHJlcXVpcmUoJ2NyeXB0by1qcy9zaGEyNTYnKTtcbmNvbnN0IHV1aWRWMSA9IHJlcXVpcmUoJ3V1aWQvdjEnKTtcbmNvbnN0IEVDID0gcmVxdWlyZSgnZWxsaXB0aWMnKS5lYztcbmNvbnN0IGVjID0gbmV3IEVDKCdzZWNwMjU2azEnKTtcblxuLy9UT0RPOiB0aGlzIGlzIGZhciBmcm9tIGlkZWFsXG5jb25zdCBTaWduYXR1cmUgPSByZXF1aXJlKCcuLi8uLi9ub2RlX21vZHVsZXMvZWxsaXB0aWMvbGliL2VsbGlwdGljL2VjL3NpZ25hdHVyZScpO1xuXG4vKipcbiAqIGdlbmVyYXRlcyAmIHJldHVybnMgYSBuZXcgZWxsaXB0aWMga2V5cGFpclxuICogQHJldHVybnMge0tleVBhaXJ9XG4gKi9cbi8qRUMuS2V5UGFpciovIGV4cG9ydHMuZ2VuZXJhdGVLZXlQYWlyID0gKCkgPT4ge1xuICAgIHJldHVybiBlYy5nZW5LZXlQYWlyKCk7XG59O1xuXG4vKipcbiAqIGRlc2VyaWFsaXplcyBhIGtleSBwYWlyIGZyb20gc3RyaW5nIChoZXgpIHJlcHJlc2VudGF0aW9ucyBvZiBpdHMgXG4gKiBwdWJsaWMgJiBwcml2YXRlIGtleXNcbiAqIEBwYXJhbSBwdWIgc3RyaW5nIChoZXgpIHJlcHJlc2VudGF0aW9uIG9mIHB1YmxpYyBrZXlcbiAqIEBwYXJhbSBwcml2IHN0cmluZyAoaGV4KSByZXByZXNlbnRhdGlvbiBvZiBwcml2YXRlIGtleVxuICogQHJldHVybnMge0tleVBhaXJ9XG4gKi9cbi8qRUMuS2V5UGFpciovIGV4cG9ydHMuZGVzZXJpYWxpemVLZXlQYWlyID0gKHB1YiwgcHJpdikgPT4ge1xuICAgIHJldHVybiBlYy5rZXlQYWlyKHtcbiAgICAgICAgcHJpdjogcHJpdixcbiAgICAgICAgcHJpdkVuYzogJ2hleCcsXG4gICAgICAgIHB1YjogcHViLFxuICAgICAgICBwdWJFbmM6ICdoZXgnXG4gICAgfSk7XG59O1xuXG4vKipcbiAqIGdlbmVyYXRlcyAmIHJldHVybnMgYSBuZXcgVVVJRFxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuLypzdHJpbmcqLyBleHBvcnRzLmlkID0gKCkgPT4ge1xuICAgIHJldHVybiB1dWlkVjEoKTtcbn07XG5cbi8qKlxuICogZ2VuZXJhdGVzIGEgU0hBMjU2IGhhc2ggb2YgZ2l2ZW4gZGF0YSBcbiAqIEBwYXJhbSB7anNvbn0gZGF0YSBcbiAqL1xuLypzdHJpbmcqLyBleHBvcnRzLmhhc2ggPSAoZGF0YSkgPT4ge1xuICAgIHJldHVybiBTSEEyNTYoSlNPTi5zdHJpbmdpZnkoZGF0YSkpLnRvU3RyaW5nKCk7XG59XG5cbi8qKlxuICogdmFsaWRhdGVzIGEgc2lnbmF0dXJlIFxuICogQHBhcmFtIHtzdHJpbmd9IHB1YmxpY0tleVxuICogQHBhcmFtIHtzdHJpbmd9IHNpZ25hdHVyZVxuICogQHBhcmFtIHtzdHJpbmd9IGRhdGFIYXNoXG4gKiBAcmV0dXJucyB7Ym9vbH1cbiAqL1xuLypib29sKi8gZXhwb3J0cy52ZXJpZnlTaWduYXR1cmUgPSAocHVibGljS2V5LCBzaWduYXR1cmUsIGRhdGFIYXNoKSA9PiB7XG4gICAgcmV0dXJuIGVjLmtleUZyb21QdWJsaWMocHVibGljS2V5LCdoZXgnKS52ZXJpZnkoZGF0YUhhc2gsIHNpZ25hdHVyZSk7XG59XG5cbmV4cG9ydHMuc2VyaWFsaXplU2lnbmF0dXJlID0gKHNpZ25hdHVyZSkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIHI6IHNpZ25hdHVyZS5yLnRvU3RyaW5nKCdoZXgnKSwgXG4gICAgICAgIHM6IHNpZ25hdHVyZS5zLnRvU3RyaW5nKCdoZXgnKVxuICAgIH07XG59XG5cbmV4cG9ydHMuZGVzZXJpYWxpemVTaWduYXR1cmUgPSAoanNvbikgPT4ge1xuICAgIHJldHVybiBuZXcgU2lnbmF0dXJlKGpzb24sICdoZXgnKTsgXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "cryptoUtil.js"
      ],
      "names": [
        "LOG_TAG",
        "SHA256",
        "require",
        "uuidV1",
        "EC",
        "ec",
        "Signature",
        "exports",
        "generateKeyPair",
        "genKeyPair",
        "deserializeKeyPair",
        "pub",
        "priv",
        "keyPair",
        "privEnc",
        "pubEnc",
        "id",
        "hash",
        "data",
        "JSON",
        "stringify",
        "toString",
        "verifySignature",
        "publicKey",
        "signature",
        "dataHash",
        "keyFromPublic",
        "verify",
        "serializeSignature",
        "r",
        "s",
        "deserializeSignature",
        "json"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,OAAO,GAAG,MAAhB;;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAAtB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAME,EAAE,GAAGF,OAAO,CAAC,UAAD,CAAP,CAAoBG,EAA/B;;AACA,IAAMA,EAAE,GAAG,IAAID,EAAJ,CAAO,WAAP,CAAX,C,CAEA;;AACA,IAAME,SAAS,GAAGJ,OAAO,CAAC,uDAAD,CAAzB;AAEA;;;;;AAIA;;;AAAeK,OAAO,CAACC,eAAR,GAA0B,YAAM;AAC3C,SAAOH,EAAE,CAACI,UAAH,EAAP;AACH,CAFc;AAIf;;;;;;;;AAOA;;;AAAeF,OAAO,CAACG,kBAAR,GAA6B,UAACC,GAAD,EAAMC,IAAN,EAAe;AACvD,SAAOP,EAAE,CAACQ,OAAH,CAAW;AACdD,IAAAA,IAAI,EAAEA,IADQ;AAEdE,IAAAA,OAAO,EAAE,KAFK;AAGdH,IAAAA,GAAG,EAAEA,GAHS;AAIdI,IAAAA,MAAM,EAAE;AAJM,GAAX,CAAP;AAMH,CAPc;AASf;;;;;AAIA;;;AAAWR,OAAO,CAACS,EAAR,GAAa,YAAM;AAC1B,SAAOb,MAAM,EAAb;AACH,CAFU;AAIX;;;;;AAIA;;;AAAWI,OAAO,CAACU,IAAR,GAAe,UAACC,IAAD,EAAU;AAChC,SAAOjB,MAAM,CAACkB,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAD,CAAN,CAA6BG,QAA7B,EAAP;AACH,CAFU;AAIX;;;;;;;;AAOA;;;AAASd,OAAO,CAACe,eAAR,GAA0B,UAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAoC;AACnE,SAAOpB,EAAE,CAACqB,aAAH,CAAiBH,SAAjB,EAA2B,KAA3B,EAAkCI,MAAlC,CAAyCF,QAAzC,EAAmDD,SAAnD,CAAP;AACH,CAFQ;;AAITjB,OAAO,CAACqB,kBAAR,GAA6B,UAACJ,SAAD,EAAe;AACxC,SAAO;AACHK,IAAAA,CAAC,EAAEL,SAAS,CAACK,CAAV,CAAYR,QAAZ,CAAqB,KAArB,CADA;AAEHS,IAAAA,CAAC,EAAEN,SAAS,CAACM,CAAV,CAAYT,QAAZ,CAAqB,KAArB;AAFA,GAAP;AAIH,CALD;;AAOAd,OAAO,CAACwB,oBAAR,GAA+B,UAACC,IAAD,EAAU;AACrC,SAAO,IAAI1B,SAAJ,CAAc0B,IAAd,EAAoB,KAApB,CAAP;AACH,CAFD",
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'CRPT';\n\nconst SHA256 = require('crypto-js/sha256');\nconst uuidV1 = require('uuid/v1');\nconst EC = require('elliptic').ec;\nconst ec = new EC('secp256k1');\n\n//TODO: this is far from ideal\nconst Signature = require('../../node_modules/elliptic/lib/elliptic/ec/signature');\n\n/**\n * generates & returns a new elliptic keypair\n * @returns {KeyPair}\n */\n/*EC.KeyPair*/ exports.generateKeyPair = () => {\n    return ec.genKeyPair();\n};\n\n/**\n * deserializes a key pair from string (hex) representations of its \n * public & private keys\n * @param pub string (hex) representation of public key\n * @param priv string (hex) representation of private key\n * @returns {KeyPair}\n */\n/*EC.KeyPair*/ exports.deserializeKeyPair = (pub, priv) => {\n    return ec.keyPair({\n        priv: priv,\n        privEnc: 'hex',\n        pub: pub,\n        pubEnc: 'hex'\n    });\n};\n\n/**\n * generates & returns a new UUID\n * @returns {string}\n */\n/*string*/ exports.id = () => {\n    return uuidV1();\n};\n\n/**\n * generates a SHA256 hash of given data \n * @param {json} data \n */\n/*string*/ exports.hash = (data) => {\n    return SHA256(JSON.stringify(data)).toString();\n}\n\n/**\n * validates a signature \n * @param {string} publicKey\n * @param {string} signature\n * @param {string} dataHash\n * @returns {bool}\n */\n/*bool*/ exports.verifySignature = (publicKey, signature, dataHash) => {\n    return ec.keyFromPublic(publicKey,'hex').verify(dataHash, signature);\n}\n\nexports.serializeSignature = (signature) => {\n    return {\n        r: signature.r.toString('hex'), \n        s: signature.s.toString('hex')\n    };\n}\n\nexports.deserializeSignature = (json) => {\n    return new Signature(json, 'hex'); \n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1567888638956
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/config.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = {\n  DIFFICULTY: 3,\n  MINE_RATE: 100000,\n  INITIAL_BALANCE: 500,\n  //TODO: remove initial balance (set to 0)\n  HTTP_PORT: process.env.HTTP_PORT || 3001,\n  P2P_PORT: process.env.P2P_PORT || 5001,\n  MINING_REWARD: 50,\n  USE_DATABASE: false,\n  PEER_LIMIT: 3\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiRElGRklDVUxUWSIsIk1JTkVfUkFURSIsIklOSVRJQUxfQkFMQU5DRSIsIkhUVFBfUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJQMlBfUE9SVCIsIk1JTklOR19SRVdBUkQiLCJVU0VfREFUQUJBU0UiLCJQRUVSX0xJTUlUIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFHQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLFVBQVUsRUFBRSxDQURDO0FBRWJDLEVBQUFBLFNBQVMsRUFBRSxNQUZFO0FBR2JDLEVBQUFBLGVBQWUsRUFBRSxHQUhKO0FBR1M7QUFDdEJDLEVBQUFBLFNBQVMsRUFBRUMsT0FBTyxDQUFDQyxHQUFSLENBQVlGLFNBQVosSUFBeUIsSUFKdkI7QUFLYkcsRUFBQUEsUUFBUSxFQUFFRixPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBWixJQUF3QixJQUxyQjtBQU1iQyxFQUFBQSxhQUFhLEVBQUUsRUFORjtBQU9iQyxFQUFBQSxZQUFZLEVBQUUsS0FQRDtBQVFiQyxFQUFBQSxVQUFVLEVBQUU7QUFSQyxDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9hY2VyL0Rlc2t0b3AvbWluYWNvaW4vbWFzdGVyL21pbmFjb2luL21pbmFjb2luLXNlcnZlci9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgRElGRklDVUxUWTogMyxcbiAgICBNSU5FX1JBVEU6IDEwMDAwMCxcbiAgICBJTklUSUFMX0JBTEFOQ0U6IDUwMCwgLy9UT0RPOiByZW1vdmUgaW5pdGlhbCBiYWxhbmNlIChzZXQgdG8gMClcbiAgICBIVFRQX1BPUlQ6IHByb2Nlc3MuZW52LkhUVFBfUE9SVCB8fCAzMDAxLFxuICAgIFAyUF9QT1JUOiBwcm9jZXNzLmVudi5QMlBfUE9SVCB8fCA1MDAxLFxuICAgIE1JTklOR19SRVdBUkQ6IDUwLFxuICAgIFVTRV9EQVRBQkFTRTogZmFsc2UsXG4gICAgUEVFUl9MSU1JVDogM1xufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "module",
        "exports",
        "DIFFICULTY",
        "MINE_RATE",
        "INITIAL_BALANCE",
        "HTTP_PORT",
        "process",
        "env",
        "P2P_PORT",
        "MINING_REWARD",
        "USE_DATABASE",
        "PEER_LIMIT"
      ],
      "mappings": "AAAA;;AAGAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,UAAU,EAAE,CADC;AAEbC,EAAAA,SAAS,EAAE,MAFE;AAGbC,EAAAA,eAAe,EAAE,GAHJ;AAGS;AACtBC,EAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYF,SAAZ,IAAyB,IAJvB;AAKbG,EAAAA,QAAQ,EAAEF,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwB,IALrB;AAMbC,EAAAA,aAAa,EAAE,EANF;AAObC,EAAAA,YAAY,EAAE,KAPD;AAQbC,EAAAA,UAAU,EAAE;AARC,CAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src",
      "sourcesContent": [
        "'use strict';\n\n\nmodule.exports = {\n    DIFFICULTY: 3,\n    MINE_RATE: 100000,\n    INITIAL_BALANCE: 500, //TODO: remove initial balance (set to 0)\n    HTTP_PORT: process.env.HTTP_PORT || 3001,\n    P2P_PORT: process.env.P2P_PORT || 5001,\n    MINING_REWARD: 50,\n    USE_DATABASE: false,\n    PEER_LIMIT: 3\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1567888638956
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util/winstonLogger.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util/winstonLogger.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util/winstonLogger.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util/winstonLogger.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util",
        "sourceFileName": "winstonLogger.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n/**\n * ------------------------\n * implements a logger factory, returning a logger that implements winston.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('winston'),\n    transports = _require.transports,\n    createLogger = _require.createLogger,\n    format = _require.format; //create winston logger\n\n\nvar logger = createLogger({\n  format: format.combine(format.timestamp(), format.json()),\n  transports: [new transports.Console({\n    handleExceptions: true,\n    timestamp: true\n  })],\n  exitOnError: false\n});\n/**\n * generic logger, wraps winston\n */\n\nvar WinstonLogger =\n/*#__PURE__*/\nfunction () {\n  function WinstonLogger(tag) {\n    _classCallCheck(this, WinstonLogger);\n\n    this.tag = tag;\n  }\n\n  _createClass(WinstonLogger, [{\n    key: \"debug\",\n    value: function debug(s) {\n      logger.debug(formatMessage(this.tag, s));\n    }\n  }, {\n    key: \"info\",\n    value: function info(s) {\n      logger.info(formatMessage(this.tag, s));\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(s) {\n      logger.warn(formatMessage(this.tag, s));\n    }\n  }, {\n    key: \"error\",\n    value: function error(s) {\n      logger.error(formatMessage(this.tag, s));\n    }\n  }]);\n\n  return WinstonLogger;\n}();\n\nfunction formatMessage(tag, message) {\n  return \"\".concat(tag, \": \").concat(message);\n}\n\nexports.createLogger = function (tag) {\n  return new WinstonLogger(tag);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndpbnN0b25Mb2dnZXIuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsInRyYW5zcG9ydHMiLCJjcmVhdGVMb2dnZXIiLCJmb3JtYXQiLCJsb2dnZXIiLCJjb21iaW5lIiwidGltZXN0YW1wIiwianNvbiIsIkNvbnNvbGUiLCJoYW5kbGVFeGNlcHRpb25zIiwiZXhpdE9uRXJyb3IiLCJXaW5zdG9uTG9nZ2VyIiwidGFnIiwicyIsImRlYnVnIiwiZm9ybWF0TWVzc2FnZSIsImluZm8iLCJ3YXJuIiwiZXJyb3IiLCJtZXNzYWdlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTs7Ozs7Ozs7Ozs7Ozs7ZUFRMkNBLE9BQU8sQ0FBQyxTQUFELEM7SUFBM0NDLFUsWUFBQUEsVTtJQUFZQyxZLFlBQUFBLFk7SUFBY0MsTSxZQUFBQSxNLEVBRWpDOzs7QUFDQSxJQUFNQyxNQUFNLEdBQUdGLFlBQVksQ0FBQztBQUN4QkMsRUFBQUEsTUFBTSxFQUFFQSxNQUFNLENBQUNFLE9BQVAsQ0FDSkYsTUFBTSxDQUFDRyxTQUFQLEVBREksRUFFSkgsTUFBTSxDQUFDSSxJQUFQLEVBRkksQ0FEZ0I7QUFLeEJOLEVBQUFBLFVBQVUsRUFBRSxDQUNWLElBQUlBLFVBQVUsQ0FBQ08sT0FBZixDQUF1QjtBQUNyQkMsSUFBQUEsZ0JBQWdCLEVBQUUsSUFERztBQUVyQkgsSUFBQUEsU0FBUyxFQUFFO0FBRlUsR0FBdkIsQ0FEVSxDQUxZO0FBV3hCSSxFQUFBQSxXQUFXLEVBQUU7QUFYVyxDQUFELENBQTNCO0FBY0E7Ozs7SUFHTUMsYTs7O0FBRUYseUJBQVlDLEdBQVosRUFBaUI7QUFBQTs7QUFDYixTQUFLQSxHQUFMLEdBQVdBLEdBQVg7QUFDSDs7OzswQkFFS0MsQyxFQUFHO0FBQ0xULE1BQUFBLE1BQU0sQ0FBQ1UsS0FBUCxDQUFhQyxhQUFhLENBQUMsS0FBS0gsR0FBTixFQUFXQyxDQUFYLENBQTFCO0FBQ0g7Ozt5QkFFSUEsQyxFQUFHO0FBQ0pULE1BQUFBLE1BQU0sQ0FBQ1ksSUFBUCxDQUFZRCxhQUFhLENBQUMsS0FBS0gsR0FBTixFQUFXQyxDQUFYLENBQXpCO0FBQ0g7Ozt5QkFFSUEsQyxFQUFHO0FBQ0pULE1BQUFBLE1BQU0sQ0FBQ2EsSUFBUCxDQUFZRixhQUFhLENBQUMsS0FBS0gsR0FBTixFQUFXQyxDQUFYLENBQXpCO0FBQ0g7OzswQkFFS0EsQyxFQUFHO0FBQ0xULE1BQUFBLE1BQU0sQ0FBQ2MsS0FBUCxDQUFhSCxhQUFhLENBQUMsS0FBS0gsR0FBTixFQUFXQyxDQUFYLENBQTFCO0FBQ0g7Ozs7OztBQUdMLFNBQVNFLGFBQVQsQ0FBdUJILEdBQXZCLEVBQTRCTyxPQUE1QixFQUFxQztBQUNqQyxtQkFBVVAsR0FBVixlQUFrQk8sT0FBbEI7QUFDSDs7QUFFREMsT0FBTyxDQUFDbEIsWUFBUixHQUF1QixVQUFDVSxHQUFELEVBQVM7QUFBRSxTQUFPLElBQUlELGFBQUosQ0FBa0JDLEdBQWxCLENBQVA7QUFBZ0MsQ0FBbEUiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21hc3Rlci9taW5hY29pbi9taW5hY29pbi1zZXJ2ZXIvc3JjL3V0aWwiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBpbXBsZW1lbnRzIGEgbG9nZ2VyIGZhY3RvcnksIHJldHVybmluZyBhIGxvZ2dlciB0aGF0IGltcGxlbWVudHMgd2luc3Rvbi5cbiAqXG4gKiBBdXRob3I6IEpvaG4gUi4gS29zaW5za2lcbiAqIERhdGU6IDI3IEF1ZyAyMDE5XG4gKi9cblxuY29uc3Qge3RyYW5zcG9ydHMsIGNyZWF0ZUxvZ2dlciwgZm9ybWF0fSA9IHJlcXVpcmUoJ3dpbnN0b24nKTtcblxuLy9jcmVhdGUgd2luc3RvbiBsb2dnZXJcbmNvbnN0IGxvZ2dlciA9IGNyZWF0ZUxvZ2dlcih7XG4gICAgZm9ybWF0OiBmb3JtYXQuY29tYmluZShcbiAgICAgICAgZm9ybWF0LnRpbWVzdGFtcCgpLFxuICAgICAgICBmb3JtYXQuanNvbigpXG4gICAgKSxcbiAgICB0cmFuc3BvcnRzOiBbXG4gICAgICBuZXcgdHJhbnNwb3J0cy5Db25zb2xlKHtcbiAgICAgICAgaGFuZGxlRXhjZXB0aW9uczogdHJ1ZSxcbiAgICAgICAgdGltZXN0YW1wOiB0cnVlXG4gICAgICB9KVxuICAgIF0sXG4gICAgZXhpdE9uRXJyb3I6IGZhbHNlXG59KTtcblxuLyoqXG4gKiBnZW5lcmljIGxvZ2dlciwgd3JhcHMgd2luc3RvblxuICovXG5jbGFzcyBXaW5zdG9uTG9nZ2VyIHtcblxuICAgIGNvbnN0cnVjdG9yKHRhZykge1xuICAgICAgICB0aGlzLnRhZyA9IHRhZztcbiAgICB9XG5cbiAgICBkZWJ1ZyhzKSB7XG4gICAgICAgIGxvZ2dlci5kZWJ1Zyhmb3JtYXRNZXNzYWdlKHRoaXMudGFnLCBzKSk7XG4gICAgfVxuXG4gICAgaW5mbyhzKSB7XG4gICAgICAgIGxvZ2dlci5pbmZvKGZvcm1hdE1lc3NhZ2UodGhpcy50YWcsIHMpKTtcbiAgICB9XG5cbiAgICB3YXJuKHMpIHtcbiAgICAgICAgbG9nZ2VyLndhcm4oZm9ybWF0TWVzc2FnZSh0aGlzLnRhZywgcykpO1xuICAgIH1cblxuICAgIGVycm9yKHMpIHtcbiAgICAgICAgbG9nZ2VyLmVycm9yKGZvcm1hdE1lc3NhZ2UodGhpcy50YWcsIHMpKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGZvcm1hdE1lc3NhZ2UodGFnLCBtZXNzYWdlKSB7XG4gICAgcmV0dXJuIGAke3RhZ306ICR7bWVzc2FnZX1gO1xufVxuXG5leHBvcnRzLmNyZWF0ZUxvZ2dlciA9ICh0YWcpID0+IHsgcmV0dXJuIG5ldyBXaW5zdG9uTG9nZ2VyKHRhZyk7IH07Il19",
    "map": {
      "version": 3,
      "sources": [
        "winstonLogger.js"
      ],
      "names": [
        "require",
        "transports",
        "createLogger",
        "format",
        "logger",
        "combine",
        "timestamp",
        "json",
        "Console",
        "handleExceptions",
        "exitOnError",
        "WinstonLogger",
        "tag",
        "s",
        "debug",
        "formatMessage",
        "info",
        "warn",
        "error",
        "message",
        "exports"
      ],
      "mappings": "AAAA;AAEA;;;;;;;;;;;;;;eAQ2CA,OAAO,CAAC,SAAD,C;IAA3CC,U,YAAAA,U;IAAYC,Y,YAAAA,Y;IAAcC,M,YAAAA,M,EAEjC;;;AACA,IAAMC,MAAM,GAAGF,YAAY,CAAC;AACxBC,EAAAA,MAAM,EAAEA,MAAM,CAACE,OAAP,CACJF,MAAM,CAACG,SAAP,EADI,EAEJH,MAAM,CAACI,IAAP,EAFI,CADgB;AAKxBN,EAAAA,UAAU,EAAE,CACV,IAAIA,UAAU,CAACO,OAAf,CAAuB;AACrBC,IAAAA,gBAAgB,EAAE,IADG;AAErBH,IAAAA,SAAS,EAAE;AAFU,GAAvB,CADU,CALY;AAWxBI,EAAAA,WAAW,EAAE;AAXW,CAAD,CAA3B;AAcA;;;;IAGMC,a;;;AAEF,yBAAYC,GAAZ,EAAiB;AAAA;;AACb,SAAKA,GAAL,GAAWA,GAAX;AACH;;;;0BAEKC,C,EAAG;AACLT,MAAAA,MAAM,CAACU,KAAP,CAAaC,aAAa,CAAC,KAAKH,GAAN,EAAWC,CAAX,CAA1B;AACH;;;yBAEIA,C,EAAG;AACJT,MAAAA,MAAM,CAACY,IAAP,CAAYD,aAAa,CAAC,KAAKH,GAAN,EAAWC,CAAX,CAAzB;AACH;;;yBAEIA,C,EAAG;AACJT,MAAAA,MAAM,CAACa,IAAP,CAAYF,aAAa,CAAC,KAAKH,GAAN,EAAWC,CAAX,CAAzB;AACH;;;0BAEKA,C,EAAG;AACLT,MAAAA,MAAM,CAACc,KAAP,CAAaH,aAAa,CAAC,KAAKH,GAAN,EAAWC,CAAX,CAA1B;AACH;;;;;;AAGL,SAASE,aAAT,CAAuBH,GAAvB,EAA4BO,OAA5B,EAAqC;AACjC,mBAAUP,GAAV,eAAkBO,OAAlB;AACH;;AAEDC,OAAO,CAAClB,YAAR,GAAuB,UAACU,GAAD,EAAS;AAAE,SAAO,IAAID,aAAJ,CAAkBC,GAAlB,CAAP;AAAgC,CAAlE",
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util",
      "sourcesContent": [
        "'use strict';\n\n/**\n * ------------------------\n * implements a logger factory, returning a logger that implements winston.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\n\nconst {transports, createLogger, format} = require('winston');\n\n//create winston logger\nconst logger = createLogger({\n    format: format.combine(\n        format.timestamp(),\n        format.json()\n    ),\n    transports: [\n      new transports.Console({\n        handleExceptions: true,\n        timestamp: true\n      })\n    ],\n    exitOnError: false\n});\n\n/**\n * generic logger, wraps winston\n */\nclass WinstonLogger {\n\n    constructor(tag) {\n        this.tag = tag;\n    }\n\n    debug(s) {\n        logger.debug(formatMessage(this.tag, s));\n    }\n\n    info(s) {\n        logger.info(formatMessage(this.tag, s));\n    }\n\n    warn(s) {\n        logger.warn(formatMessage(this.tag, s));\n    }\n\n    error(s) {\n        logger.error(formatMessage(this.tag, s));\n    }\n}\n\nfunction formatMessage(tag, message) {\n    return `${tag}: ${message}`;\n}\n\nexports.createLogger = (tag) => { return new WinstonLogger(tag); };"
      ]
    },
    "sourceType": "script",
    "mtime": 1567888638956
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util/exceptionHandler.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util/exceptionHandler.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util/exceptionHandler.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util/exceptionHandler.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util",
        "sourceFileName": "exceptionHandler.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n/**\n * ------------------------\n * generic exception handler: wraps try/catch. Is easier on the eyes, in my opinion,\n * than try/catch.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar ExceptionHandler =\n/*#__PURE__*/\nfunction () {\n  function ExceptionHandler(logger) {\n    _classCallCheck(this, ExceptionHandler);\n\n    this.logger = logger;\n  }\n  /**\n   * wraps the given expression in a try/catch, and provides standard handling for any errors.\n   *\n   * @param {fn} expr\n   * @param {json} options:  {\n   *      defaultValue: null,\n   *      onError: (e) => {},\n   *      finally: (e) => {},\n   *      functionName: ''\n   *  }\n   * @returns {*} return value of given expression\n   */\n\n\n  _createClass(ExceptionHandler, [{\n    key: \"try\",\n    value: function _try(expr, options) {\n      try {\n        return expr();\n      } catch (err) {\n        this.handleError(err);\n        if (options && options.onError) return options.onError(err);\n        return options ? options.defaultValue : null;\n      } finally {\n        if (options && options[\"finally\"]) return options[\"finally\"](err);\n      }\n    }\n    /**\n     * wraps the expression as in try(*), but in such a way as to allow for awaiting async code.\n     *\n     * @param {fn} expr\n     * @param {json} options: see try(expr, options)\n     */\n\n  }, {\n    key: \"tryAsync\",\n    value: function () {\n      var _tryAsync = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(expr, options) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return expr();\n\n              case 3:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                this.handleError(_context.t0);\n\n                if (!(options && options.onError)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", options.onError(_context.t0));\n\n              case 11:\n                return _context.abrupt(\"return\", options ? options.defaultValue : null);\n\n              case 12:\n                _context.prev = 12;\n\n                if (!(options && options[\"finally\"])) {\n                  _context.next = 15;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", options[\"finally\"]());\n\n              case 15:\n                return _context.finish(12);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 6, 12, 16]]);\n      }));\n\n      function tryAsync(_x, _x2) {\n        return _tryAsync.apply(this, arguments);\n      }\n\n      return tryAsync;\n    }()\n    /**\n     * provides standard handling for any errors.\n     *\n     * @param {*} err\n     * @param {*} functionName\n     */\n\n  }, {\n    key: \"handleError\",\n    value: function handleError(err, functionName) {\n      var prefix = functionName && functionName.length ? ' [' + functionName + '] ' : '';\n\n      if (this.logger) {\n        this.logger.error(JSON.stringify(err) + ' ' + err);\n      }\n\n      if (err.stack) console.log(err.stack);\n    }\n  }]);\n\n  return ExceptionHandler;\n}();\n\nexports.createHandler = function (logger) {\n  return new ExceptionHandler(logger);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4Y2VwdGlvbkhhbmRsZXIuanMiXSwibmFtZXMiOlsiRXhjZXB0aW9uSGFuZGxlciIsImxvZ2dlciIsImV4cHIiLCJvcHRpb25zIiwiZXJyIiwiaGFuZGxlRXJyb3IiLCJvbkVycm9yIiwiZGVmYXVsdFZhbHVlIiwiZnVuY3Rpb25OYW1lIiwicHJlZml4IiwibGVuZ3RoIiwiZXJyb3IiLCJKU09OIiwic3RyaW5naWZ5Iiwic3RhY2siLCJjb25zb2xlIiwibG9nIiwiZXhwb3J0cyIsImNyZWF0ZUhhbmRsZXIiXSwibWFwcGluZ3MiOiJBQUFBO0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFTTUEsZ0I7OztBQUNGLDRCQUFZQyxNQUFaLEVBQW9CO0FBQUE7O0FBQ2hCLFNBQUtBLE1BQUwsR0FBY0EsTUFBZDtBQUNIO0FBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7eUJBWUlDLEksRUFBTUMsTyxFQUFTO0FBQ2YsVUFBRztBQUNDLGVBQU9ELElBQUksRUFBWDtBQUNILE9BRkQsQ0FHQSxPQUFNRSxHQUFOLEVBQVU7QUFDTixhQUFLQyxXQUFMLENBQWlCRCxHQUFqQjtBQUNBLFlBQUlELE9BQU8sSUFBSUEsT0FBTyxDQUFDRyxPQUF2QixFQUNJLE9BQU9ILE9BQU8sQ0FBQ0csT0FBUixDQUFnQkYsR0FBaEIsQ0FBUDtBQUVKLGVBQU9ELE9BQU8sR0FBR0EsT0FBTyxDQUFDSSxZQUFYLEdBQTBCLElBQXhDO0FBQ0gsT0FURCxTQVVRO0FBQ0osWUFBSUosT0FBTyxJQUFJQSxPQUFPLFdBQXRCLEVBQ0ksT0FBT0EsT0FBTyxXQUFQLENBQWdCQyxHQUFoQixDQUFQO0FBQ1A7QUFDSjtBQUVEOzs7Ozs7Ozs7Ozs7K0NBTWVGLEksRUFBTUMsTzs7Ozs7Ozt1QkFFQUQsSUFBSSxFOzs7Ozs7OztBQUdqQixxQkFBS0csV0FBTDs7c0JBQ0lGLE9BQU8sSUFBSUEsT0FBTyxDQUFDRyxPOzs7OztpREFDWkgsT0FBTyxDQUFDRyxPQUFSLGE7OztpREFFSkgsT0FBTyxHQUFHQSxPQUFPLENBQUNJLFlBQVgsR0FBMEIsSTs7Ozs7c0JBR3BDSixPQUFPLElBQUlBLE9BQU8sVzs7Ozs7aURBQ1hBLE9BQU8sV0FBUCxFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSW5COzs7Ozs7Ozs7Z0NBTVlDLEcsRUFBS0ksWSxFQUFjO0FBQzNCLFVBQUlDLE1BQU0sR0FBSUQsWUFBWSxJQUFJQSxZQUFZLENBQUNFLE1BQTdCLEdBQXNDLE9BQU9GLFlBQVAsR0FBc0IsSUFBNUQsR0FBbUUsRUFBakY7O0FBRUEsVUFBSSxLQUFLUCxNQUFULEVBQWlCO0FBQ2IsYUFBS0EsTUFBTCxDQUFZVSxLQUFaLENBQWtCQyxJQUFJLENBQUNDLFNBQUwsQ0FBZVQsR0FBZixJQUFzQixHQUF0QixHQUE0QkEsR0FBOUM7QUFDSDs7QUFDRCxVQUFJQSxHQUFHLENBQUNVLEtBQVIsRUFDSUMsT0FBTyxDQUFDQyxHQUFSLENBQVlaLEdBQUcsQ0FBQ1UsS0FBaEI7QUFDUDs7Ozs7O0FBSUxHLE9BQU8sQ0FBQ0MsYUFBUixHQUF3QixVQUFDakIsTUFBRCxFQUFZO0FBQUUsU0FBTyxJQUFJRCxnQkFBSixDQUFxQkMsTUFBckIsQ0FBUDtBQUFzQyxDQUE1RSIsInNvdXJjZVJvb3QiOiIvaG9tZS9hY2VyL0Rlc2t0b3AvbWluYWNvaW4vbWFzdGVyL21pbmFjb2luL21pbmFjb2luLXNlcnZlci9zcmMvdXRpbCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIGdlbmVyaWMgZXhjZXB0aW9uIGhhbmRsZXI6IHdyYXBzIHRyeS9jYXRjaC4gSXMgZWFzaWVyIG9uIHRoZSBleWVzLCBpbiBteSBvcGluaW9uLFxuICogdGhhbiB0cnkvY2F0Y2guXG4gKlxuICogQXV0aG9yOiBKb2huIFIuIEtvc2luc2tpXG4gKiBEYXRlOiAyNyBBdWcgMjAxOVxuICovXG5cbmNsYXNzIEV4Y2VwdGlvbkhhbmRsZXIge1xuICAgIGNvbnN0cnVjdG9yKGxvZ2dlcikge1xuICAgICAgICB0aGlzLmxvZ2dlciA9IGxvZ2dlcjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiB3cmFwcyB0aGUgZ2l2ZW4gZXhwcmVzc2lvbiBpbiBhIHRyeS9jYXRjaCwgYW5kIHByb3ZpZGVzIHN0YW5kYXJkIGhhbmRsaW5nIGZvciBhbnkgZXJyb3JzLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtmbn0gZXhwclxuICAgICAqIEBwYXJhbSB7anNvbn0gb3B0aW9uczogIHtcbiAgICAgKiAgICAgIGRlZmF1bHRWYWx1ZTogbnVsbCxcbiAgICAgKiAgICAgIG9uRXJyb3I6IChlKSA9PiB7fSxcbiAgICAgKiAgICAgIGZpbmFsbHk6IChlKSA9PiB7fSxcbiAgICAgKiAgICAgIGZ1bmN0aW9uTmFtZTogJydcbiAgICAgKiAgfVxuICAgICAqIEByZXR1cm5zIHsqfSByZXR1cm4gdmFsdWUgb2YgZ2l2ZW4gZXhwcmVzc2lvblxuICAgICAqL1xuICAgIHRyeShleHByLCBvcHRpb25zKSB7XG4gICAgICAgIHRyeXtcbiAgICAgICAgICAgIHJldHVybiBleHByKCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2goZXJyKXtcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlRXJyb3IoZXJyKTtcbiAgICAgICAgICAgIGlmIChvcHRpb25zICYmIG9wdGlvbnMub25FcnJvcilcbiAgICAgICAgICAgICAgICByZXR1cm4gb3B0aW9ucy5vbkVycm9yKGVycik7XG5cbiAgICAgICAgICAgIHJldHVybiBvcHRpb25zID8gb3B0aW9ucy5kZWZhdWx0VmFsdWUgOiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5maW5hbGx5KVxuICAgICAgICAgICAgICAgIHJldHVybiBvcHRpb25zLmZpbmFsbHkoZXJyKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHdyYXBzIHRoZSBleHByZXNzaW9uIGFzIGluIHRyeSgqKSwgYnV0IGluIHN1Y2ggYSB3YXkgYXMgdG8gYWxsb3cgZm9yIGF3YWl0aW5nIGFzeW5jIGNvZGUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge2ZufSBleHByXG4gICAgICogQHBhcmFtIHtqc29ufSBvcHRpb25zOiBzZWUgdHJ5KGV4cHIsIG9wdGlvbnMpXG4gICAgICovXG4gICAgYXN5bmMgdHJ5QXN5bmMoZXhwciwgb3B0aW9ucykge1xuICAgICAgICB0cnl7XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgZXhwcigpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoKGVycil7XG4gICAgICAgICAgICB0aGlzLmhhbmRsZUVycm9yKGVycik7XG4gICAgICAgICAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLm9uRXJyb3IpXG4gICAgICAgICAgICAgICAgcmV0dXJuIG9wdGlvbnMub25FcnJvcihlcnIpO1xuXG4gICAgICAgICAgICByZXR1cm4gb3B0aW9ucyA/IG9wdGlvbnMuZGVmYXVsdFZhbHVlIDogbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgIGlmIChvcHRpb25zICYmIG9wdGlvbnMuZmluYWxseSlcbiAgICAgICAgICAgICAgICByZXR1cm4gb3B0aW9ucy5maW5hbGx5KCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBwcm92aWRlcyBzdGFuZGFyZCBoYW5kbGluZyBmb3IgYW55IGVycm9ycy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7Kn0gZXJyXG4gICAgICogQHBhcmFtIHsqfSBmdW5jdGlvbk5hbWVcbiAgICAgKi9cbiAgICBoYW5kbGVFcnJvcihlcnIsIGZ1bmN0aW9uTmFtZSkge1xuICAgICAgICBsZXQgcHJlZml4ID0gKGZ1bmN0aW9uTmFtZSAmJiBmdW5jdGlvbk5hbWUubGVuZ3RoID8gJyBbJyArIGZ1bmN0aW9uTmFtZSArICddICcgOiAnJyk7XG5cbiAgICAgICAgaWYgKHRoaXMubG9nZ2VyKSB7XG4gICAgICAgICAgICB0aGlzLmxvZ2dlci5lcnJvcihKU09OLnN0cmluZ2lmeShlcnIpICsgJyAnICsgZXJyKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXJyLnN0YWNrKVxuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyLnN0YWNrKTtcbiAgICB9XG59XG5cblxuZXhwb3J0cy5jcmVhdGVIYW5kbGVyID0gKGxvZ2dlcikgPT4geyByZXR1cm4gbmV3IEV4Y2VwdGlvbkhhbmRsZXIobG9nZ2VyKTsgfTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "exceptionHandler.js"
      ],
      "names": [
        "ExceptionHandler",
        "logger",
        "expr",
        "options",
        "err",
        "handleError",
        "onError",
        "defaultValue",
        "functionName",
        "prefix",
        "length",
        "error",
        "JSON",
        "stringify",
        "stack",
        "console",
        "log",
        "exports",
        "createHandler"
      ],
      "mappings": "AAAA;AAEA;;;;;;;;;;;;;;;;;;;IASMA,gB;;;AACF,4BAAYC,MAAZ,EAAoB;AAAA;;AAChB,SAAKA,MAAL,GAAcA,MAAd;AACH;AAED;;;;;;;;;;;;;;;;yBAYIC,I,EAAMC,O,EAAS;AACf,UAAG;AACC,eAAOD,IAAI,EAAX;AACH,OAFD,CAGA,OAAME,GAAN,EAAU;AACN,aAAKC,WAAL,CAAiBD,GAAjB;AACA,YAAID,OAAO,IAAIA,OAAO,CAACG,OAAvB,EACI,OAAOH,OAAO,CAACG,OAAR,CAAgBF,GAAhB,CAAP;AAEJ,eAAOD,OAAO,GAAGA,OAAO,CAACI,YAAX,GAA0B,IAAxC;AACH,OATD,SAUQ;AACJ,YAAIJ,OAAO,IAAIA,OAAO,WAAtB,EACI,OAAOA,OAAO,WAAP,CAAgBC,GAAhB,CAAP;AACP;AACJ;AAED;;;;;;;;;;;;+CAMeF,I,EAAMC,O;;;;;;;uBAEAD,IAAI,E;;;;;;;;AAGjB,qBAAKG,WAAL;;sBACIF,OAAO,IAAIA,OAAO,CAACG,O;;;;;iDACZH,OAAO,CAACG,OAAR,a;;;iDAEJH,OAAO,GAAGA,OAAO,CAACI,YAAX,GAA0B,I;;;;;sBAGpCJ,OAAO,IAAIA,OAAO,W;;;;;iDACXA,OAAO,WAAP,E;;;;;;;;;;;;;;;;;;;AAInB;;;;;;;;;gCAMYC,G,EAAKI,Y,EAAc;AAC3B,UAAIC,MAAM,GAAID,YAAY,IAAIA,YAAY,CAACE,MAA7B,GAAsC,OAAOF,YAAP,GAAsB,IAA5D,GAAmE,EAAjF;;AAEA,UAAI,KAAKP,MAAT,EAAiB;AACb,aAAKA,MAAL,CAAYU,KAAZ,CAAkBC,IAAI,CAACC,SAAL,CAAeT,GAAf,IAAsB,GAAtB,GAA4BA,GAA9C;AACH;;AACD,UAAIA,GAAG,CAACU,KAAR,EACIC,OAAO,CAACC,GAAR,CAAYZ,GAAG,CAACU,KAAhB;AACP;;;;;;AAILG,OAAO,CAACC,aAAR,GAAwB,UAACjB,MAAD,EAAY;AAAE,SAAO,IAAID,gBAAJ,CAAqBC,MAArB,CAAP;AAAsC,CAA5E",
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util",
      "sourcesContent": [
        "'use strict';\n\n/**\n * ------------------------\n * generic exception handler: wraps try/catch. Is easier on the eyes, in my opinion,\n * than try/catch.\n *\n * Author: John R. Kosinski\n * Date: 27 Aug 2019\n */\n\nclass ExceptionHandler {\n    constructor(logger) {\n        this.logger = logger;\n    }\n\n    /**\n     * wraps the given expression in a try/catch, and provides standard handling for any errors.\n     *\n     * @param {fn} expr\n     * @param {json} options:  {\n     *      defaultValue: null,\n     *      onError: (e) => {},\n     *      finally: (e) => {},\n     *      functionName: ''\n     *  }\n     * @returns {*} return value of given expression\n     */\n    try(expr, options) {\n        try{\n            return expr();\n        }\n        catch(err){\n            this.handleError(err);\n            if (options && options.onError)\n                return options.onError(err);\n\n            return options ? options.defaultValue : null;\n        }\n        finally {\n            if (options && options.finally)\n                return options.finally(err);\n        }\n    }\n\n    /**\n     * wraps the expression as in try(*), but in such a way as to allow for awaiting async code.\n     *\n     * @param {fn} expr\n     * @param {json} options: see try(expr, options)\n     */\n    async tryAsync(expr, options) {\n        try{\n            return await expr();\n        }\n        catch(err){\n            this.handleError(err);\n            if (options && options.onError)\n                return options.onError(err);\n\n            return options ? options.defaultValue : null;\n        }\n        finally {\n            if (options && options.finally)\n                return options.finally();\n        }\n    }\n\n    /**\n     * provides standard handling for any errors.\n     *\n     * @param {*} err\n     * @param {*} functionName\n     */\n    handleError(err, functionName) {\n        let prefix = (functionName && functionName.length ? ' [' + functionName + '] ' : '');\n\n        if (this.logger) {\n            this.logger.error(JSON.stringify(err) + ' ' + err);\n        }\n        if (err.stack)\n            console.log(err.stack);\n    }\n}\n\n\nexports.createHandler = (logger) => { return new ExceptionHandler(logger); };"
      ]
    },
    "sourceType": "script",
    "mtime": 1567888638956
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes/TransactionPool.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes/TransactionPool.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes/TransactionPool.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes/TransactionPool.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes",
        "sourceFileName": "TransactionPool.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'TXPL';\n\nvar Transaction = require('./Transaction');\n\nvar ioc = require('../../../util/iocContainer');\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: TransactionPool\n * -------------------------\n * pool of transactions that have not yet been included in the blockchain\n * (but may be eligible to be mined)\n *\n * author: John R. Kosinski\n */\n\nvar TransactionPool =\n/*#__PURE__*/\nfunction () {\n  _createClass(TransactionPool, [{\n    key: \"transactions\",\n    get: function get() {\n      return this._transactions;\n    }\n  }, {\n    key: \"txCount\",\n    get: function get() {\n      return this._transactions.length;\n    }\n    /**\n     * constructor\n     */\n\n  }]);\n\n  function TransactionPool() {\n    _classCallCheck(this, TransactionPool);\n\n    this._transactions = [];\n  }\n\n  _createClass(TransactionPool, [{\n    key: \"updateOrAddTransaction\",\n    value: function updateOrAddTransaction(transaction) {\n      var _this = this;\n\n      exception[\"try\"](function () {\n        //get existing trans if exists\n        var existing = _this.transactions.find(function (t) {\n          return t.id === transaction.id;\n        });\n\n        if (existing) {\n          logger.info(\"updating transaction \".concat(transaction.id, \": \").concat(transaction));\n          _this.transactions[_this.transactions.indexOf(existing)] = transaction;\n        } else {\n          logger.info(\"creating new transaction: \".concat(transaction));\n\n          _this.transactions.push(transaction);\n        }\n      });\n    }\n    /*Transaction*/\n\n  }, {\n    key: \"existingTransaction\",\n    value: function existingTransaction(address) {\n      var _this2 = this;\n\n      return exception[\"try\"](function () {\n        return _this2.transactions.find(function (t) {\n          return t.input.address === address;\n        });\n      });\n    }\n    /*Transaction[]*/\n\n  }, {\n    key: \"pendingTransactions\",\n    value: function pendingTransactions(address) {\n      var _this3 = this;\n\n      return exception[\"try\"](function () {\n        return _this3.transactions.filter(function (t) {\n          return t.input.address === address;\n        });\n      });\n    }\n    /**\n     * gets a list of valid transactions; ones whose total output is equal to input\n     * with valid signature\n     * @param {Blockchain} blockchain (optional) if specified, will check for duplicate transaction \n     * id in chain (transaction duplicate is not valid)\n     * @returns {Transaction[]}\n     */\n\n    /*Transaction[]*/\n\n  }, {\n    key: \"validTransactions\",\n    value: function validTransactions(blockchain) {\n      return this.transactions.filter(function (transaction) {\n        return exception[\"try\"](function () {\n          // calculate total of all outputs\n          var outputTotal = transaction.outputs ? transaction.outputs.reduce(function (total, output) {\n            return total + output.amount;\n          }, 0) : 0; //make sure the transaction hasn't already been added to the chain\n\n          if (blockchain && blockchain.containsTransaction(transaction.id)) {\n            logger.warn(\"transaction \".concat(transaction.id, \" already exists on the chain and should not be included\"));\n            return;\n          } //check that outputs == input\n\n\n          if (transaction.input.amount !== outputTotal) {\n            logger.warn(\"invalid transaction \".concat(transaction.id, \" from \").concat(transaction.input.address));\n            return;\n          } //check valid signature\n\n\n          if (!Transaction.verifyTransaction(transaction)) {\n            logger.warn(\"invalid signature for transaction \".concat(transaction.id, \" from \").concat(transaction.input.address));\n            return;\n          }\n\n          return transaction;\n        });\n      });\n    }\n    /**\n     * clears all transactions from pool\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._transactions = [];\n    }\n  }]);\n\n  return TransactionPool;\n}();\n\nmodule.exports = TransactionPool;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "TransactionPool.js"
      ],
      "names": [
        "LOG_TAG",
        "Transaction",
        "require",
        "ioc",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "TransactionPool",
        "_transactions",
        "length",
        "transaction",
        "existing",
        "transactions",
        "find",
        "t",
        "id",
        "info",
        "indexOf",
        "push",
        "address",
        "input",
        "filter",
        "blockchain",
        "outputTotal",
        "outputs",
        "reduce",
        "total",
        "output",
        "amount",
        "containsTransaction",
        "warn",
        "verifyTransaction",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAG,MAAhB;;AAEA,IAAMC,WAAW,GAAGC,OAAO,CAAC,eAAD,CAA3B;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,4BAAD,CAAnB;;AAEA,IAAME,MAAM,GAAGD,GAAG,CAACE,aAAJ,CAAkBC,YAAlB,CAA+BN,OAA/B,CAAf;AACA,IAAMO,SAAS,GAAGJ,GAAG,CAACK,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;;IAQMM,e;;;;;wBACiB;AAAE,aAAO,KAAKC,aAAZ;AAA4B;;;wBACnC;AAAE,aAAO,KAAKA,aAAL,CAAmBC,MAA1B;AAAmC;AAEnD;;;;;;AAGA,6BAAc;AAAA;;AACV,SAAKD,aAAL,GAAqB,EAArB;AACH;;;;2CAEsBE,W,EAAa;AAAA;;AAChCN,MAAAA,SAAS,OAAT,CAAc,YAAM;AAChB;AACA,YAAIO,QAAQ,GAAG,KAAI,CAACC,YAAL,CAAkBC,IAAlB,CAAuB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,EAAF,KAASL,WAAW,CAACK,EAAzB;AAAA,SAAxB,CAAf;;AAEA,YAAIJ,QAAJ,EAAc;AACVV,UAAAA,MAAM,CAACe,IAAP,gCAAoCN,WAAW,CAACK,EAAhD,eAAuDL,WAAvD;AACA,UAAA,KAAI,CAACE,YAAL,CAAkB,KAAI,CAACA,YAAL,CAAkBK,OAAlB,CAA0BN,QAA1B,CAAlB,IAAyDD,WAAzD;AACH,SAHD,MAIK;AACDT,UAAAA,MAAM,CAACe,IAAP,qCAAyCN,WAAzC;;AACA,UAAA,KAAI,CAACE,YAAL,CAAkBM,IAAlB,CAAuBR,WAAvB;AACH;AACJ,OAZD;AAaH;AAED;;;;wCAAoCS,O,EAAS;AAAA;;AACzC,aAAOf,SAAS,OAAT,CAAc,YAAM;AACvB,eAAO,MAAI,CAACQ,YAAL,CAAkBC,IAAlB,CAAuB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACM,KAAF,CAAQD,OAAR,KAAoBA,OAAxB;AAAA,SAAxB,CAAP;AACH,OAFM,CAAP;AAGH;AAED;;;;wCAAsCA,O,EAAS;AAAA;;AAC3C,aAAOf,SAAS,OAAT,CAAc,YAAM;AACvB,eAAO,MAAI,CAACQ,YAAL,CAAkBS,MAAlB,CAAyB,UAAAP,CAAC;AAAA,iBAAIA,CAAC,CAACM,KAAF,CAAQD,OAAR,KAAoBA,OAAxB;AAAA,SAA1B,CAAP;AACH,OAFM,CAAP;AAGH;AAED;;;;;;;;AAOA;;;;sCAAoCG,U,EAAY;AAC5C,aAAO,KAAKV,YAAL,CAAkBS,MAAlB,CAAyB,UAAAX,WAAW,EAAI;AAC3C,eAAON,SAAS,OAAT,CAAc,YAAM;AACvB;AACA,cAAMmB,WAAW,GAAGb,WAAW,CAACc,OAAZ,GAChBd,WAAW,CAACc,OAAZ,CAAoBC,MAApB,CAA2B,UAACC,KAAD,EAAQC,MAAR,EAAiB;AACxC,mBAAOD,KAAK,GAAGC,MAAM,CAACC,MAAtB;AACH,WAFD,EAEE,CAFF,CADgB,GAId,CAJN,CAFuB,CAQvB;;AACA,cAAIN,UAAU,IAAIA,UAAU,CAACO,mBAAX,CAA+BnB,WAAW,CAACK,EAA3C,CAAlB,EAAiE;AAC7Dd,YAAAA,MAAM,CAAC6B,IAAP,uBAA2BpB,WAAW,CAACK,EAAvC;AACA;AACH,WAZsB,CAcvB;;;AACA,cAAIL,WAAW,CAACU,KAAZ,CAAkBQ,MAAlB,KAA6BL,WAAjC,EAA+C;AAC3CtB,YAAAA,MAAM,CAAC6B,IAAP,+BAAmCpB,WAAW,CAACK,EAA/C,mBAA0DL,WAAW,CAACU,KAAZ,CAAkBD,OAA5E;AACA;AACH,WAlBsB,CAoBvB;;;AACA,cAAI,CAACrB,WAAW,CAACiC,iBAAZ,CAA8BrB,WAA9B,CAAL,EAAiD;AAC7CT,YAAAA,MAAM,CAAC6B,IAAP,6CAAiDpB,WAAW,CAACK,EAA7D,mBAAwEL,WAAW,CAACU,KAAZ,CAAkBD,OAA1F;AACA;AACH;;AAED,iBAAOT,WAAP;AACH,SA3BM,CAAP;AA4BH,OA7BM,CAAP;AA8BH;AAED;;;;;;4BAGQ;AACJ,WAAKF,aAAL,GAAqB,EAArB;AACH;;;;;;AAGLwB,MAAM,CAACC,OAAP,GAAiB1B,eAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'TXPL';\n\nconst Transaction = require('./Transaction');\nconst ioc = require('../../../util/iocContainer');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: TransactionPool\n * -------------------------\n * pool of transactions that have not yet been included in the blockchain\n * (but may be eligible to be mined)\n *\n * author: John R. Kosinski\n */\nclass TransactionPool {\n    get transactions() { return this._transactions; }\n    get txCount() { return this._transactions.length; }\n\n    /**\n     * constructor\n     */\n    constructor() {\n        this._transactions = [];\n    }\n\n    updateOrAddTransaction(transaction) {\n        exception.try(() => {\n            //get existing trans if exists\n            let existing = this.transactions.find(t => t.id === transaction.id);\n\n            if (existing) {\n                logger.info(`updating transaction ${transaction.id}: ${transaction}`);\n                this.transactions[this.transactions.indexOf(existing)] = transaction;\n            }\n            else {\n                logger.info(`creating new transaction: ${transaction}`);\n                this.transactions.push(transaction);\n            }\n        });\n    }\n\n    /*Transaction*/ existingTransaction(address) {\n        return exception.try(() => {\n            return this.transactions.find(t => t.input.address === address);\n        });\n    }\n    \n    /*Transaction[]*/ pendingTransactions(address) {\n        return exception.try(() => {\n            return this.transactions.filter(t => t.input.address === address);\n        });\n    }\n\n    /**\n     * gets a list of valid transactions; ones whose total output is equal to input\n     * with valid signature\n     * @param {Blockchain} blockchain (optional) if specified, will check for duplicate transaction \n     * id in chain (transaction duplicate is not valid)\n     * @returns {Transaction[]}\n     */\n    /*Transaction[]*/ validTransactions(blockchain) {\n        return this.transactions.filter(transaction => {\n            return exception.try(() => {\n                // calculate total of all outputs\n                const outputTotal = transaction.outputs ?\n                    transaction.outputs.reduce((total, output)=>{\n                        return total + output.amount;\n                    },0)\n                    : 0;\n                \n                //make sure the transaction hasn't already been added to the chain\n                if (blockchain && blockchain.containsTransaction(transaction.id)){\n                    logger.warn(`transaction ${transaction.id} already exists on the chain and should not be included`); \n                    return;\n                }\n\n                //check that outputs == input\n                if (transaction.input.amount !== outputTotal ) {\n                    logger.warn(`invalid transaction ${transaction.id} from ${transaction.input.address}`);\n                    return;\n                }\n\n                //check valid signature\n                if (!Transaction.verifyTransaction(transaction)) {\n                    logger.warn(`invalid signature for transaction ${transaction.id} from ${transaction.input.address}`);\n                    return;\n                }\n\n                return transaction;\n            });\n        });\n    }\n\n    /**\n     * clears all transactions from pool\n     */\n    clear() {\n        this._transactions = [];\n    }\n}\n\nmodule.exports = TransactionPool;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567888638956
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes/Wallet.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes/Wallet.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes/Wallet.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes/Wallet.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes",
        "sourceFileName": "Wallet.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'WAL';\n\nvar _require = require('../../../config'),\n    INITIAL_BALANCE = _require.INITIAL_BALANCE;\n\nvar cryptoUtil = require('../../../util/cryptoUtil');\n\nvar ioc = require('../../../util/iocContainer');\n\nvar Transaction = require('./Transaction');\n\nvar EventEmitter = require('events');\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: Wallet\n * ----------------\n * wallet class with public/private key pair and balance\n *\n * supports these events:\n * - update\n *\n * author: John R. Kosinski\n */\n\nvar Wallet =\n/*#__PURE__*/\nfunction () {\n  _createClass(Wallet, [{\n    key: \"balance\",\n    get: function get() {\n      return this._balance;\n    }\n  }, {\n    key: \"keyPair\",\n    get: function get() {\n      return this._keyPair;\n    }\n  }, {\n    key: \"publicKey\",\n    get: function get() {\n      return this._publicKey;\n    }\n    /**\n     * constructor\n     */\n\n  }]);\n\n  function Wallet() {\n    _classCallCheck(this, Wallet);\n\n    this._balance = INITIAL_BALANCE;\n    this._keyPair = cryptoUtil.generateKeyPair();\n    this._publicKey = this.keyPair.getPublic().encode('hex');\n    this._emitter = new EventEmitter();\n    logger.info(\"wallet created: public key is \".concat(this._publicKey.toString()));\n  }\n  /**\n   * signs the given data using the wallet's keypair\n   * @param {string} data\n   * @returns {string}\n   */\n\n  /*Signature*/\n\n\n  _createClass(Wallet, [{\n    key: \"sign\",\n    value: function sign(data) {\n      return this.keyPair.sign(data);\n    }\n    /**\n     * originates a transaction to send funds from this wallet to a specified \n     * wallet; creates the transaction, signs it, adds it to the tx pool, and \n     * returns it. \n     * @param {string} recipient public key of recipient wallet\n     * @param {float} amount amount to send\n     * @param {Blockchain} blockchain \n     * @param {TransactionPool} transactionPool \n     * @returns {Transaction}\n     */\n\n    /*Transaction*/\n\n  }, {\n    key: \"createTransaction\",\n    value: function createTransaction(recipient, amount, blockchain, transactionPool) {\n      var _this = this;\n\n      return exception[\"try\"](function () {\n        logger.info(\"creating transaction: send \".concat(amount, \" to \").concat(recipient)); //update balance\n\n        _this.updateBalance(blockchain); //disallow transactions to myself \n\n\n        if (recipient === _this.publicKey) {\n          logger.warn('cannot send a transaction to yourself!');\n          return;\n        } //disallow transaction if more than balance\n\n\n        if (amount > _this.balance) {\n          logger.warn(\"amount: \".concat(amount, \" exceeds the current balance: \").concat(_this.balance));\n          return;\n        } //get existing transaction\n\n\n        var transaction = transactionPool.existingTransaction(_this.publicKey);\n\n        if (transaction) {\n          //if existing transaction, we have to take its amount into account \n          //when calculating the balance \n          var combinedAmount = amount + transaction.outputs[0].amount;\n\n          if (combinedAmount > _this.balance) {\n            logger.warn(\"combined amount: \".concat(combinedAmount, \" exceeds the current balance: \").concat(_this.balance));\n            return;\n          }\n\n          transaction.update(_this, recipient, amount);\n        } else {\n          transaction = Transaction.newTransaction(_this, recipient, amount);\n          transactionPool.updateOrAddTransaction(transaction);\n        }\n\n        return transaction;\n      });\n    }\n    /**\n     * recalculates the wallet's balance according to the transactions in the given blockchain\n     * @returns {float} the calculated balance\n     * @param {Blockchain} blockchain\n     */\n\n    /*float*/\n\n  }, {\n    key: \"calculateBalance\",\n    value: function calculateBalance(blockchain) {\n      var _this2 = this;\n\n      return exception[\"try\"](function () {\n        //existing balance\n        var balance = INITIAL_BALANCE; // store all the transactions in blockchain, in temp array\n\n        var transactions = [];\n        blockchain.chain.forEach(function (block) {\n          return block.data.forEach(function (transaction) {\n            transactions.push(transaction);\n          });\n        }); //get all transactions sent from this wallet\n\n        var inputTransactions = transactions.filter(function (t) {\n          return t.input.address === _this2.publicKey;\n        });\n        var lastTransTime = 0;\n\n        if (inputTransactions.length > 0) {\n          //get latest transaction\n          var recentInputTrans = inputTransactions.reduce(function (prev, current) {\n            return prev.input.timestamp > current.input.timestamp ? prev : current;\n          }); //balance is output back to sender\n\n          balance = recentInputTrans.outputs.find(function (output) {\n            return output.address === _this2.publicKey;\n          }).amount; // save the timestamp of the latest transaction made by the wallet\n\n          lastTransTime = recentInputTrans.input.timestamp;\n        } // get the transactions that were addressed to this wallet ie somebody sent some moeny\n        // and add its ouputs.\n        // since we save the timestamp we would only add the outputs of the transactions received\n        // only after the latest transactions made by us\n\n\n        transactions.forEach(function (transaction) {\n          if (transaction.input.timestamp > lastTransTime) {\n            transaction.outputs.find(function (output) {\n              if (output.address === _this2.publicKey) {\n                balance += output.amount;\n              }\n            });\n          }\n        });\n        return balance;\n      });\n    }\n    /**\n     * recalculates the wallet's balance according to the transactions in the given blockchain\n     * and replaces the current balance with the calculated balance\n     * @param {Blockchain} blockchain\n     */\n\n  }, {\n    key: \"updateBalance\",\n    value: function updateBalance(blockchain) {\n      var _this3 = this;\n\n      exception[\"try\"](function () {\n        var newBalance = _this3.calculateBalance(blockchain);\n\n        if (newBalance !== _this3._balance) {\n          _this3._balance = _this3.calculateBalance(blockchain);\n\n          _this3._emitter.emit('update');\n        }\n      });\n    }\n    /**\n     * subscribe to an event\n     * @param {string} eventName\n     * @param {fn} callback\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(eventName, callback) {\n      if (eventName && callback) {\n        this._emitter.on(eventName, callback);\n      }\n    }\n    /**\n     * returns a string representation\n     */\n\n    /*string*/\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Wallet -\\n        publicKey: \".concat(this.publicKey.toString(), \",\\n        balance  : \").concat(this.balance);\n    }\n    /**\n     * returns a json representation\n     */\n\n    /*json*/\n\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      return {\n        publicKey: this.publicKey.toString(),\n        privateKey: this.keyPair.priv.toString(16, 2),\n        balance: this.balance\n      };\n    }\n    /**\n     * returns a json representation converted to string\n     */\n\n    /*string*/\n\n  }, {\n    key: \"toJsonString\",\n    value: function toJsonString() {\n      return JSON.stringify(this.toJson());\n    }\n    /**\n     * creates a new wallet to be used as the sender when awarding the mining reward\n     * @returns {Wallet}\n     */\n\n  }], [{\n    key: \"blockchainWallet\",\n    value: function blockchainWallet() {\n      var _this4 = this;\n\n      return exception[\"try\"](function () {\n        var blockchainWallet = new _this4();\n        blockchainWallet.address = 'blockchain-wallet';\n        return blockchainWallet;\n      });\n    }\n    /**\n     * deserializes a wallet instance from JSON data\n     * @returns {Wallet}\n     * @param {json} json\n     */\n\n  }, {\n    key: \"fromJson\",\n    value: function fromJson(json) {\n      var _this5 = this;\n\n      return exception[\"try\"](function () {\n        var output = new _this5();\n        output._balance = json.balance;\n        output._keyPair = cryptoUtil.deserializeKeyPair(json.publicKey, json.privateKey);\n        output._publicKey = output.keyPair.getPublic().encode('hex');\n        return output;\n      });\n    }\n  }]);\n\n  return Wallet;\n}();\n\nmodule.exports = Wallet;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Wallet.js"
      ],
      "names": [
        "LOG_TAG",
        "require",
        "INITIAL_BALANCE",
        "cryptoUtil",
        "ioc",
        "Transaction",
        "EventEmitter",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Wallet",
        "_balance",
        "_keyPair",
        "_publicKey",
        "generateKeyPair",
        "keyPair",
        "getPublic",
        "encode",
        "_emitter",
        "info",
        "toString",
        "data",
        "sign",
        "recipient",
        "amount",
        "blockchain",
        "transactionPool",
        "updateBalance",
        "publicKey",
        "warn",
        "balance",
        "transaction",
        "existingTransaction",
        "combinedAmount",
        "outputs",
        "update",
        "newTransaction",
        "updateOrAddTransaction",
        "transactions",
        "chain",
        "forEach",
        "block",
        "push",
        "inputTransactions",
        "filter",
        "t",
        "input",
        "address",
        "lastTransTime",
        "length",
        "recentInputTrans",
        "reduce",
        "prev",
        "current",
        "timestamp",
        "find",
        "output",
        "newBalance",
        "calculateBalance",
        "emit",
        "eventName",
        "callback",
        "on",
        "privateKey",
        "priv",
        "JSON",
        "stringify",
        "toJson",
        "blockchainWallet",
        "json",
        "deserializeKeyPair",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAG,KAAhB;;eAE4BC,OAAO,CAAC,iBAAD,C;IAA3BC,e,YAAAA,e;;AACR,IAAMC,UAAU,GAAGF,OAAO,CAAC,0BAAD,CAA1B;;AACA,IAAMG,GAAG,GAAGH,OAAO,CAAC,4BAAD,CAAnB;;AACA,IAAMI,WAAW,GAAGJ,OAAO,CAAC,eAAD,CAA3B;;AACA,IAAMK,YAAY,GAAGL,OAAO,CAAC,QAAD,CAA5B;;AAEA,IAAMM,MAAM,GAAGH,GAAG,CAACI,aAAJ,CAAkBC,YAAlB,CAA+BT,OAA/B,CAAf;AACA,IAAMU,SAAS,GAAGN,GAAG,CAACO,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;;;;IAUMM,M;;;;;wBACY;AAAE,aAAO,KAAKC,QAAZ;AAAuB;;;wBACzB;AAAE,aAAO,KAAKC,QAAZ;AAAuB;;;wBACvB;AAAE,aAAO,KAAKC,UAAZ;AAAyB;AAE3C;;;;;;AAGA,oBAAc;AAAA;;AACV,SAAKF,QAAL,GAAgBZ,eAAhB;AACA,SAAKa,QAAL,GAAgBZ,UAAU,CAACc,eAAX,EAAhB;AACA,SAAKD,UAAL,GAAkB,KAAKE,OAAL,CAAaC,SAAb,GAAyBC,MAAzB,CAAgC,KAAhC,CAAlB;AACA,SAAKC,QAAL,GAAgB,IAAIf,YAAJ,EAAhB;AAEAC,IAAAA,MAAM,CAACe,IAAP,yCAA6C,KAAKN,UAAL,CAAgBO,QAAhB,EAA7C;AACH;AAED;;;;;;AAKA;;;;;yBAAmBC,I,EAAM;AACrB,aAAO,KAAKN,OAAL,CAAaO,IAAb,CAAkBD,IAAlB,CAAP;AACH;AAED;;;;;;;;;;;AAUA;;;;sCAAkCE,S,EAAWC,M,EAAQC,U,EAAYC,e,EAAiB;AAAA;;AAC9E,aAAOnB,SAAS,OAAT,CAAc,YAAM;AACvBH,QAAAA,MAAM,CAACe,IAAP,sCAA0CK,MAA1C,iBAAuDD,SAAvD,GADuB,CAGvB;;AACA,QAAA,KAAI,CAACI,aAAL,CAAmBF,UAAnB,EAJuB,CAMvB;;;AACA,YAAIF,SAAS,KAAK,KAAI,CAACK,SAAvB,EAAkC;AAC9BxB,UAAAA,MAAM,CAACyB,IAAP,CAAY,wCAAZ;AACA;AACH,SAVsB,CAYvB;;;AACA,YAAIL,MAAM,GAAG,KAAI,CAACM,OAAlB,EAA2B;AACvB1B,UAAAA,MAAM,CAACyB,IAAP,mBAAuBL,MAAvB,2CAA8D,KAAI,CAACM,OAAnE;AACA;AACH,SAhBsB,CAkBvB;;;AACA,YAAIC,WAAW,GAAGL,eAAe,CAACM,mBAAhB,CAAoC,KAAI,CAACJ,SAAzC,CAAlB;;AAEA,YAAIG,WAAJ,EAAiB;AACb;AACA;AACA,cAAME,cAAc,GAAIT,MAAM,GAAGO,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuBV,MAAxD;;AACA,cAAIS,cAAc,GAAG,KAAI,CAACH,OAA1B,EAAmC;AAC/B1B,YAAAA,MAAM,CAACyB,IAAP,4BAAgCI,cAAhC,2CAA+E,KAAI,CAACH,OAApF;AACA;AACH;;AAEDC,UAAAA,WAAW,CAACI,MAAZ,CAAmB,KAAnB,EAAyBZ,SAAzB,EAAoCC,MAApC;AACH,SAVD,MAWK;AACDO,UAAAA,WAAW,GAAG7B,WAAW,CAACkC,cAAZ,CAA2B,KAA3B,EAAiCb,SAAjC,EAA4CC,MAA5C,CAAd;AACAE,UAAAA,eAAe,CAACW,sBAAhB,CAAuCN,WAAvC;AACH;;AAED,eAAOA,WAAP;AACH,OAtCM,CAAP;AAuCH;AAED;;;;;;AAKA;;;;qCAA2BN,U,EAAY;AAAA;;AACnC,aAAOlB,SAAS,OAAT,CAAc,YAAM;AAEvB;AACA,YAAIuB,OAAO,GAAG/B,eAAd,CAHuB,CAKvB;;AACA,YAAIuC,YAAY,GAAG,EAAnB;AACAb,QAAAA,UAAU,CAACc,KAAX,CAAiBC,OAAjB,CAAyB,UAAAC,KAAK;AAAA,iBAAIA,KAAK,CAACpB,IAAN,CAAWmB,OAAX,CAAmB,UAAAT,WAAW,EAAI;AAChEO,YAAAA,YAAY,CAACI,IAAb,CAAkBX,WAAlB;AACH,WAFiC,CAAJ;AAAA,SAA9B,EAPuB,CAWvB;;AACA,YAAMY,iBAAiB,GAAGL,YAAY,CAACM,MAAb,CACtB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,KAAF,CAAQC,OAAR,KAAoB,MAAI,CAACnB,SAA7B;AAAA,SADqB,CAA1B;AAIA,YAAIoB,aAAa,GAAG,CAApB;;AAEA,YAAIL,iBAAiB,CAACM,MAAlB,GAA2B,CAA/B,EAAkC;AAE9B;AACA,cAAMC,gBAAgB,GAAGP,iBAAiB,CAACQ,MAAlB,CACrB,UAACC,IAAD,EAAMC,OAAN;AAAA,mBAAiBD,IAAI,CAACN,KAAL,CAAWQ,SAAX,GAAuBD,OAAO,CAACP,KAAR,CAAcQ,SAArC,GAAiDF,IAAjD,GAAwDC,OAAzE;AAAA,WADqB,CAAzB,CAH8B,CAO9B;;AACAvB,UAAAA,OAAO,GAAGoB,gBAAgB,CAAChB,OAAjB,CAAyBqB,IAAzB,CAA8B,UAAAC,MAAM;AAAA,mBAAIA,MAAM,CAACT,OAAP,KAAmB,MAAI,CAACnB,SAA5B;AAAA,WAApC,EAA2EJ,MAArF,CAR8B,CAU9B;;AACAwB,UAAAA,aAAa,GAAGE,gBAAgB,CAACJ,KAAjB,CAAuBQ,SAAvC;AACH,SA9BsB,CAgCvB;AACA;AACA;AACA;;;AACAhB,QAAAA,YAAY,CAACE,OAAb,CAAqB,UAAAT,WAAW,EAAI;AAChC,cAAIA,WAAW,CAACe,KAAZ,CAAkBQ,SAAlB,GAA8BN,aAAlC,EAAiD;AAC7CjB,YAAAA,WAAW,CAACG,OAAZ,CAAoBqB,IAApB,CAAyB,UAAAC,MAAM,EAAI;AAC/B,kBAAIA,MAAM,CAACT,OAAP,KAAmB,MAAI,CAACnB,SAA5B,EAAuC;AACnCE,gBAAAA,OAAO,IAAI0B,MAAM,CAAChC,MAAlB;AACH;AACJ,aAJD;AAKH;AACJ,SARD;AAUA,eAAOM,OAAP;AACH,OA/CM,CAAP;AAgDH;AAED;;;;;;;;kCAKcL,U,EAAY;AAAA;;AACtBlB,MAAAA,SAAS,OAAT,CAAc,YAAM;AAChB,YAAMkD,UAAU,GAAG,MAAI,CAACC,gBAAL,CAAsBjC,UAAtB,CAAnB;;AACA,YAAIgC,UAAU,KAAK,MAAI,CAAC9C,QAAxB,EAAkC;AAC9B,UAAA,MAAI,CAACA,QAAL,GAAgB,MAAI,CAAC+C,gBAAL,CAAsBjC,UAAtB,CAAhB;;AACA,UAAA,MAAI,CAACP,QAAL,CAAcyC,IAAd,CAAmB,QAAnB;AACH;AACJ,OAND;AAOH;AAED;;;;;;;;uBAKGC,S,EAAWC,Q,EAAU;AACpB,UAAID,SAAS,IAAIC,QAAjB,EAA2B;AACvB,aAAK3C,QAAL,CAAc4C,EAAd,CAAiBF,SAAjB,EAA4BC,QAA5B;AACH;AACJ;AAED;;;;AAGA;;;;+BAAsB;AAClB,oDACa,KAAKjC,SAAL,CAAeR,QAAf,EADb,mCAEa,KAAKU,OAFlB;AAGH;AAED;;;;AAGA;;;;6BAAkB;AACd,aAAO;AACHF,QAAAA,SAAS,EAAE,KAAKA,SAAL,CAAeR,QAAf,EADR;AAEH2C,QAAAA,UAAU,EAAE,KAAKhD,OAAL,CAAaiD,IAAb,CAAkB5C,QAAlB,CAA2B,EAA3B,EAA8B,CAA9B,CAFT;AAGHU,QAAAA,OAAO,EAAE,KAAKA;AAHX,OAAP;AAKH;AAED;;;;AAGA;;;;mCAA0B;AACtB,aAAOmC,IAAI,CAACC,SAAL,CAAe,KAAKC,MAAL,EAAf,CAAP;AACH;AAED;;;;;;;uCAIqC;AAAA;;AACjC,aAAO5D,SAAS,OAAT,CAAc,YAAM;AACvB,YAAM6D,gBAAgB,GAAG,IAAI,MAAJ,EAAzB;AACAA,QAAAA,gBAAgB,CAACrB,OAAjB,GAA2B,mBAA3B;AACA,eAAOqB,gBAAP;AACH,OAJM,CAAP;AAKH;AAED;;;;;;;;6BAK2BC,I,EAAM;AAAA;;AAC7B,aAAO9D,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMiD,MAAM,GAAG,IAAI,MAAJ,EAAf;AAEAA,QAAAA,MAAM,CAAC7C,QAAP,GAAkB0D,IAAI,CAACvC,OAAvB;AACA0B,QAAAA,MAAM,CAAC5C,QAAP,GAAkBZ,UAAU,CAACsE,kBAAX,CAA8BD,IAAI,CAACzC,SAAnC,EAA8CyC,IAAI,CAACN,UAAnD,CAAlB;AACAP,QAAAA,MAAM,CAAC3C,UAAP,GAAoB2C,MAAM,CAACzC,OAAP,CAAeC,SAAf,GAA2BC,MAA3B,CAAkC,KAAlC,CAApB;AAEA,eAAOuC,MAAP;AACH,OARM,CAAP;AASH;;;;;;AAGLe,MAAM,CAACC,OAAP,GAAiB9D,MAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/wallet/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'WAL';\n\nconst { INITIAL_BALANCE } = require('../../../config');\nconst cryptoUtil = require('../../../util/cryptoUtil');\nconst ioc = require('../../../util/iocContainer');\nconst Transaction = require('./Transaction');\nconst EventEmitter = require('events');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: Wallet\n * ----------------\n * wallet class with public/private key pair and balance\n *\n * supports these events:\n * - update\n *\n * author: John R. Kosinski\n */\nclass Wallet {\n    get balance() { return this._balance; }\n    get keyPair() { return this._keyPair; }\n    get publicKey() { return this._publicKey; }\n\n    /**\n     * constructor\n     */\n    constructor() {\n        this._balance = INITIAL_BALANCE;\n        this._keyPair = cryptoUtil.generateKeyPair();\n        this._publicKey = this.keyPair.getPublic().encode('hex');\n        this._emitter = new EventEmitter();\n\n        logger.info(`wallet created: public key is ${this._publicKey.toString()}`);\n    }\n\n    /**\n     * signs the given data using the wallet's keypair\n     * @param {string} data\n     * @returns {string}\n     */\n    /*Signature*/ sign(data) {\n        return this.keyPair.sign(data);\n    }\n\n    /**\n     * originates a transaction to send funds from this wallet to a specified \n     * wallet; creates the transaction, signs it, adds it to the tx pool, and \n     * returns it. \n     * @param {string} recipient public key of recipient wallet\n     * @param {float} amount amount to send\n     * @param {Blockchain} blockchain \n     * @param {TransactionPool} transactionPool \n     * @returns {Transaction}\n     */\n    /*Transaction*/ createTransaction(recipient, amount, blockchain, transactionPool) {\n        return exception.try(() => {\n            logger.info(`creating transaction: send ${amount} to ${recipient}`);\n\n            //update balance\n            this.updateBalance(blockchain);\n            \n            //disallow transactions to myself \n            if (recipient === this.publicKey) {\n                logger.warn('cannot send a transaction to yourself!'); \n                return; \n            }\n\n            //disallow transaction if more than balance\n            if (amount > this.balance) {\n                logger.warn(`amount: ${amount} exceeds the current balance: ${this.balance}`);\n                return;\n            }\n\n            //get existing transaction\n            let transaction = transactionPool.existingTransaction(this.publicKey);\n\n            if (transaction) {\n                //if existing transaction, we have to take its amount into account \n                //when calculating the balance \n                const combinedAmount = (amount + transaction.outputs[0].amount);\n                if (combinedAmount > this.balance) {\n                    logger.warn(`combined amount: ${combinedAmount} exceeds the current balance: ${this.balance}`);\n                    return;\n                }\n                \n                transaction.update(this, recipient, amount);\n            }\n            else {\n                transaction = Transaction.newTransaction(this, recipient, amount);\n                transactionPool.updateOrAddTransaction(transaction);\n            }\n\n            return transaction;\n        });\n    }\n\n    /**\n     * recalculates the wallet's balance according to the transactions in the given blockchain\n     * @returns {float} the calculated balance\n     * @param {Blockchain} blockchain\n     */\n    /*float*/ calculateBalance(blockchain) {\n        return exception.try(() => {\n\n            //existing balance\n            let balance = INITIAL_BALANCE;\n\n            // store all the transactions in blockchain, in temp array\n            let transactions = [];\n            blockchain.chain.forEach(block => block.data.forEach(transaction => {\n                transactions.push(transaction);\n            }));\n\n            //get all transactions sent from this wallet\n            const inputTransactions = transactions.filter(\n                t => t.input.address === this.publicKey\n            );\n\n            let lastTransTime = 0;\n\n            if (inputTransactions.length > 0) {\n\n                //get latest transaction\n                const recentInputTrans = inputTransactions.reduce(\n                    (prev,current)=> prev.input.timestamp > current.input.timestamp ? prev : current\n                );\n\n                //balance is output back to sender\n                balance = recentInputTrans.outputs.find(output => output.address === this.publicKey).amount;\n\n                // save the timestamp of the latest transaction made by the wallet\n                lastTransTime = recentInputTrans.input.timestamp;\n            }\n\n            // get the transactions that were addressed to this wallet ie somebody sent some moeny\n            // and add its ouputs.\n            // since we save the timestamp we would only add the outputs of the transactions received\n            // only after the latest transactions made by us\n            transactions.forEach(transaction => {\n                if (transaction.input.timestamp > lastTransTime) {\n                    transaction.outputs.find(output => {\n                        if (output.address === this.publicKey) {\n                            balance += output.amount;\n                        }\n                    })\n                }\n            });\n\n            return balance;\n        });\n    }\n\n    /**\n     * recalculates the wallet's balance according to the transactions in the given blockchain\n     * and replaces the current balance with the calculated balance\n     * @param {Blockchain} blockchain\n     */\n    updateBalance(blockchain) {\n        exception.try(() => {\n            const newBalance = this.calculateBalance(blockchain);\n            if (newBalance !== this._balance) {\n                this._balance = this.calculateBalance(blockchain);\n                this._emitter.emit('update');\n            }\n        });\n    }\n\n    /**\n     * subscribe to an event\n     * @param {string} eventName\n     * @param {fn} callback\n     */\n    on(eventName, callback) {\n        if (eventName && callback) {\n            this._emitter.on(eventName, callback);\n        }\n    }\n\n    /**\n     * returns a string representation\n     */\n    /*string*/ toString() {\n        return `Wallet -\n        publicKey: ${this.publicKey.toString()},\n        balance  : ${this.balance}`;\n    }\n\n    /**\n     * returns a json representation\n     */\n    /*json*/ toJson() {\n        return {\n            publicKey: this.publicKey.toString(),\n            privateKey: this.keyPair.priv.toString(16,2),\n            balance: this.balance\n        };\n    }\n\n    /**\n     * returns a json representation converted to string\n     */\n    /*string*/ toJsonString() {\n        return JSON.stringify(this.toJson());\n    }\n\n    /**\n     * creates a new wallet to be used as the sender when awarding the mining reward\n     * @returns {Wallet}\n     */\n    static /*Wallet*/ blockchainWallet() {\n        return exception.try(() => {\n            const blockchainWallet = new this();\n            blockchainWallet.address = 'blockchain-wallet';\n            return blockchainWallet;\n        });\n    }\n\n    /**\n     * deserializes a wallet instance from JSON data\n     * @returns {Wallet}\n     * @param {json} json\n     */\n    static /*Wallet*/ fromJson(json) {\n        return exception.try(() => {\n            const output = new this();\n\n            output._balance = json.balance;\n            output._keyPair = cryptoUtil.deserializeKeyPair(json.publicKey, json.privateKey);\n            output._publicKey = output.keyPair.getPublic().encode('hex');\n\n            return output;\n        });\n    }\n}\n\nmodule.exports = Wallet;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567888638956
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain/index.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar Block = require('./classes/Block');\n\nvar Blockchain = require('./classes/Blockchain');\n\nmodule.exports = {\n  Block: Block,\n  Blockchain: Blockchain\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkJsb2NrIiwicmVxdWlyZSIsIkJsb2NrY2hhaW4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxpQkFBRCxDQUFyQjs7QUFDQSxJQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQyxzQkFBRCxDQUExQjs7QUFFQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JKLEVBQUFBLEtBQUssRUFBTEEsS0FEYTtBQUViRSxFQUFBQSxVQUFVLEVBQVZBO0FBRmEsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21hc3Rlci9taW5hY29pbi9taW5hY29pbi1zZXJ2ZXIvc3JjL2xpYi9ibG9ja2NoYWluIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBCbG9jayA9IHJlcXVpcmUoJy4vY2xhc3Nlcy9CbG9jaycpO1xuY29uc3QgQmxvY2tjaGFpbiA9IHJlcXVpcmUoJy4vY2xhc3Nlcy9CbG9ja2NoYWluJyk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIEJsb2NrLFxuICAgIEJsb2NrY2hhaW5cbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "Block",
        "require",
        "Blockchain",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,iBAAD,CAArB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,sBAAD,CAA1B;;AAEAE,MAAM,CAACC,OAAP,GAAiB;AACbJ,EAAAA,KAAK,EAALA,KADa;AAEbE,EAAAA,UAAU,EAAVA;AAFa,CAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain",
      "sourcesContent": [
        "'use strict';\n\nconst Block = require('./classes/Block');\nconst Blockchain = require('./classes/Blockchain');\n\nmodule.exports = {\n    Block,\n    Blockchain\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1567888638956
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain/classes/Block.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain/classes/Block.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain/classes/Block.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain/classes/Block.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain/classes",
        "sourceFileName": "Block.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'BLK';\n\nvar cryptoUtil = require('../../../util/cryptoUtil');\n\nvar _require = require('../../../config.js'),\n    DIFFICULTY = _require.DIFFICULTY,\n    MINE_RATE = _require.MINE_RATE;\n\nvar ioc = require('../../../util/iocContainer');\n\nvar _require2 = require('../../wallet'),\n    Transaction = _require2.Transaction;\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: Block\n * ---------------\n * implementation of a Blockchain block. \n *\n * author: John R. Kosinski\n */\n\nvar Block =\n/*#__PURE__*/\nfunction () {\n  _createClass(Block, [{\n    key: \"timestamp\",\n    get: function get() {\n      return this._timestamp;\n    }\n  }, {\n    key: \"lastHash\",\n    get: function get() {\n      return this._lastHash;\n    }\n  }, {\n    key: \"hash\",\n    get: function get() {\n      return this._hash;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._data;\n    }\n  }, {\n    key: \"nonce\",\n    get: function get() {\n      return this._nonce;\n    }\n  }, {\n    key: \"difficulty\",\n    get: function get() {\n      return this._difficulty;\n    }\n  }]);\n\n  function Block(timestamp, lastHash, hash, data, nonce, difficulty) {\n    _classCallCheck(this, Block);\n\n    this._timestamp = timestamp;\n    this._lastHash = lastHash;\n    this._hash = hash;\n    this._data = data;\n    this._nonce = nonce;\n    this._difficulty = difficulty || DIFFICULTY;\n    logger.info('block created: ' + this.toJsonString());\n  }\n\n  _createClass(Block, [{\n    key: \"toString\",\n\n    /**\n     * returns a string representation\n     */\n    value: function toString() {\n      var _this = this;\n\n      return exception[\"try\"](function () {\n        return \"Block -\\n            Timestamp : \".concat(_this.timestamp, \"\\n            Last Hash : \").concat(_this.lastHash.substring(0, 10), \"\\n            Hash      : \").concat(_this.hash.substring(0, 10), \"\\n            Data      : \").concat(_this.data, \"\\n            Difficulty: \").concat(_this.difficulty);\n      });\n    }\n    /**\n     * returns a json representation\n     */\n\n    /*json*/\n\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      var output = {\n        timestamp: this.timestamp,\n        lastHash: this.lastHash,\n        hash: this.hash,\n        difficulty: this.difficulty,\n        nonce: this.nonce,\n        data: []\n      };\n\n      if (this.data && this.data.length) {\n        this.data.forEach(function (t) {\n          if (t.toJson) output.data.push(t.toJson());\n        });\n      }\n\n      return output;\n    }\n    /**\n     * returns a json representation converted to string\n     */\n\n    /*string*/\n\n  }, {\n    key: \"toJsonString\",\n    value: function toJsonString() {\n      return JSON.stringify(this.toJson());\n    }\n    /**\n     * deserializes a Block instance from JSON data\n     * @returns {Block}\n     * @param {json} json\n     */\n\n  }, {\n    key: \"data\",\n    set: function set(d) {\n      this._data = d;\n    }\n    /**\n     * creates the special genesis block\n     * @returns {Block}\n     */\n\n  }], [{\n    key: \"genesis\",\n    value: function genesis() {\n      var _this2 = this;\n\n      return exception[\"try\"](function () {\n        //TODO: use 0 instead of 'genesis time' \n        return new _this2('Genesis time', '----', 'f1574-h4gh', [], 0, DIFFICULTY);\n      });\n    }\n    /**\n     * creates & returns a hash of the given data\n     * \n     * @param {int} timestamp block timestamp\n     * @param {string} lastHash hash of intended parent block\n     * @param {Transaction[]} data the data to include in the block\n     * @param {int} nonce created during mining\n     * @param {int} difficulty block mining difficulty\n     * @returns {string}\n     */\n\n  }, {\n    key: \"hash\",\n    value: function hash(timestamp, lastHash, data, nonce, difficulty) {\n      return exception[\"try\"](function () {\n        return cryptoUtil.hash({\n          timestamp: timestamp,\n          lastHash: lastHash,\n          data: Transaction.arrayToJson(data),\n          nonce: nonce,\n          difficulty: difficulty\n        });\n      });\n    }\n    /**\n     * mines a new block to be added to the chain, and returns it (without adding it to\n     * the blockchain)\n     *\n     * @param {Block} lastBlock the parent block (should be most recent block in chain)\n     * @param {Transaction[]} data transactions to be included in the block\n     */\n\n  }, {\n    key: \"mineBlock\",\n    value: function mineBlock(lastBlock, data) {\n      var _this3 = this;\n\n      return exception[\"try\"](function () {\n        var hash;\n        var timestamp = Date.now();\n        var lastHash = lastBlock.hash;\n        var difficulty = lastBlock.difficulty;\n        var nonce = 0;\n\n        do {\n          nonce++;\n          timestamp = Date.now();\n          difficulty = Block.adjustDifficulty(lastBlock, timestamp);\n          hash = Block.hash(timestamp, lastHash, data, nonce, difficulty);\n        } while (hash.substring(0, difficulty) !== '0'.repeat(difficulty));\n\n        logger.info(\"block \".concat(hash, \" mined\"));\n        return new _this3(timestamp, lastHash, hash, data, nonce, difficulty);\n      });\n    }\n    /**\n     * creates & returns a hash of the given block's essential data\n     * @returns string\n     * @param {Block} block\n     */\n\n  }, {\n    key: \"blockHash\",\n    value: function blockHash(block) {\n      return exception[\"try\"](function () {\n        //destructuring\n        var timestamp = block.timestamp,\n            lastHash = block.lastHash,\n            data = block.data,\n            nonce = block.nonce,\n            difficulty = block.difficulty;\n        return Block.hash(timestamp, lastHash, data, nonce, difficulty);\n      });\n    }\n  }, {\n    key: \"adjustDifficulty\",\n    value: function adjustDifficulty(lastBlock, currentTime) {\n      return exception[\"try\"](function () {\n        var difficulty = lastBlock.difficulty;\n        difficulty = lastBlock.timestamp + MINE_RATE > currentTime ? difficulty + 1 : difficulty - 1;\n        return difficulty;\n      });\n    }\n  }, {\n    key: \"fromJson\",\n    value: function fromJson(json) {\n      var _this4 = this;\n\n      return exception[\"try\"](function () {\n        var output = new _this4(json.timestamp, json.lastHash, json.hash, [], json.nonce, json.difficulty);\n\n        if (json.data) {\n          json.data.forEach(function (t) {\n            output.data.push(Transaction.fromJson(t));\n          });\n        }\n\n        return output;\n      });\n    }\n  }]);\n\n  return Block;\n}();\n\nmodule.exports = Block;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Block.js"
      ],
      "names": [
        "LOG_TAG",
        "cryptoUtil",
        "require",
        "DIFFICULTY",
        "MINE_RATE",
        "ioc",
        "Transaction",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Block",
        "_timestamp",
        "_lastHash",
        "_hash",
        "_data",
        "_nonce",
        "_difficulty",
        "timestamp",
        "lastHash",
        "hash",
        "data",
        "nonce",
        "difficulty",
        "info",
        "toJsonString",
        "substring",
        "output",
        "length",
        "forEach",
        "t",
        "toJson",
        "push",
        "JSON",
        "stringify",
        "d",
        "arrayToJson",
        "lastBlock",
        "Date",
        "now",
        "adjustDifficulty",
        "repeat",
        "block",
        "currentTime",
        "json",
        "fromJson",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAG,KAAhB;;AAEA,IAAMC,UAAU,GAAGC,OAAO,CAAC,0BAAD,CAA1B;;eACiCA,OAAO,CAAC,oBAAD,C;IAAhCC,U,YAAAA,U;IAAWC,S,YAAAA,S;;AACnB,IAAMC,GAAG,GAAGH,OAAO,CAAC,4BAAD,CAAnB;;gBACwBA,OAAO,CAAC,cAAD,C;IAAvBI,W,aAAAA,W;;AAER,IAAMC,MAAM,GAAGF,GAAG,CAACG,aAAJ,CAAkBC,YAAlB,CAA+BT,OAA/B,CAAf;AACA,IAAMU,SAAS,GAAGL,GAAG,CAACM,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;IAOMM,K;;;;;wBACc;AAAE,aAAO,KAAKC,UAAZ;AAAyB;;;wBAC5B;AAAE,aAAO,KAAKC,SAAZ;AAAwB;;;wBAC9B;AAAE,aAAO,KAAKC,KAAZ;AAAoB;;;wBACtB;AAAE,aAAO,KAAKC,KAAZ;AAAoB;;;wBACrB;AAAE,aAAO,KAAKC,MAAZ;AAAqB;;;wBAClB;AAAE,aAAO,KAAKC,WAAZ;AAA0B;;;AAE7C,iBAAYC,SAAZ,EAAuBC,QAAvB,EAAiCC,IAAjC,EAAuCC,IAAvC,EAA6CC,KAA7C,EAAoDC,UAApD,EAA+D;AAAA;;AAC3D,SAAKX,UAAL,GAAkBM,SAAlB;AACA,SAAKL,SAAL,GAAiBM,QAAjB;AACA,SAAKL,KAAL,GAAaM,IAAb;AACA,SAAKL,KAAL,GAAaM,IAAb;AACA,SAAKL,MAAL,GAAcM,KAAd;AACA,SAAKL,WAAL,GAAmBM,UAAU,IAAItB,UAAjC;AAEAI,IAAAA,MAAM,CAACmB,IAAP,CAAY,oBAAoB,KAAKC,YAAL,EAAhC;AACH;;;;;AAqFD;;;+BAGW;AAAA;;AACP,aAAOjB,SAAS,OAAT,CAAc,YAAM;AACvB,0DACc,KAAI,CAACU,SADnB,uCAEc,KAAI,CAACC,QAAL,CAAcO,SAAd,CAAwB,CAAxB,EAA0B,EAA1B,CAFd,uCAGc,KAAI,CAACN,IAAL,CAAUM,SAAV,CAAoB,CAApB,EAAsB,EAAtB,CAHd,uCAIc,KAAI,CAACL,IAJnB,uCAKc,KAAI,CAACE,UALnB;AAMH,OAPM,CAAP;AAQH;AAED;;;;AAGA;;;;6BAAkB;AACd,UAAMI,MAAM,GAAG;AACXT,QAAAA,SAAS,EAAE,KAAKA,SADL;AAEXC,QAAAA,QAAQ,EAAE,KAAKA,QAFJ;AAGXC,QAAAA,IAAI,EAAE,KAAKA,IAHA;AAIXG,QAAAA,UAAU,EAAE,KAAKA,UAJN;AAKXD,QAAAA,KAAK,EAAE,KAAKA,KALD;AAMXD,QAAAA,IAAI,EAAE;AANK,OAAf;;AAWA,UAAI,KAAKA,IAAL,IAAa,KAAKA,IAAL,CAAUO,MAA3B,EAAmC;AAC/B,aAAKP,IAAL,CAAUQ,OAAV,CAAkB,UAAAC,CAAC,EAAI;AACnB,cAAIA,CAAC,CAACC,MAAN,EACIJ,MAAM,CAACN,IAAP,CAAYW,IAAZ,CAAiBF,CAAC,CAACC,MAAF,EAAjB;AACP,SAHD;AAIH;;AAED,aAAOJ,MAAP;AACH;AAED;;;;AAGA;;;;mCAA0B;AACtB,aAAOM,IAAI,CAACC,SAAL,CAAe,KAAKH,MAAL,EAAf,CAAP;AACH;AAED;;;;;;;;sBAjISI,C,EAAG;AAAE,WAAKpB,KAAL,GAAaoB,CAAb;AAAiB;AAE/B;;;;;;;8BAI2B;AAAA;;AACvB,aAAO3B,SAAS,OAAT,CAAc,YAAM;AACvB;AACA,eAAO,IAAI,MAAJ,CAAS,cAAT,EAAwB,MAAxB,EAA+B,YAA/B,EAA4C,EAA5C,EAA+C,CAA/C,EAAiDP,UAAjD,CAAP;AACH,OAHM,CAAP;AAIH;AAED;;;;;;;;;;;;;yBAUuBiB,S,EAAWC,Q,EAAUE,I,EAAMC,K,EAAOC,U,EAAW;AAChE,aAAOf,SAAS,OAAT,CAAc,YAAM;AACvB,eAAOT,UAAU,CAACqB,IAAX,CAAgB;AACnBF,UAAAA,SAAS,EAATA,SADmB;AAEnBC,UAAAA,QAAQ,EAARA,QAFmB;AAGnBE,UAAAA,IAAI,EAAEjB,WAAW,CAACgC,WAAZ,CAAwBf,IAAxB,CAHa;AAInBC,UAAAA,KAAK,EAALA,KAJmB;AAKnBC,UAAAA,UAAU,EAAVA;AALmB,SAAhB,CAAP;AAOH,OARM,CAAP;AASH;AAED;;;;;;;;;;8BAO2Bc,S,EAAWhB,I,EAAK;AAAA;;AACvC,aAAOb,SAAS,OAAT,CAAc,YAAM;AACvB,YAAIY,IAAJ;AACA,YAAIF,SAAS,GAAGoB,IAAI,CAACC,GAAL,EAAhB;AACA,YAAMpB,QAAQ,GAAGkB,SAAS,CAACjB,IAA3B;AAHuB,YAIjBG,UAJiB,GAIFc,SAJE,CAIjBd,UAJiB;AAKvB,YAAID,KAAK,GAAG,CAAZ;;AAEA,WAAG;AACCA,UAAAA,KAAK;AACLJ,UAAAA,SAAS,GAAGoB,IAAI,CAACC,GAAL,EAAZ;AACAhB,UAAAA,UAAU,GAAGZ,KAAK,CAAC6B,gBAAN,CAAuBH,SAAvB,EAAkCnB,SAAlC,CAAb;AACAE,UAAAA,IAAI,GAAGT,KAAK,CAACS,IAAN,CAAWF,SAAX,EAAsBC,QAAtB,EAAgCE,IAAhC,EAAsCC,KAAtC,EAA6CC,UAA7C,CAAP;AACH,SALD,QAKQH,IAAI,CAACM,SAAL,CAAe,CAAf,EAAiBH,UAAjB,MAAiC,IAAIkB,MAAJ,CAAWlB,UAAX,CALzC;;AAOAlB,QAAAA,MAAM,CAACmB,IAAP,iBAAqBJ,IAArB;AACA,eAAO,IAAI,MAAJ,CAASF,SAAT,EAAoBC,QAApB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,KAA1C,EAAiDC,UAAjD,CAAP;AACH,OAhBM,CAAP;AAiBH;AAED;;;;;;;;8BAK4BmB,K,EAAM;AAC9B,aAAOlC,SAAS,OAAT,CAAc,YAAM;AACvB;AADuB,YAEfU,SAFe,GAEkCwB,KAFlC,CAEfxB,SAFe;AAAA,YAEJC,QAFI,GAEkCuB,KAFlC,CAEJvB,QAFI;AAAA,YAEME,IAFN,GAEkCqB,KAFlC,CAEMrB,IAFN;AAAA,YAEYC,KAFZ,GAEkCoB,KAFlC,CAEYpB,KAFZ;AAAA,YAEmBC,UAFnB,GAEkCmB,KAFlC,CAEmBnB,UAFnB;AAGvB,eAAOZ,KAAK,CAACS,IAAN,CAAWF,SAAX,EAAsBC,QAAtB,EAAgCE,IAAhC,EAAsCC,KAAtC,EAA6CC,UAA7C,CAAP;AACH,OAJM,CAAP;AAKH;;;qCAE+Bc,S,EAAWM,W,EAAY;AACnD,aAAOnC,SAAS,OAAT,CAAc,YAAM;AAAA,YACjBe,UADiB,GACFc,SADE,CACjBd,UADiB;AAEvBA,QAAAA,UAAU,GAAGc,SAAS,CAACnB,SAAV,GAAsBhB,SAAtB,GAAkCyC,WAAlC,GAAgDpB,UAAU,GAAG,CAA7D,GAAiEA,UAAU,GAAG,CAA3F;AACA,eAAOA,UAAP;AACH,OAJM,CAAP;AAKH;;;6BAqDyBqB,I,EAAM;AAAA;;AAC5B,aAAOpC,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMmB,MAAM,GAAG,IAAI,MAAJ,CAASiB,IAAI,CAAC1B,SAAd,EAAyB0B,IAAI,CAACzB,QAA9B,EAAwCyB,IAAI,CAACxB,IAA7C,EAAmD,EAAnD,EAAuDwB,IAAI,CAACtB,KAA5D,EAAmEsB,IAAI,CAACrB,UAAxE,CAAf;;AAEA,YAAIqB,IAAI,CAACvB,IAAT,EAAe;AACXuB,UAAAA,IAAI,CAACvB,IAAL,CAAUQ,OAAV,CAAkB,UAAAC,CAAC,EAAI;AACnBH,YAAAA,MAAM,CAACN,IAAP,CAAYW,IAAZ,CAAiB5B,WAAW,CAACyC,QAAZ,CAAqBf,CAArB,CAAjB;AACH,WAFD;AAGH;;AAED,eAAOH,MAAP;AACH,OAVM,CAAP;AAWH;;;;;;AAILmB,MAAM,CAACC,OAAP,GAAiBpC,KAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'BLK';\n\nconst cryptoUtil = require('../../../util/cryptoUtil');\nconst { DIFFICULTY,MINE_RATE } = require('../../../config.js');\nconst ioc = require('../../../util/iocContainer');\nconst { Transaction } = require('../../wallet');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: Block\n * ---------------\n * implementation of a Blockchain block. \n *\n * author: John R. Kosinski\n */\nclass Block{\n    get timestamp() { return this._timestamp; }\n    get lastHash() { return this._lastHash; }\n    get hash() { return this._hash; }\n    get data() { return this._data; }\n    get nonce() { return this._nonce; }\n    get difficulty() { return this._difficulty; }\n\n    constructor(timestamp, lastHash, hash, data, nonce, difficulty){\n        this._timestamp = timestamp;\n        this._lastHash = lastHash;\n        this._hash = hash;\n        this._data = data;\n        this._nonce = nonce;\n        this._difficulty = difficulty || DIFFICULTY;\n\n        logger.info('block created: ' + this.toJsonString());\n    }\n\n    set data(d) { this._data = d; }\n\n    /**\n     * creates the special genesis block\n     * @returns {Block}\n     */\n    static /*Block*/ genesis() {\n        return exception.try(() => {\n            //TODO: use 0 instead of 'genesis time' \n            return new this('Genesis time','----','f1574-h4gh',[],0,DIFFICULTY);\n        });\n    }\n\n    /**\n     * creates & returns a hash of the given data\n     * \n     * @param {int} timestamp block timestamp\n     * @param {string} lastHash hash of intended parent block\n     * @param {Transaction[]} data the data to include in the block\n     * @param {int} nonce created during mining\n     * @param {int} difficulty block mining difficulty\n     * @returns {string}\n     */\n    static /*string*/ hash(timestamp, lastHash, data, nonce, difficulty){\n        return exception.try(() => {\n            return cryptoUtil.hash({\n                timestamp, \n                lastHash, \n                data: Transaction.arrayToJson(data), \n                nonce, \n                difficulty\n            });\n        });\n    }\n\n    /**\n     * mines a new block to be added to the chain, and returns it (without adding it to\n     * the blockchain)\n     *\n     * @param {Block} lastBlock the parent block (should be most recent block in chain)\n     * @param {Transaction[]} data transactions to be included in the block\n     */\n    static /*Block*/ mineBlock(lastBlock, data){\n        return exception.try(() => {\n            let hash;\n            let timestamp = Date.now();\n            const lastHash = lastBlock.hash;\n            let { difficulty } = lastBlock;\n            let nonce = 0;  \n\n            do {\n                nonce++;\n                timestamp = Date.now();\n                difficulty = Block.adjustDifficulty(lastBlock, timestamp);\n                hash = Block.hash(timestamp, lastHash, data, nonce, difficulty);\n            } while(hash.substring(0,difficulty) !== '0'.repeat(difficulty));\n\n            logger.info(`block ${hash} mined`);\n            return new this(timestamp, lastHash, hash, data, nonce, difficulty);\n        });\n    }\n\n    /**\n     * creates & returns a hash of the given block's essential data\n     * @returns string\n     * @param {Block} block\n     */\n    static /*string*/ blockHash(block){\n        return exception.try(() => {\n            //destructuring\n            const { timestamp, lastHash, data, nonce, difficulty } = block;\n            return Block.hash(timestamp, lastHash, data, nonce, difficulty);\n        });\n    }\n\n    static /*int*/ adjustDifficulty(lastBlock, currentTime){\n        return exception.try(() => {\n            let { difficulty } = lastBlock;\n            difficulty = lastBlock.timestamp + MINE_RATE > currentTime ? difficulty + 1 : difficulty - 1;\n            return difficulty;\n        });\n    }\n\n    /**\n     * returns a string representation\n     */\n    toString() {\n        return exception.try(() => {\n            return `Block -\n            Timestamp : ${this.timestamp}\n            Last Hash : ${this.lastHash.substring(0,10)}\n            Hash      : ${this.hash.substring(0,10)}\n            Data      : ${this.data}\n            Difficulty: ${this.difficulty}`;\n        });\n    }\n\n    /**\n     * returns a json representation\n     */\n    /*json*/ toJson() {\n        const output = {\n            timestamp: this.timestamp,\n            lastHash: this.lastHash,\n            hash: this.hash,\n            difficulty: this.difficulty,\n            nonce: this.nonce,\n            data: [\n\n            ]\n        };\n\n        if (this.data && this.data.length) {\n            this.data.forEach(t => {\n                if (t.toJson) \n                    output.data.push(t.toJson());\n            });\n        }\n\n        return output;\n    }\n\n    /**\n     * returns a json representation converted to string\n     */\n    /*string*/ toJsonString() {\n        return JSON.stringify(this.toJson());\n    }\n\n    /**\n     * deserializes a Block instance from JSON data\n     * @returns {Block}\n     * @param {json} json\n     */\n    static /*Block*/ fromJson(json) {\n        return exception.try(() => {\n            const output = new this(json.timestamp, json.lastHash, json.hash, [], json.nonce, json.difficulty);\n\n            if (json.data) {\n                json.data.forEach(t => {\n                    output.data.push(Transaction.fromJson(t));\n                });\n            }\n\n            return output;\n        });\n    }\n}\n\n\nmodule.exports = Block;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567888638956
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain/classes/Blockchain.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain/classes/Blockchain.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain/classes/Blockchain.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain/classes/Blockchain.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain/classes",
        "sourceFileName": "Blockchain.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'BLKCH';\n\nvar Block = require('./Block');\n\nvar ioc = require('../../../util/iocContainer');\n\nvar EventEmitter = require('events');\n\nvar R = require('ramda');\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: Blockchain\n * --------------------\n * container for all blocks. supports these events: \n * - update\n * - replace \n *\n * author: John R. Kosinski\n */\n\nvar Blockchain =\n/*#__PURE__*/\nfunction () {\n  _createClass(Blockchain, [{\n    key: \"chain\",\n    get: function get() {\n      return this._chain;\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this._chain.length;\n    }\n    /**\n     * constructor \n     */\n\n  }]);\n\n  function Blockchain() {\n    _classCallCheck(this, Blockchain);\n\n    this._emitter = new EventEmitter();\n    this._chain = [Block.genesis()];\n  }\n  /**\n   * returns a list of all transactions, in all blocks, sorted first by block number \n   * and then by timestamp. \n   */\n\n  /*Transaction*/\n\n\n  _createClass(Blockchain, [{\n    key: \"allTransactions\",\n    value: function allTransactions() {\n      return extractTransactionsFromBlocks(this.chain);\n    }\n    /**\n     * searches the blockchain to see if a transaction with the same id exists.\n     * @param {string} id id of the transaction in question\n     * @returns {bool} true if a transaction with the same id exists\n     */\n\n    /*bool*/\n\n  }, {\n    key: \"containsTransaction\",\n    value: function containsTransaction(id) {\n      return this.findTransaction(id);\n    }\n    /**\n     * the opposite of containsTransaction(id). this one will return the block index \n     * (1-based) of the block that contains the specified transaction.  \n     * @param {string} id \n     * @returns {int} the 1-based block index of the found transaction \n     * (return value of 0 indicates transaction is not found)\n     */\n\n    /*int*/\n\n  }, {\n    key: \"findTransaction\",\n    value: function findTransaction(id) {\n      var _this = this;\n\n      return exception[\"try\"](function () {\n        var allTransactions = _this.allTransactions().reverse();\n\n        for (var n = 0; n < allTransactions.length; n++) {\n          var t = allTransactions[n];\n\n          if (id === t.id) {\n            return n + 1;\n          }\n        }\n\n        return 0;\n      });\n    }\n    /**\n     * mines a new block, includes the given transactions, and appends it to the chain. \n     * @param {Transaction[]} data transactions to add to the new block\n     * @returns {Block}\n     */\n\n    /*Block*/\n\n  }, {\n    key: \"addBlock\",\n    value: function addBlock(data) {\n      var _this2 = this;\n\n      return exception[\"try\"](function () {\n        var block = Block.mineBlock(_this2.chain[_this2.chain.length - 1], data); //check here to make sure that duplicate transactions don't exist\n\n        if (data) {\n          for (var t in data) {\n            if (_this2.containsTransaction(t.id)) {\n              //reject block\n              logger.warn(\"block is being rejected, because transaction \".concat(t.id, \" is a duplicate\"));\n              return null;\n            }\n          }\n\n          ;\n        }\n\n        _this2.chain.push(block);\n\n        logger.info(\"block \".concat(block.hash, \" added to chain. new chain height: \").concat(_this2.height));\n\n        _this2._emitter.emit('update');\n\n        return block;\n      });\n    }\n    /**\n     * validates each block in the chain. \n     * @param {Blockchain} chain \n     * @returns {bool} false if chain is invalid \n     */\n\n    /*bool*/\n\n  }, {\n    key: \"isValidChain\",\n    value: function isValidChain(chain) {\n      return exception[\"try\"](function () {\n        if (JSON.stringify(chain[0]) !== JSON.stringify(Block.genesis())) {\n          logger.warn('invalid chain: invalid genesis block');\n          return false;\n        } //if the last block has a transaction that exists elsewhere in the chain, then \n        // the chain is invalid \n\n\n        if (chain.length > 1) {\n          //get all transactions from ALL BUT LAST block\n          var allTrans = extractTransactionsFromBlocks(R.init(chain)); //examine all transactions in last block for duplicity\n\n          var lastBlock = chain[chain.length - 1];\n\n          for (var i = 0; i < lastBlock.data.length; i++) {\n            var t = lastBlock.data[i];\n\n            if (R.find(R.propEq('id', t.id))(allTrans)) {\n              logger.warn(\"invalid chain: transaction \".concat(t.id, \" is duplicated\"));\n              return false;\n            }\n          }\n        } //if the chain has any invalid blocks, then the chain is invalid\n        //TODO: redo with ramda\n\n\n        for (var _i = 1; _i < chain.length; _i++) {\n          var block = chain[_i];\n          var _lastBlock = chain[_i - 1];\n\n          if (block.lastHash !== _lastBlock.hash || block.hash !== Block.blockHash(block)) {\n            logger.warn(\"invalid chain: invalid block \".concat(block.hash));\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n    /**\n     * replace the entire existing chain with the given one \n     * @param {BlockChain} newChain \n     */\n\n  }, {\n    key: \"replaceChain\",\n    value: function replaceChain(newChain) {\n      var _this3 = this;\n\n      exception[\"try\"](function () {\n        if (newChain.length <= _this3._chain.length) {\n          logger.info(\"received chain is not longer than the current chain\");\n          return;\n        } else if (!_this3.isValidChain(newChain)) {\n          logger.info(\"received chain is invalid\");\n          return;\n        }\n\n        logger.info(\"replacing the current chain with new chain\");\n        _this3._chain = newChain;\n\n        _this3._emitter.emit('update');\n      });\n    }\n    /**\n     * subscribe to an event \n     * @param {string} eventName \n     * @param {fn} callback \n     */\n\n  }, {\n    key: \"on\",\n    value: function on(eventName, callback) {\n      if (eventName && callback) {\n        this._emitter.on(eventName, callback);\n      }\n    }\n    /**\n     * returns a json representation\n     */\n\n    /*json*/\n\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      var output = {\n        chain: []\n      };\n\n      this._chain.forEach(function (b) {\n        output.chain.push(b.toJson());\n      });\n\n      return output;\n    }\n    /**\n     * deserializes a Blockchain instance from JSON data\n     * @returns {Blockchain}\n     * @param {json} json\n     */\n\n  }], [{\n    key: \"fromJson\",\n    value: function fromJson(json) {\n      var _this4 = this;\n\n      return exception[\"try\"](function () {\n        var output = new _this4();\n        output._chain = [];\n\n        if (json && json.chain && json.chain.length) {\n          json.chain.forEach(function (b) {\n            output._chain.push(Block.fromJson(b));\n          });\n        }\n\n        return output;\n      });\n    }\n  }]);\n\n  return Blockchain;\n}();\n\nfunction extractTransactionsFromBlocks(blocks) {\n  return exception[\"try\"](function () {\n    var output = [];\n    blocks.forEach(function (block) {\n      output.push.apply(output, _toConsumableArray(block.data.sort(function (a, b) {\n        return a.input.timestamp < b.input.timestamp;\n      })));\n    });\n    return output;\n  });\n}\n\nmodule.exports = Blockchain;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Blockchain.js"
      ],
      "names": [
        "LOG_TAG",
        "Block",
        "require",
        "ioc",
        "EventEmitter",
        "R",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "Blockchain",
        "_chain",
        "length",
        "_emitter",
        "genesis",
        "extractTransactionsFromBlocks",
        "chain",
        "id",
        "findTransaction",
        "allTransactions",
        "reverse",
        "n",
        "t",
        "data",
        "block",
        "mineBlock",
        "containsTransaction",
        "warn",
        "push",
        "info",
        "hash",
        "height",
        "emit",
        "JSON",
        "stringify",
        "allTrans",
        "init",
        "lastBlock",
        "i",
        "find",
        "propEq",
        "lastHash",
        "blockHash",
        "newChain",
        "isValidChain",
        "eventName",
        "callback",
        "on",
        "output",
        "forEach",
        "b",
        "toJson",
        "json",
        "fromJson",
        "blocks",
        "sort",
        "a",
        "input",
        "timestamp",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,OAAhB;;AAEA,IAAMC,KAAK,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,4BAAD,CAAnB;;AACA,IAAME,YAAY,GAAGF,OAAO,CAAC,QAAD,CAA5B;;AACA,IAAMG,CAAC,GAAGH,OAAO,CAAC,OAAD,CAAjB;;AAEA,IAAMI,MAAM,GAAGH,GAAG,CAACI,aAAJ,CAAkBC,YAAlB,CAA+BR,OAA/B,CAAf;AACA,IAAMS,SAAS,GAAGN,GAAG,CAACO,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;;;IASMM,U;;;;;wBACU;AAAE,aAAO,KAAKC,MAAZ;AAAqB;;;wBACtB;AAAE,aAAO,KAAKA,MAAL,CAAYC,MAAnB;AAA4B;AAE3C;;;;;;AAGA,wBAAa;AAAA;;AACT,SAAKC,QAAL,GAAgB,IAAIX,YAAJ,EAAhB;AACA,SAAKS,MAAL,GAAc,CAACZ,KAAK,CAACe,OAAN,EAAD,CAAd;AACH;AAED;;;;;AAIA;;;;;sCAAkC;AAC9B,aAAOC,6BAA6B,CAAC,KAAKC,KAAN,CAApC;AACH;AAED;;;;;;AAKA;;;;wCAA6BC,E,EAAI;AAC7B,aAAO,KAAKC,eAAL,CAAqBD,EAArB,CAAP;AACH;AAED;;;;;;;;AAOA;;;;oCAAwBA,E,EAAI;AAAA;;AACxB,aAAOV,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMY,eAAe,GAAG,KAAI,CAACA,eAAL,GAAuBC,OAAvB,EAAxB;;AACA,aAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACF,eAAe,CAACP,MAAhC,EAAwCS,CAAC,EAAzC,EAA6C;AACzC,cAAMC,CAAC,GAAGH,eAAe,CAACE,CAAD,CAAzB;;AACA,cAAIJ,EAAE,KAAKK,CAAC,CAACL,EAAb,EAAiB;AACb,mBAAQI,CAAC,GAAC,CAAV;AACH;AACJ;;AAED,eAAO,CAAP;AACH,OAVM,CAAP;AAWH;AAED;;;;;;AAKA;;;;6BAAmBE,I,EAAK;AAAA;;AACpB,aAAOhB,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMiB,KAAK,GAAGzB,KAAK,CAAC0B,SAAN,CAAgB,MAAI,CAACT,KAAL,CAAW,MAAI,CAACA,KAAL,CAAWJ,MAAX,GAAkB,CAA7B,CAAhB,EAAiDW,IAAjD,CAAd,CADuB,CAGvB;;AACA,YAAIA,IAAJ,EAAU;AACN,eAAK,IAAID,CAAT,IAAcC,IAAd,EAAoB;AAChB,gBAAI,MAAI,CAACG,mBAAL,CAAyBJ,CAAC,CAACL,EAA3B,CAAJ,EAAoC;AAChC;AACAb,cAAAA,MAAM,CAACuB,IAAP,wDAA4DL,CAAC,CAACL,EAA9D;AACA,qBAAO,IAAP;AACH;AACJ;;AAAA;AACJ;;AAED,QAAA,MAAI,CAACD,KAAL,CAAWY,IAAX,CAAgBJ,KAAhB;;AACApB,QAAAA,MAAM,CAACyB,IAAP,iBAAqBL,KAAK,CAACM,IAA3B,gDAAqE,MAAI,CAACC,MAA1E;;AAEA,QAAA,MAAI,CAAClB,QAAL,CAAcmB,IAAd,CAAmB,QAAnB;;AACA,eAAOR,KAAP;AACH,OAnBM,CAAP;AAoBH;AAED;;;;;;AAKA;;;;iCAAsBR,K,EAAO;AACzB,aAAOT,SAAS,OAAT,CAAc,YAAM;AACvB,YAAI0B,IAAI,CAACC,SAAL,CAAelB,KAAK,CAAC,CAAD,CAApB,MAA6BiB,IAAI,CAACC,SAAL,CAAenC,KAAK,CAACe,OAAN,EAAf,CAAjC,EAAkE;AAC9DV,UAAAA,MAAM,CAACuB,IAAP,CAAY,sCAAZ;AACA,iBAAO,KAAP;AACH,SAJsB,CAMvB;AACA;;;AACA,YAAIX,KAAK,CAACJ,MAAN,GAAe,CAAnB,EAAsB;AAClB;AACA,cAAMuB,QAAQ,GAAGpB,6BAA6B,CAACZ,CAAC,CAACiC,IAAF,CAAOpB,KAAP,CAAD,CAA9C,CAFkB,CAIlB;;AACA,cAAMqB,SAAS,GAAGrB,KAAK,CAACA,KAAK,CAACJ,MAAN,GAAa,CAAd,CAAvB;;AACA,eAAI,IAAI0B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACD,SAAS,CAACd,IAAV,CAAeX,MAA9B,EAAsC0B,CAAC,EAAvC,EAA2C;AACvC,gBAAMhB,CAAC,GAAGe,SAAS,CAACd,IAAV,CAAee,CAAf,CAAV;;AACA,gBAAInC,CAAC,CAACoC,IAAF,CAAOpC,CAAC,CAACqC,MAAF,CAAS,IAAT,EAAelB,CAAC,CAACL,EAAjB,CAAP,EAA6BkB,QAA7B,CAAJ,EAA4C;AACxC/B,cAAAA,MAAM,CAACuB,IAAP,sCAA0CL,CAAC,CAACL,EAA5C;AACA,qBAAO,KAAP;AACH;AACJ;AACJ,SArBsB,CAuBvB;AACA;;;AACA,aAAK,IAAIqB,EAAC,GAAC,CAAX,EAAcA,EAAC,GAACtB,KAAK,CAACJ,MAAtB,EAA8B0B,EAAC,EAA/B,EAAmC;AAC/B,cAAMd,KAAK,GAAGR,KAAK,CAACsB,EAAD,CAAnB;AACA,cAAMD,UAAS,GAAGrB,KAAK,CAACsB,EAAC,GAAC,CAAH,CAAvB;;AAEA,cAAKd,KAAK,CAACiB,QAAN,KAAmBJ,UAAS,CAACP,IAA9B,IAAwCN,KAAK,CAACM,IAAN,KAAe/B,KAAK,CAAC2C,SAAN,CAAgBlB,KAAhB,CAA3D,EAAoF;AAChFpB,YAAAA,MAAM,CAACuB,IAAP,wCAA4CH,KAAK,CAACM,IAAlD;AACA,mBAAO,KAAP;AACH;AACJ;;AAED,eAAO,IAAP;AACH,OApCM,CAAP;AAqCH;AAED;;;;;;;iCAIaa,Q,EAAS;AAAA;;AAClBpC,MAAAA,SAAS,OAAT,CAAc,YAAM;AAChB,YAAIoC,QAAQ,CAAC/B,MAAT,IAAmB,MAAI,CAACD,MAAL,CAAYC,MAAnC,EAA0C;AACtCR,UAAAA,MAAM,CAACyB,IAAP,CAAY,qDAAZ;AACA;AACH,SAHD,MAIK,IAAI,CAAC,MAAI,CAACe,YAAL,CAAkBD,QAAlB,CAAL,EAAiC;AAClCvC,UAAAA,MAAM,CAACyB,IAAP,CAAY,2BAAZ;AACA;AACH;;AAEDzB,QAAAA,MAAM,CAACyB,IAAP,CAAY,4CAAZ;AACA,QAAA,MAAI,CAAClB,MAAL,GAAcgC,QAAd;;AAEA,QAAA,MAAI,CAAC9B,QAAL,CAAcmB,IAAd,CAAmB,QAAnB;AACH,OAdD;AAeH;AAED;;;;;;;;uBAKGa,S,EAAWC,Q,EAAU;AACpB,UAAID,SAAS,IAAIC,QAAjB,EAA2B;AACvB,aAAKjC,QAAL,CAAckC,EAAd,CAAiBF,SAAjB,EAA4BC,QAA5B;AACH;AACJ;AAED;;;;AAGA;;;;6BAAkB;AACd,UAAME,MAAM,GAAG;AACXhC,QAAAA,KAAK,EAAE;AADI,OAAf;;AAIA,WAAKL,MAAL,CAAYsC,OAAZ,CAAoB,UAAAC,CAAC,EAAI;AACrBF,QAAAA,MAAM,CAAChC,KAAP,CAAaY,IAAb,CAAkBsB,CAAC,CAACC,MAAF,EAAlB;AACH,OAFD;;AAIA,aAAOH,MAAP;AACH;AAED;;;;;;;;6BAK+BI,I,EAAM;AAAA;;AACjC,aAAO7C,SAAS,OAAT,CAAc,YAAM;AACvB,YAAMyC,MAAM,GAAG,IAAI,MAAJ,EAAf;AAEAA,QAAAA,MAAM,CAACrC,MAAP,GAAgB,EAAhB;;AACA,YAAIyC,IAAI,IAAIA,IAAI,CAACpC,KAAb,IAAsBoC,IAAI,CAACpC,KAAL,CAAWJ,MAArC,EAA6C;AACzCwC,UAAAA,IAAI,CAACpC,KAAL,CAAWiC,OAAX,CAAmB,UAAAC,CAAC,EAAI;AACpBF,YAAAA,MAAM,CAACrC,MAAP,CAAciB,IAAd,CAAmB7B,KAAK,CAACsD,QAAN,CAAeH,CAAf,CAAnB;AACH,WAFD;AAGH;;AAED,eAAOF,MAAP;AACH,OAXM,CAAP;AAYH;;;;;;AAIL,SAASjC,6BAAT,CAAuCuC,MAAvC,EAA+C;AAC3C,SAAO/C,SAAS,OAAT,CAAc,YAAM;AACvB,QAAMyC,MAAM,GAAG,EAAf;AACAM,IAAAA,MAAM,CAACL,OAAP,CAAe,UAAAzB,KAAK,EAAI;AACpBwB,MAAAA,MAAM,CAACpB,IAAP,OAAAoB,MAAM,qBAASxB,KAAK,CAACD,IAAN,CAAWgC,IAAX,CAAgB,UAACC,CAAD,EAAGN,CAAH;AAAA,eAAUM,CAAC,CAACC,KAAF,CAAQC,SAAR,GAAoBR,CAAC,CAACO,KAAF,CAAQC,SAAtC;AAAA,OAAhB,CAAT,EAAN;AACH,KAFD;AAIA,WAAOV,MAAP;AACH,GAPM,CAAP;AAQH;;AAEDW,MAAM,CAACC,OAAP,GAAiBlD,UAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/blockchain/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'BLKCH';\n\nconst Block = require('./Block');\nconst ioc = require('../../../util/iocContainer');\nconst EventEmitter = require('events');\nconst R = require('ramda');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: Blockchain\n * --------------------\n * container for all blocks. supports these events: \n * - update\n * - replace \n *\n * author: John R. Kosinski\n */\nclass Blockchain{\n    get chain() { return this._chain; }\n    get height() { return this._chain.length; }\n\n    /**\n     * constructor \n     */\n    constructor(){\n        this._emitter = new EventEmitter();\n        this._chain = [Block.genesis()];\n    }\n    \n    /**\n     * returns a list of all transactions, in all blocks, sorted first by block number \n     * and then by timestamp. \n     */\n    /*Transaction*/ allTransactions() {\n        return extractTransactionsFromBlocks(this.chain);\n    }\n    \n    /**\n     * searches the blockchain to see if a transaction with the same id exists.\n     * @param {string} id id of the transaction in question\n     * @returns {bool} true if a transaction with the same id exists\n     */\n    /*bool*/ containsTransaction(id) {\n        return this.findTransaction(id);\n    }\n    \n    /**\n     * the opposite of containsTransaction(id). this one will return the block index \n     * (1-based) of the block that contains the specified transaction.  \n     * @param {string} id \n     * @returns {int} the 1-based block index of the found transaction \n     * (return value of 0 indicates transaction is not found)\n     */\n    /*int*/ findTransaction(id) {\n        return exception.try(() => {\n            const allTransactions = this.allTransactions().reverse(); \n            for (let n=0; n<allTransactions.length; n++) {\n                const t = allTransactions[n];\n                if (id === t.id) {\n                    return (n+1);\n                }\n            }\n            \n            return 0;\n        });\n    }\n\n    /**\n     * mines a new block, includes the given transactions, and appends it to the chain. \n     * @param {Transaction[]} data transactions to add to the new block\n     * @returns {Block}\n     */\n    /*Block*/ addBlock(data){\n        return exception.try(() => {\n            const block = Block.mineBlock(this.chain[this.chain.length-1], data);\n            \n            //check here to make sure that duplicate transactions don't exist\n            if (data) {\n                for (let t in data) {\n                    if (this.containsTransaction(t.id)) {\n                        //reject block\n                        logger.warn(`block is being rejected, because transaction ${t.id} is a duplicate`);\n                        return null;\n                    } \n                };\n            }\n            \n            this.chain.push(block);\n            logger.info(`block ${block.hash} added to chain. new chain height: ${this.height}`);\n\n            this._emitter.emit('update');\n            return block;\n        });\n    }\n\n    /**\n     * validates each block in the chain. \n     * @param {Blockchain} chain \n     * @returns {bool} false if chain is invalid \n     */\n    /*bool*/ isValidChain(chain) {\n        return exception.try(() => {\n            if (JSON.stringify(chain[0]) !== JSON.stringify(Block.genesis())) {\n                logger.warn('invalid chain: invalid genesis block');\n                return false;\n            }\n            \n            //if the last block has a transaction that exists elsewhere in the chain, then \n            // the chain is invalid \n            if (chain.length > 1) {\n                //get all transactions from ALL BUT LAST block\n                const allTrans = extractTransactionsFromBlocks(R.init(chain)); \n                \n                //examine all transactions in last block for duplicity\n                const lastBlock = chain[chain.length-1]; \n                for(let i=0; i<lastBlock.data.length; i++) {\n                    const t = lastBlock.data[i]; \n                    if (R.find(R.propEq('id', t.id))(allTrans)) {\n                        logger.warn(`invalid chain: transaction ${t.id} is duplicated`);\n                        return false;\n                    }\n                }\n            }\n\n            //if the chain has any invalid blocks, then the chain is invalid\n            //TODO: redo with ramda\n            for (let i=1; i<chain.length; i++) {\n                const block = chain[i];\n                const lastBlock = chain[i-1];\n    \n                if ((block.lastHash !== lastBlock.hash) || (block.hash !== Block.blockHash(block))) {\n                    logger.warn(`invalid chain: invalid block ${block.hash}`);\n                    return false;\n                }\n            }\n\n            return true;\n        });\n    }\n\n    /**\n     * replace the entire existing chain with the given one \n     * @param {BlockChain} newChain \n     */\n    replaceChain(newChain){\n        exception.try(() => {\n            if (newChain.length <= this._chain.length){\n                logger.info(\"received chain is not longer than the current chain\");\n                return;\n            }\n            else if (!this.isValidChain(newChain)){\n                logger.info(\"received chain is invalid\");\n                return;\n            }\n\n            logger.info(\"replacing the current chain with new chain\");\n            this._chain = newChain;\n\n            this._emitter.emit('update');\n        });\n    }\n\n    /**\n     * subscribe to an event \n     * @param {string} eventName \n     * @param {fn} callback \n     */\n    on(eventName, callback) {\n        if (eventName && callback) {\n            this._emitter.on(eventName, callback);\n        }\n    }\n\n    /**\n     * returns a json representation\n     */\n    /*json*/ toJson() {\n        const output = {\n            chain: []\n        };\n\n        this._chain.forEach(b => {\n            output.chain.push(b.toJson());\n        });\n\n        return output;\n    }\n\n    /**\n     * deserializes a Blockchain instance from JSON data\n     * @returns {Blockchain}\n     * @param {json} json\n     */\n    static /*Blockchain*/ fromJson(json) {\n        return exception.try(() => {\n            const output = new this();\n\n            output._chain = [];\n            if (json && json.chain && json.chain.length) {\n                json.chain.forEach(b => {\n                    output._chain.push(Block.fromJson(b));\n                });\n            }\n\n            return output;\n        });\n    }\n}\n\n\nfunction extractTransactionsFromBlocks(blocks) {    \n    return exception.try(() => {\n        const output = [];\n        blocks.forEach(block => {\n            output.push(...block.data.sort((a,b) => (a.input.timestamp < b.input.timestamp))); \n        });\n        \n        return output; \n    });\n}\n\nmodule.exports = Blockchain;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567888638956
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/HttpServer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/HttpServer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/HttpServer.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/HttpServer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src",
        "sourceFileName": "HttpServer.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LOG_TAG = 'HTTP';\n\nvar ioc = require('./util/iocContainer');\n\nvar cors = require('cors');\n\nvar express = require('express');\n\nvar _require = require('./util/jsonUtil'),\n    convertJson = _require.convertJson;\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\nvar running = false;\n/**\n * minacoin: HttpServer\n * --------------------\n * encapsulates the main components of the server-side interface, such as the \n * web server and the p2p server. \n *\n * author: John R. Kosinski\n */\n\nvar HttpServer =\n/*#__PURE__*/\nfunction () {\n  /**\n   * constructor\n   * @param {Blockchain} blockchain\n   * @param {Wallet} wallet\n   * @param {IP2PServer} p2pServer\n   * @param {TransactionPool} txPool\n   * @param {Miner} miner\n   */\n  function HttpServer(httpPort, blockchain, wallet, p2pServer, txPool, miner) {\n    _classCallCheck(this, HttpServer);\n\n    this.port = httpPort;\n    this.blockchain = blockchain;\n    this.wallet = wallet;\n    this.p2pServer = p2pServer;\n    this.txPool = txPool;\n    this.miner = miner;\n  }\n  /**\n   * starts the server running\n   */\n\n\n  _createClass(HttpServer, [{\n    key: \"start\",\n    value: function start() {\n      var _this = this;\n\n      exception[\"try\"](function () {\n        if (!running) {\n          logger.info('starting p2p server...');\n\n          _this.p2pServer.listen();\n\n          var app = express();\n          var port = _this.httpPort;\n          app.use(express.json());\n          app.use(cors({\n            origin: 'http://localhost:3000'\n          }));\n          app.get('/transactions', function (req, res) {\n            exception[\"try\"](function () {\n              logger.info('GET /transactions');\n              res.json(convertJson(_this.txPool.transactions));\n            });\n          });\n          app.get('/public', function (req, res) {\n            exception[\"try\"](function () {\n              logger.info('GET /public');\n\n              _this.wallet.updateBalance(_this.blockchain);\n\n              res.json({\n                address: _this.wallet.publicKey,\n                balance: _this.wallet.balance,\n                chainSize: _this.blockchain.height,\n                peers: _this.p2pServer.peerList(),\n                transactionPool: {\n                  count: _this.txPool.txCount,\n                  pending: _this.txPool.pendingTransactions(_this.wallet.publicKey)\n                }\n              });\n            });\n          });\n          app.get('/blocks', function (req, res) {\n            exception[\"try\"](function () {\n              logger.info('GET /blocks');\n              res.json(_this.blockchain.toJson());\n            });\n          }); //pass in: recipient, amount\n\n          app.post('/transact', function (req, res) {\n            exception[\"try\"](function () {\n              logger.info('POST /transact');\n              var _req$body = req.body,\n                  recipient = _req$body.recipient,\n                  amount = _req$body.amount;\n\n              var transaction = _this.wallet.createTransaction(recipient, amount, _this.blockchain, _this.txPool);\n\n              _this.p2pServer.broadcastTransaction(transaction);\n\n              res.redirect('/transactions');\n            });\n          });\n          app.post('/mine-transactions', function (req, res) {\n            exception[\"try\"](function () {\n              logger.info('POST /mine-transactions');\n\n              var block = _this.miner.mine();\n\n              logger.info(\"new block added: \".concat(block.toJsonString()));\n              res.redirect('/blocks');\n            });\n          });\n          logger.info('starting web server...');\n          app.listen(port, function () {\n            logger.info(\"app running on port \".concat(port));\n          });\n          running = true;\n        }\n      });\n    }\n  }]);\n\n  return HttpServer;\n}();\n\nmodule.exports = {\n  HttpServer: HttpServer\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkh0dHBTZXJ2ZXIuanMiXSwibmFtZXMiOlsiTE9HX1RBRyIsImlvYyIsInJlcXVpcmUiLCJjb3JzIiwiZXhwcmVzcyIsImNvbnZlcnRKc29uIiwibG9nZ2VyIiwibG9nZ2VyRmFjdG9yeSIsImNyZWF0ZUxvZ2dlciIsImV4Y2VwdGlvbiIsImVoRmFjdG9yeSIsImNyZWF0ZUhhbmRsZXIiLCJydW5uaW5nIiwiSHR0cFNlcnZlciIsImh0dHBQb3J0IiwiYmxvY2tjaGFpbiIsIndhbGxldCIsInAycFNlcnZlciIsInR4UG9vbCIsIm1pbmVyIiwicG9ydCIsImluZm8iLCJsaXN0ZW4iLCJhcHAiLCJ1c2UiLCJqc29uIiwib3JpZ2luIiwiZ2V0IiwicmVxIiwicmVzIiwidHJhbnNhY3Rpb25zIiwidXBkYXRlQmFsYW5jZSIsImFkZHJlc3MiLCJwdWJsaWNLZXkiLCJiYWxhbmNlIiwiY2hhaW5TaXplIiwiaGVpZ2h0IiwicGVlcnMiLCJwZWVyTGlzdCIsInRyYW5zYWN0aW9uUG9vbCIsImNvdW50IiwidHhDb3VudCIsInBlbmRpbmciLCJwZW5kaW5nVHJhbnNhY3Rpb25zIiwidG9Kc29uIiwicG9zdCIsImJvZHkiLCJyZWNpcGllbnQiLCJhbW91bnQiLCJ0cmFuc2FjdGlvbiIsImNyZWF0ZVRyYW5zYWN0aW9uIiwiYnJvYWRjYXN0VHJhbnNhY3Rpb24iLCJyZWRpcmVjdCIsImJsb2NrIiwibWluZSIsInRvSnNvblN0cmluZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQUVBLElBQU1BLE9BQU8sR0FBRyxNQUFoQjs7QUFFQSxJQUFNQyxHQUFHLEdBQUdDLE9BQU8sQ0FBQyxxQkFBRCxDQUFuQjs7QUFDQSxJQUFNQyxJQUFJLEdBQUdELE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLElBQU1FLE9BQU8sR0FBR0YsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O2VBQ3dCQSxPQUFPLENBQUMsaUJBQUQsQztJQUF2QkcsVyxZQUFBQSxXOztBQUVSLElBQU1DLE1BQU0sR0FBR0wsR0FBRyxDQUFDTSxhQUFKLENBQWtCQyxZQUFsQixDQUErQlIsT0FBL0IsQ0FBZjtBQUNBLElBQU1TLFNBQVMsR0FBR1IsR0FBRyxDQUFDUyxTQUFKLENBQWNDLGFBQWQsQ0FBNEJMLE1BQTVCLENBQWxCO0FBRUEsSUFBSU0sT0FBTyxHQUFHLEtBQWQ7QUFFQTs7Ozs7Ozs7O0lBUU1DLFU7OztBQUNGOzs7Ozs7OztBQVFBLHNCQUFZQyxRQUFaLEVBQXNCQyxVQUF0QixFQUFrQ0MsTUFBbEMsRUFBMENDLFNBQTFDLEVBQXFEQyxNQUFyRCxFQUE2REMsS0FBN0QsRUFBb0U7QUFBQTs7QUFDaEUsU0FBS0MsSUFBTCxHQUFZTixRQUFaO0FBQ0EsU0FBS0MsVUFBTCxHQUFrQkEsVUFBbEI7QUFDQSxTQUFLQyxNQUFMLEdBQWNBLE1BQWQ7QUFDQSxTQUFLQyxTQUFMLEdBQWlCQSxTQUFqQjtBQUNBLFNBQUtDLE1BQUwsR0FBY0EsTUFBZDtBQUNBLFNBQUtDLEtBQUwsR0FBYUEsS0FBYjtBQUNIO0FBRUQ7Ozs7Ozs7NEJBR1E7QUFBQTs7QUFDSlYsTUFBQUEsU0FBUyxPQUFULENBQWMsWUFBTTtBQUNoQixZQUFJLENBQUNHLE9BQUwsRUFBYztBQUNWTixVQUFBQSxNQUFNLENBQUNlLElBQVAsQ0FBWSx3QkFBWjs7QUFDQSxVQUFBLEtBQUksQ0FBQ0osU0FBTCxDQUFlSyxNQUFmOztBQUVBLGNBQU1DLEdBQUcsR0FBR25CLE9BQU8sRUFBbkI7QUFDQSxjQUFNZ0IsSUFBSSxHQUFHLEtBQUksQ0FBQ04sUUFBbEI7QUFFQVMsVUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFwQixPQUFPLENBQUNxQixJQUFSLEVBQVI7QUFDQUYsVUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVFyQixJQUFJLENBQUM7QUFDVHVCLFlBQUFBLE1BQU0sRUFBRTtBQURDLFdBQUQsQ0FBWjtBQUlBSCxVQUFBQSxHQUFHLENBQUNJLEdBQUosQ0FBUSxlQUFSLEVBQXlCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ25DcEIsWUFBQUEsU0FBUyxPQUFULENBQWMsWUFBTTtBQUNoQkgsY0FBQUEsTUFBTSxDQUFDZSxJQUFQLENBQVksbUJBQVo7QUFFQVEsY0FBQUEsR0FBRyxDQUFDSixJQUFKLENBQVNwQixXQUFXLENBQUMsS0FBSSxDQUFDYSxNQUFMLENBQVlZLFlBQWIsQ0FBcEI7QUFDSCxhQUpEO0FBS0gsV0FORDtBQVFBUCxVQUFBQSxHQUFHLENBQUNJLEdBQUosQ0FBUSxTQUFSLEVBQW1CLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzdCcEIsWUFBQUEsU0FBUyxPQUFULENBQWMsWUFBTTtBQUNoQkgsY0FBQUEsTUFBTSxDQUFDZSxJQUFQLENBQVksYUFBWjs7QUFFQSxjQUFBLEtBQUksQ0FBQ0wsTUFBTCxDQUFZZSxhQUFaLENBQTBCLEtBQUksQ0FBQ2hCLFVBQS9COztBQUNBYyxjQUFBQSxHQUFHLENBQUNKLElBQUosQ0FBUztBQUNMTyxnQkFBQUEsT0FBTyxFQUFFLEtBQUksQ0FBQ2hCLE1BQUwsQ0FBWWlCLFNBRGhCO0FBRUxDLGdCQUFBQSxPQUFPLEVBQUUsS0FBSSxDQUFDbEIsTUFBTCxDQUFZa0IsT0FGaEI7QUFHTEMsZ0JBQUFBLFNBQVMsRUFBRSxLQUFJLENBQUNwQixVQUFMLENBQWdCcUIsTUFIdEI7QUFJTEMsZ0JBQUFBLEtBQUssRUFBRSxLQUFJLENBQUNwQixTQUFMLENBQWVxQixRQUFmLEVBSkY7QUFLTEMsZ0JBQUFBLGVBQWUsRUFBRTtBQUNiQyxrQkFBQUEsS0FBSyxFQUFFLEtBQUksQ0FBQ3RCLE1BQUwsQ0FBWXVCLE9BRE47QUFFYkMsa0JBQUFBLE9BQU8sRUFBRSxLQUFJLENBQUN4QixNQUFMLENBQVl5QixtQkFBWixDQUFnQyxLQUFJLENBQUMzQixNQUFMLENBQVlpQixTQUE1QztBQUZJO0FBTFosZUFBVDtBQVVILGFBZEQ7QUFlSCxXQWhCRDtBQWtCQVYsVUFBQUEsR0FBRyxDQUFDSSxHQUFKLENBQVEsU0FBUixFQUFtQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM3QnBCLFlBQUFBLFNBQVMsT0FBVCxDQUFjLFlBQU07QUFDaEJILGNBQUFBLE1BQU0sQ0FBQ2UsSUFBUCxDQUFZLGFBQVo7QUFFQVEsY0FBQUEsR0FBRyxDQUFDSixJQUFKLENBQVMsS0FBSSxDQUFDVixVQUFMLENBQWdCNkIsTUFBaEIsRUFBVDtBQUNILGFBSkQ7QUFLSCxXQU5ELEVBdENVLENBOENWOztBQUNBckIsVUFBQUEsR0FBRyxDQUFDc0IsSUFBSixDQUFTLFdBQVQsRUFBc0IsVUFBQ2pCLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2hDcEIsWUFBQUEsU0FBUyxPQUFULENBQWMsWUFBTTtBQUNoQkgsY0FBQUEsTUFBTSxDQUFDZSxJQUFQLENBQVksZ0JBQVo7QUFEZ0IsOEJBR2NPLEdBQUcsQ0FBQ2tCLElBSGxCO0FBQUEsa0JBR1JDLFNBSFEsYUFHUkEsU0FIUTtBQUFBLGtCQUdHQyxNQUhILGFBR0dBLE1BSEg7O0FBSWhCLGtCQUFNQyxXQUFXLEdBQUcsS0FBSSxDQUFDakMsTUFBTCxDQUFZa0MsaUJBQVosQ0FDaEJILFNBRGdCLEVBRWhCQyxNQUZnQixFQUdoQixLQUFJLENBQUNqQyxVQUhXLEVBSWhCLEtBQUksQ0FBQ0csTUFKVyxDQUFwQjs7QUFPQSxjQUFBLEtBQUksQ0FBQ0QsU0FBTCxDQUFla0Msb0JBQWYsQ0FBb0NGLFdBQXBDOztBQUNBcEIsY0FBQUEsR0FBRyxDQUFDdUIsUUFBSixDQUFhLGVBQWI7QUFDSCxhQWJEO0FBY0gsV0FmRDtBQWlCQTdCLFVBQUFBLEdBQUcsQ0FBQ3NCLElBQUosQ0FBUyxvQkFBVCxFQUE4QixVQUFDakIsR0FBRCxFQUFNQyxHQUFOLEVBQVk7QUFDdENwQixZQUFBQSxTQUFTLE9BQVQsQ0FBYyxZQUFNO0FBQ2hCSCxjQUFBQSxNQUFNLENBQUNlLElBQVAsQ0FBWSx5QkFBWjs7QUFFQSxrQkFBTWdDLEtBQUssR0FBRyxLQUFJLENBQUNsQyxLQUFMLENBQVdtQyxJQUFYLEVBQWQ7O0FBQ0FoRCxjQUFBQSxNQUFNLENBQUNlLElBQVAsNEJBQWdDZ0MsS0FBSyxDQUFDRSxZQUFOLEVBQWhDO0FBQ0ExQixjQUFBQSxHQUFHLENBQUN1QixRQUFKLENBQWEsU0FBYjtBQUNILGFBTkQ7QUFPSCxXQVJEO0FBVUE5QyxVQUFBQSxNQUFNLENBQUNlLElBQVAsQ0FBWSx3QkFBWjtBQUNBRSxVQUFBQSxHQUFHLENBQUNELE1BQUosQ0FBV0YsSUFBWCxFQUFpQixZQUFNO0FBQ25CZCxZQUFBQSxNQUFNLENBQUNlLElBQVAsK0JBQW1DRCxJQUFuQztBQUNILFdBRkQ7QUFJQVIsVUFBQUEsT0FBTyxHQUFHLElBQVY7QUFDSDtBQUNKLE9BbEZEO0FBbUZIOzs7Ozs7QUFHTDRDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUFFNUMsRUFBQUEsVUFBVSxFQUFWQTtBQUFGLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FjZXIvRGVza3RvcC9taW5hY29pbi9tYXN0ZXIvbWluYWNvaW4vbWluYWNvaW4tc2VydmVyL3NyYyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgTE9HX1RBRyA9ICdIVFRQJztcblxuY29uc3QgaW9jID0gcmVxdWlyZSgnLi91dGlsL2lvY0NvbnRhaW5lcicpO1xuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKTtcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG5jb25zdCB7IGNvbnZlcnRKc29uIH0gPSByZXF1aXJlKCcuL3V0aWwvanNvblV0aWwnKTtcblxuY29uc3QgbG9nZ2VyID0gaW9jLmxvZ2dlckZhY3RvcnkuY3JlYXRlTG9nZ2VyKExPR19UQUcpO1xuY29uc3QgZXhjZXB0aW9uID0gaW9jLmVoRmFjdG9yeS5jcmVhdGVIYW5kbGVyKGxvZ2dlcik7XG5cbmxldCBydW5uaW5nID0gZmFsc2U7XG5cbi8qKlxuICogbWluYWNvaW46IEh0dHBTZXJ2ZXJcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBlbmNhcHN1bGF0ZXMgdGhlIG1haW4gY29tcG9uZW50cyBvZiB0aGUgc2VydmVyLXNpZGUgaW50ZXJmYWNlLCBzdWNoIGFzIHRoZSBcbiAqIHdlYiBzZXJ2ZXIgYW5kIHRoZSBwMnAgc2VydmVyLiBcbiAqXG4gKiBhdXRob3I6IEpvaG4gUi4gS29zaW5za2lcbiAqL1xuY2xhc3MgSHR0cFNlcnZlciB7XG4gICAgLyoqXG4gICAgICogY29uc3RydWN0b3JcbiAgICAgKiBAcGFyYW0ge0Jsb2NrY2hhaW59IGJsb2NrY2hhaW5cbiAgICAgKiBAcGFyYW0ge1dhbGxldH0gd2FsbGV0XG4gICAgICogQHBhcmFtIHtJUDJQU2VydmVyfSBwMnBTZXJ2ZXJcbiAgICAgKiBAcGFyYW0ge1RyYW5zYWN0aW9uUG9vbH0gdHhQb29sXG4gICAgICogQHBhcmFtIHtNaW5lcn0gbWluZXJcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihodHRwUG9ydCwgYmxvY2tjaGFpbiwgd2FsbGV0LCBwMnBTZXJ2ZXIsIHR4UG9vbCwgbWluZXIpIHtcbiAgICAgICAgdGhpcy5wb3J0ID0gaHR0cFBvcnQ7XG4gICAgICAgIHRoaXMuYmxvY2tjaGFpbiA9IGJsb2NrY2hhaW47XG4gICAgICAgIHRoaXMud2FsbGV0ID0gd2FsbGV0O1xuICAgICAgICB0aGlzLnAycFNlcnZlciA9IHAycFNlcnZlcjtcbiAgICAgICAgdGhpcy50eFBvb2wgPSB0eFBvb2w7XG4gICAgICAgIHRoaXMubWluZXIgPSBtaW5lcjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBzdGFydHMgdGhlIHNlcnZlciBydW5uaW5nXG4gICAgICovXG4gICAgc3RhcnQoKSB7XG4gICAgICAgIGV4Y2VwdGlvbi50cnkoKCkgPT4ge1xuICAgICAgICAgICAgaWYgKCFydW5uaW5nKSB7XG4gICAgICAgICAgICAgICAgbG9nZ2VyLmluZm8oJ3N0YXJ0aW5nIHAycCBzZXJ2ZXIuLi4nKTtcbiAgICAgICAgICAgICAgICB0aGlzLnAycFNlcnZlci5saXN0ZW4oKTtcblxuICAgICAgICAgICAgICAgIGNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbiAgICAgICAgICAgICAgICBjb25zdCBwb3J0ID0gdGhpcy5odHRwUG9ydDtcblxuICAgICAgICAgICAgICAgIGFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xuICAgICAgICAgICAgICAgIGFwcC51c2UoY29ycyh7XG4gICAgICAgICAgICAgICAgICAgIG9yaWdpbjogJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMCdcbiAgICAgICAgICAgICAgICB9KSk7XG5cbiAgICAgICAgICAgICAgICBhcHAuZ2V0KCcvdHJhbnNhY3Rpb25zJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGV4Y2VwdGlvbi50cnkoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLmluZm8oJ0dFVCAvdHJhbnNhY3Rpb25zJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcy5qc29uKGNvbnZlcnRKc29uKHRoaXMudHhQb29sLnRyYW5zYWN0aW9ucykpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIGFwcC5nZXQoJy9wdWJsaWMnLCAocmVxLCByZXMpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZXhjZXB0aW9uLnRyeSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbygnR0VUIC9wdWJsaWMnKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy53YWxsZXQudXBkYXRlQmFsYW5jZSh0aGlzLmJsb2NrY2hhaW4pO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzLmpzb24oe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZHJlc3M6IHRoaXMud2FsbGV0LnB1YmxpY0tleSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFsYW5jZTogdGhpcy53YWxsZXQuYmFsYW5jZSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhaW5TaXplOiB0aGlzLmJsb2NrY2hhaW4uaGVpZ2h0LCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZWVyczogdGhpcy5wMnBTZXJ2ZXIucGVlckxpc3QoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2FjdGlvblBvb2w6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnQ6IHRoaXMudHhQb29sLnR4Q291bnQsIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZW5kaW5nOiB0aGlzLnR4UG9vbC5wZW5kaW5nVHJhbnNhY3Rpb25zKHRoaXMud2FsbGV0LnB1YmxpY0tleSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgYXBwLmdldCgnL2Jsb2NrcycsIChyZXEsIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgICAgICBleGNlcHRpb24udHJ5KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvZ2dlci5pbmZvKCdHRVQgL2Jsb2NrcycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICByZXMuanNvbih0aGlzLmJsb2NrY2hhaW4udG9Kc29uKCkpOyBcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSk7IFxuXG4gICAgICAgICAgICAgICAgLy9wYXNzIGluOiByZWNpcGllbnQsIGFtb3VudFxuICAgICAgICAgICAgICAgIGFwcC5wb3N0KCcvdHJhbnNhY3QnLCAocmVxLCByZXMpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZXhjZXB0aW9uLnRyeSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbygnUE9TVCAvdHJhbnNhY3QnKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgeyByZWNpcGllbnQsIGFtb3VudCB9ID0gcmVxLmJvZHk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0cmFuc2FjdGlvbiA9IHRoaXMud2FsbGV0LmNyZWF0ZVRyYW5zYWN0aW9uKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY2lwaWVudCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbW91bnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5ibG9ja2NoYWluLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudHhQb29sXG4gICAgICAgICAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnAycFNlcnZlci5icm9hZGNhc3RUcmFuc2FjdGlvbih0cmFuc2FjdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXMucmVkaXJlY3QoJy90cmFuc2FjdGlvbnMnKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICBhcHAucG9zdCgnL21pbmUtdHJhbnNhY3Rpb25zJywocmVxLCByZXMpPT57XG4gICAgICAgICAgICAgICAgICAgIGV4Y2VwdGlvbi50cnkoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLmluZm8oJ1BPU1QgL21pbmUtdHJhbnNhY3Rpb25zJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGJsb2NrID0gdGhpcy5taW5lci5taW5lKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbyhgbmV3IGJsb2NrIGFkZGVkOiAke2Jsb2NrLnRvSnNvblN0cmluZygpfWApO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzLnJlZGlyZWN0KCcvYmxvY2tzJyk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbygnc3RhcnRpbmcgd2ViIHNlcnZlci4uLicpO1xuICAgICAgICAgICAgICAgIGFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbyhgYXBwIHJ1bm5pbmcgb24gcG9ydCAke3BvcnR9YCk7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICBydW5uaW5nID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHsgSHR0cFNlcnZlciB9O1xuXG5cblxuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "HttpServer.js"
      ],
      "names": [
        "LOG_TAG",
        "ioc",
        "require",
        "cors",
        "express",
        "convertJson",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "running",
        "HttpServer",
        "httpPort",
        "blockchain",
        "wallet",
        "p2pServer",
        "txPool",
        "miner",
        "port",
        "info",
        "listen",
        "app",
        "use",
        "json",
        "origin",
        "get",
        "req",
        "res",
        "transactions",
        "updateBalance",
        "address",
        "publicKey",
        "balance",
        "chainSize",
        "height",
        "peers",
        "peerList",
        "transactionPool",
        "count",
        "txCount",
        "pending",
        "pendingTransactions",
        "toJson",
        "post",
        "body",
        "recipient",
        "amount",
        "transaction",
        "createTransaction",
        "broadcastTransaction",
        "redirect",
        "block",
        "mine",
        "toJsonString",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;AAEA,IAAMA,OAAO,GAAG,MAAhB;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAnB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;eACwBA,OAAO,CAAC,iBAAD,C;IAAvBG,W,YAAAA,W;;AAER,IAAMC,MAAM,GAAGL,GAAG,CAACM,aAAJ,CAAkBC,YAAlB,CAA+BR,OAA/B,CAAf;AACA,IAAMS,SAAS,GAAGR,GAAG,CAACS,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA,IAAIM,OAAO,GAAG,KAAd;AAEA;;;;;;;;;IAQMC,U;;;AACF;;;;;;;;AAQA,sBAAYC,QAAZ,EAAsBC,UAAtB,EAAkCC,MAAlC,EAA0CC,SAA1C,EAAqDC,MAArD,EAA6DC,KAA7D,EAAoE;AAAA;;AAChE,SAAKC,IAAL,GAAYN,QAAZ;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACH;AAED;;;;;;;4BAGQ;AAAA;;AACJV,MAAAA,SAAS,OAAT,CAAc,YAAM;AAChB,YAAI,CAACG,OAAL,EAAc;AACVN,UAAAA,MAAM,CAACe,IAAP,CAAY,wBAAZ;;AACA,UAAA,KAAI,CAACJ,SAAL,CAAeK,MAAf;;AAEA,cAAMC,GAAG,GAAGnB,OAAO,EAAnB;AACA,cAAMgB,IAAI,GAAG,KAAI,CAACN,QAAlB;AAEAS,UAAAA,GAAG,CAACC,GAAJ,CAAQpB,OAAO,CAACqB,IAAR,EAAR;AACAF,UAAAA,GAAG,CAACC,GAAJ,CAAQrB,IAAI,CAAC;AACTuB,YAAAA,MAAM,EAAE;AADC,WAAD,CAAZ;AAIAH,UAAAA,GAAG,CAACI,GAAJ,CAAQ,eAAR,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnCpB,YAAAA,SAAS,OAAT,CAAc,YAAM;AAChBH,cAAAA,MAAM,CAACe,IAAP,CAAY,mBAAZ;AAEAQ,cAAAA,GAAG,CAACJ,IAAJ,CAASpB,WAAW,CAAC,KAAI,CAACa,MAAL,CAAYY,YAAb,CAApB;AACH,aAJD;AAKH,WAND;AAQAP,UAAAA,GAAG,CAACI,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7BpB,YAAAA,SAAS,OAAT,CAAc,YAAM;AAChBH,cAAAA,MAAM,CAACe,IAAP,CAAY,aAAZ;;AAEA,cAAA,KAAI,CAACL,MAAL,CAAYe,aAAZ,CAA0B,KAAI,CAAChB,UAA/B;;AACAc,cAAAA,GAAG,CAACJ,IAAJ,CAAS;AACLO,gBAAAA,OAAO,EAAE,KAAI,CAAChB,MAAL,CAAYiB,SADhB;AAELC,gBAAAA,OAAO,EAAE,KAAI,CAAClB,MAAL,CAAYkB,OAFhB;AAGLC,gBAAAA,SAAS,EAAE,KAAI,CAACpB,UAAL,CAAgBqB,MAHtB;AAILC,gBAAAA,KAAK,EAAE,KAAI,CAACpB,SAAL,CAAeqB,QAAf,EAJF;AAKLC,gBAAAA,eAAe,EAAE;AACbC,kBAAAA,KAAK,EAAE,KAAI,CAACtB,MAAL,CAAYuB,OADN;AAEbC,kBAAAA,OAAO,EAAE,KAAI,CAACxB,MAAL,CAAYyB,mBAAZ,CAAgC,KAAI,CAAC3B,MAAL,CAAYiB,SAA5C;AAFI;AALZ,eAAT;AAUH,aAdD;AAeH,WAhBD;AAkBAV,UAAAA,GAAG,CAACI,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7BpB,YAAAA,SAAS,OAAT,CAAc,YAAM;AAChBH,cAAAA,MAAM,CAACe,IAAP,CAAY,aAAZ;AAEAQ,cAAAA,GAAG,CAACJ,IAAJ,CAAS,KAAI,CAACV,UAAL,CAAgB6B,MAAhB,EAAT;AACH,aAJD;AAKH,WAND,EAtCU,CA8CV;;AACArB,UAAAA,GAAG,CAACsB,IAAJ,CAAS,WAAT,EAAsB,UAACjB,GAAD,EAAMC,GAAN,EAAc;AAChCpB,YAAAA,SAAS,OAAT,CAAc,YAAM;AAChBH,cAAAA,MAAM,CAACe,IAAP,CAAY,gBAAZ;AADgB,8BAGcO,GAAG,CAACkB,IAHlB;AAAA,kBAGRC,SAHQ,aAGRA,SAHQ;AAAA,kBAGGC,MAHH,aAGGA,MAHH;;AAIhB,kBAAMC,WAAW,GAAG,KAAI,CAACjC,MAAL,CAAYkC,iBAAZ,CAChBH,SADgB,EAEhBC,MAFgB,EAGhB,KAAI,CAACjC,UAHW,EAIhB,KAAI,CAACG,MAJW,CAApB;;AAOA,cAAA,KAAI,CAACD,SAAL,CAAekC,oBAAf,CAAoCF,WAApC;;AACApB,cAAAA,GAAG,CAACuB,QAAJ,CAAa,eAAb;AACH,aAbD;AAcH,WAfD;AAiBA7B,UAAAA,GAAG,CAACsB,IAAJ,CAAS,oBAAT,EAA8B,UAACjB,GAAD,EAAMC,GAAN,EAAY;AACtCpB,YAAAA,SAAS,OAAT,CAAc,YAAM;AAChBH,cAAAA,MAAM,CAACe,IAAP,CAAY,yBAAZ;;AAEA,kBAAMgC,KAAK,GAAG,KAAI,CAAClC,KAAL,CAAWmC,IAAX,EAAd;;AACAhD,cAAAA,MAAM,CAACe,IAAP,4BAAgCgC,KAAK,CAACE,YAAN,EAAhC;AACA1B,cAAAA,GAAG,CAACuB,QAAJ,CAAa,SAAb;AACH,aAND;AAOH,WARD;AAUA9C,UAAAA,MAAM,CAACe,IAAP,CAAY,wBAAZ;AACAE,UAAAA,GAAG,CAACD,MAAJ,CAAWF,IAAX,EAAiB,YAAM;AACnBd,YAAAA,MAAM,CAACe,IAAP,+BAAmCD,IAAnC;AACH,WAFD;AAIAR,UAAAA,OAAO,GAAG,IAAV;AACH;AACJ,OAlFD;AAmFH;;;;;;AAGL4C,MAAM,CAACC,OAAP,GAAiB;AAAE5C,EAAAA,UAAU,EAAVA;AAAF,CAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = 'HTTP';\n\nconst ioc = require('./util/iocContainer');\nconst cors = require('cors');\nconst express = require('express');\nconst { convertJson } = require('./util/jsonUtil');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\nlet running = false;\n\n/**\n * minacoin: HttpServer\n * --------------------\n * encapsulates the main components of the server-side interface, such as the \n * web server and the p2p server. \n *\n * author: John R. Kosinski\n */\nclass HttpServer {\n    /**\n     * constructor\n     * @param {Blockchain} blockchain\n     * @param {Wallet} wallet\n     * @param {IP2PServer} p2pServer\n     * @param {TransactionPool} txPool\n     * @param {Miner} miner\n     */\n    constructor(httpPort, blockchain, wallet, p2pServer, txPool, miner) {\n        this.port = httpPort;\n        this.blockchain = blockchain;\n        this.wallet = wallet;\n        this.p2pServer = p2pServer;\n        this.txPool = txPool;\n        this.miner = miner;\n    }\n\n    /**\n     * starts the server running\n     */\n    start() {\n        exception.try(() => {\n            if (!running) {\n                logger.info('starting p2p server...');\n                this.p2pServer.listen();\n\n                const app = express();\n                const port = this.httpPort;\n\n                app.use(express.json());\n                app.use(cors({\n                    origin: 'http://localhost:3000'\n                }));\n\n                app.get('/transactions', (req, res) => {\n                    exception.try(() => {\n                        logger.info('GET /transactions');\n\n                        res.json(convertJson(this.txPool.transactions));\n                    });\n                });\n\n                app.get('/public', (req, res) => {\n                    exception.try(() => {\n                        logger.info('GET /public');\n\n                        this.wallet.updateBalance(this.blockchain);\n                        res.json({\n                            address: this.wallet.publicKey, \n                            balance: this.wallet.balance, \n                            chainSize: this.blockchain.height, \n                            peers: this.p2pServer.peerList(),\n                            transactionPool: {\n                                count: this.txPool.txCount, \n                                pending: this.txPool.pendingTransactions(this.wallet.publicKey)\n                            }\n                        });\n                    });\n                });\n                \n                app.get('/blocks', (req, res) => {\n                    exception.try(() => {\n                        logger.info('GET /blocks');\n                        \n                        res.json(this.blockchain.toJson()); \n                    });\n                }); \n\n                //pass in: recipient, amount\n                app.post('/transact', (req, res) => {\n                    exception.try(() => {\n                        logger.info('POST /transact');\n\n                        const { recipient, amount } = req.body;\n                        const transaction = this.wallet.createTransaction(\n                            recipient,\n                            amount,\n                            this.blockchain,\n                            this.txPool\n                        );\n\n                        this.p2pServer.broadcastTransaction(transaction);\n                        res.redirect('/transactions');\n                    });\n                });\n\n                app.post('/mine-transactions',(req, res)=>{\n                    exception.try(() => {\n                        logger.info('POST /mine-transactions');\n\n                        const block = this.miner.mine();\n                        logger.info(`new block added: ${block.toJsonString()}`);\n                        res.redirect('/blocks');\n                    });\n                })\n\n                logger.info('starting web server...');\n                app.listen(port, () => {\n                    logger.info(`app running on port ${port}`);\n                });\n\n                running = true;\n            }\n        });\n    }\n}\n\nmodule.exports = { HttpServer };\n\n\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567888638956
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util/jsonUtil.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util/jsonUtil.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util/jsonUtil.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util/jsonUtil.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util",
        "sourceFileName": "jsonUtil.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction convertJson(obj) {\n  if (Array.isArray(obj)) {\n    var output = [];\n    obj.forEach(function (i) {\n      output.push(convertJson(i));\n    });\n    return output;\n  }\n\n  if (obj.toJson) {\n    return obj.toJson();\n  }\n\n  return obj;\n}\n\nexports.convertJson = convertJson;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzb25VdGlsLmpzIl0sIm5hbWVzIjpbImNvbnZlcnRKc29uIiwib2JqIiwiQXJyYXkiLCJpc0FycmF5Iiwib3V0cHV0IiwiZm9yRWFjaCIsImkiLCJwdXNoIiwidG9Kc29uIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsU0FBU0EsV0FBVCxDQUFxQkMsR0FBckIsRUFBMEI7QUFDdEIsTUFBSUMsS0FBSyxDQUFDQyxPQUFOLENBQWNGLEdBQWQsQ0FBSixFQUF3QjtBQUNwQixRQUFNRyxNQUFNLEdBQUcsRUFBZjtBQUNBSCxJQUFBQSxHQUFHLENBQUNJLE9BQUosQ0FBWSxVQUFDQyxDQUFELEVBQU87QUFDZkYsTUFBQUEsTUFBTSxDQUFDRyxJQUFQLENBQVlQLFdBQVcsQ0FBQ00sQ0FBRCxDQUF2QjtBQUNILEtBRkQ7QUFHQSxXQUFPRixNQUFQO0FBQ0g7O0FBQ0QsTUFBSUgsR0FBRyxDQUFDTyxNQUFSLEVBQWdCO0FBQ1osV0FBT1AsR0FBRyxDQUFDTyxNQUFKLEVBQVA7QUFDSDs7QUFDRCxTQUFPUCxHQUFQO0FBQ0g7O0FBRURRLE9BQU8sQ0FBQ1QsV0FBUixHQUFzQkEsV0FBdEIiLCJzb3VyY2VSb290IjoiL2hvbWUvYWNlci9EZXNrdG9wL21pbmFjb2luL21hc3Rlci9taW5hY29pbi9taW5hY29pbi1zZXJ2ZXIvc3JjL3V0aWwiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNvbnZlcnRKc29uKG9iaikge1xuICAgIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICAgICAgY29uc3Qgb3V0cHV0ID0gW107XG4gICAgICAgIG9iai5mb3JFYWNoKChpKSA9PiB7XG4gICAgICAgICAgICBvdXRwdXQucHVzaChjb252ZXJ0SnNvbihpKSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gb3V0cHV0O1xuICAgIH1cbiAgICBpZiAob2JqLnRvSnNvbikge1xuICAgICAgICByZXR1cm4gb2JqLnRvSnNvbigpO1xuICAgIH1cbiAgICByZXR1cm4gb2JqO1xufVxuXG5leHBvcnRzLmNvbnZlcnRKc29uID0gY29udmVydEpzb247Il19",
    "map": {
      "version": 3,
      "sources": [
        "jsonUtil.js"
      ],
      "names": [
        "convertJson",
        "obj",
        "Array",
        "isArray",
        "output",
        "forEach",
        "i",
        "push",
        "toJson",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,SAASA,WAAT,CAAqBC,GAArB,EAA0B;AACtB,MAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;AACpB,QAAMG,MAAM,GAAG,EAAf;AACAH,IAAAA,GAAG,CAACI,OAAJ,CAAY,UAACC,CAAD,EAAO;AACfF,MAAAA,MAAM,CAACG,IAAP,CAAYP,WAAW,CAACM,CAAD,CAAvB;AACH,KAFD;AAGA,WAAOF,MAAP;AACH;;AACD,MAAIH,GAAG,CAACO,MAAR,EAAgB;AACZ,WAAOP,GAAG,CAACO,MAAJ,EAAP;AACH;;AACD,SAAOP,GAAP;AACH;;AAEDQ,OAAO,CAACT,WAAR,GAAsBA,WAAtB",
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/util",
      "sourcesContent": [
        "'use strict';\n\nfunction convertJson(obj) {\n    if (Array.isArray(obj)) {\n        const output = [];\n        obj.forEach((i) => {\n            output.push(convertJson(i));\n        });\n        return output;\n    }\n    if (obj.toJson) {\n        return obj.toJson();\n    }\n    return obj;\n}\n\nexports.convertJson = convertJson;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567888638956
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/database/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/database/classes/LocalJsonDb.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/database/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/database/classes/LocalJsonDb.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/database/classes/LocalJsonDb.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/database/classes/LocalJsonDb.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/database/classes",
        "sourceFileName": "LocalJsonDb.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar LOG_TAG = \"LDB\";\n\nvar ioc = require('../../../util/iocContainer');\n\nvar fs = require('fs');\n\nvar IDatabase = require('./IDatabase.js');\n\nvar logger = ioc.loggerFactory.createLogger(LOG_TAG);\nvar exception = ioc.ehFactory.createHandler(logger);\n/**\n * minacoin: LocalJsonDb\n * ---------------------\n * implementation of IDatabase that reads/writes local files. \n *\n * author: John R. Kosinski\n */\n\nvar LocalFileDb =\n/*#__PURE__*/\nfunction (_IDatabase) {\n  _inherits(LocalFileDb, _IDatabase);\n\n  function LocalFileDb() {\n    _classCallCheck(this, LocalFileDb);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LocalFileDb).call(this));\n  }\n  /**\n   * serialize & save the given blockchain to data source\n   * @param {Blockchain} blockchain\n   */\n\n\n  _createClass(LocalFileDb, [{\n    key: \"saveBlockchain\",\n    value: function () {\n      var _saveBlockchain = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(blockchain) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.save('blockchain', blockchain);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function saveBlockchain(_x) {\n        return _saveBlockchain.apply(this, arguments);\n      }\n\n      return saveBlockchain;\n    }()\n    /**\n     * read blockchain data from data source and return as json\n     * @returns {json}\n     */\n\n    /*json*/\n\n  }, {\n    key: \"getBlockchain\",\n    value: function () {\n      var _getBlockchain = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.read('blockchain');\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getBlockchain() {\n        return _getBlockchain.apply(this, arguments);\n      }\n\n      return getBlockchain;\n    }()\n    /**\n     * serialize & save the given wallet to data source\n     * @param {Wallet} wallet\n     */\n\n  }, {\n    key: \"saveWallet\",\n    value: function () {\n      var _saveWallet = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(wallet) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.save('wallet', wallet);\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function saveWallet(_x2) {\n        return _saveWallet.apply(this, arguments);\n      }\n\n      return saveWallet;\n    }()\n    /**\n     * read wallet data from data source and return as Wallet instance\n     * @returns {json}\n     */\n\n    /*json*/\n\n  }, {\n    key: \"getWallet\",\n    value: function () {\n      var _getWallet = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.read('wallet');\n\n              case 2:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getWallet() {\n        return _getWallet.apply(this, arguments);\n      }\n\n      return getWallet;\n    }()\n    /**\n     * writes a value (json object) to a DB file \n     * @param {string} key \n     * @param {json} obj \n     */\n\n  }, {\n    key: \"save\",\n    value: function () {\n      var _save = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(key, obj) {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return exception.tryAsync(\n                /*#__PURE__*/\n                _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee5() {\n                  var data;\n                  return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          data = {};\n\n                          if (obj) {\n                            data = JSON.stringify(obj.toJson());\n                          }\n\n                          _context5.next = 4;\n                          return writeFile(key + '.txt', data);\n\n                        case 4:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                })));\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function save(_x3, _x4) {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }()\n    /**\n     * reads a value (json object) from the DB file \n     * @param {string} key \n     */\n\n  }, {\n    key: \"read\",\n    value: function () {\n      var _read = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8(key) {\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return exception.tryAsync(\n                /*#__PURE__*/\n                _asyncToGenerator(\n                /*#__PURE__*/\n                regeneratorRuntime.mark(function _callee7() {\n                  var data;\n                  return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          _context7.next = 2;\n                          return readFile(key + '.txt');\n\n                        case 2:\n                          data = _context7.sent;\n                          return _context7.abrupt(\"return\", data ? JSON.parse(data) : null);\n\n                        case 4:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                })));\n\n              case 2:\n                return _context8.abrupt(\"return\", _context8.sent);\n\n              case 3:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function read(_x5) {\n        return _read.apply(this, arguments);\n      }\n\n      return read;\n    }()\n  }]);\n\n  return LocalFileDb;\n}(IDatabase);\n/**\n * write string data to a text file\n * @param {string} path\n * @param {string} data\n * @returns {Promise(bool)}\n */\n\n\nfunction\n/*bool*/\nwriteFile(path, data) {\n  exception[\"try\"](function () {\n    return new Promise(function (resolve, reject) {\n      fs.writeFile(path, data, function (err, data) {\n        if (err) reject(err);else resolve(true);\n      });\n    });\n  });\n}\n/**\n * read string data from a text file\n * @param {string} path\n * @returns {Promise(string)}\n */\n\n\nfunction\n/*string*/\nreadFile(path) {\n  return exception[\"try\"](function () {\n    return new Promise(function (resolve, reject) {\n      fs.readFile(path, function (err, data) {\n        if (err) {\n          logger.error(err);\n          resolve(null);\n        } else {\n          resolve(data.toString());\n        }\n      });\n    });\n  });\n}\n\nvar database = new LocalFileDb();\nmodule.exports = database;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxvY2FsSnNvbkRiLmpzIl0sIm5hbWVzIjpbIkxPR19UQUciLCJpb2MiLCJyZXF1aXJlIiwiZnMiLCJJRGF0YWJhc2UiLCJsb2dnZXIiLCJsb2dnZXJGYWN0b3J5IiwiY3JlYXRlTG9nZ2VyIiwiZXhjZXB0aW9uIiwiZWhGYWN0b3J5IiwiY3JlYXRlSGFuZGxlciIsIkxvY2FsRmlsZURiIiwiYmxvY2tjaGFpbiIsInNhdmUiLCJyZWFkIiwid2FsbGV0Iiwia2V5Iiwib2JqIiwidHJ5QXN5bmMiLCJkYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsInRvSnNvbiIsIndyaXRlRmlsZSIsInJlYWRGaWxlIiwicGFyc2UiLCJwYXRoIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJlcnIiLCJlcnJvciIsInRvU3RyaW5nIiwiZGF0YWJhc2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsT0FBTyxHQUFHLEtBQWhCOztBQUVBLElBQU1DLEdBQUcsR0FBR0MsT0FBTyxDQUFDLDRCQUFELENBQW5COztBQUNBLElBQU1DLEVBQUUsR0FBR0QsT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBQ0EsSUFBTUUsU0FBUyxHQUFHRixPQUFPLENBQUMsZ0JBQUQsQ0FBekI7O0FBRUEsSUFBTUcsTUFBTSxHQUFHSixHQUFHLENBQUNLLGFBQUosQ0FBa0JDLFlBQWxCLENBQStCUCxPQUEvQixDQUFmO0FBQ0EsSUFBTVEsU0FBUyxHQUFHUCxHQUFHLENBQUNRLFNBQUosQ0FBY0MsYUFBZCxDQUE0QkwsTUFBNUIsQ0FBbEI7QUFFQTs7Ozs7Ozs7SUFPTU0sVzs7Ozs7QUFDRix5QkFBYztBQUFBOztBQUFBO0FBRWI7QUFFRDs7Ozs7Ozs7Ozs7K0NBSXFCQyxVOzs7Ozs7dUJBQ1gsS0FBS0MsSUFBTCxDQUFVLFlBQVYsRUFBd0JELFVBQXhCLEM7Ozs7Ozs7Ozs7Ozs7Ozs7QUFHVjs7Ozs7QUFJQTs7Ozs7Ozs7Ozs7Ozt1QkFDaUIsS0FBS0UsSUFBTCxDQUFVLFlBQVYsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUdqQjs7Ozs7Ozs7OztnREFJaUJDLE07Ozs7Ozt1QkFDUCxLQUFLRixJQUFMLENBQVUsUUFBVixFQUFvQkUsTUFBcEIsQzs7Ozs7Ozs7Ozs7Ozs7OztBQUdWOzs7OztBQUlBOzs7Ozs7Ozs7Ozs7O3VCQUNpQixLQUFLRCxJQUFMLENBQVUsUUFBVixDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBR2pCOzs7Ozs7Ozs7OztnREFLV0UsRyxFQUFLQyxHOzs7Ozs7dUJBQ05ULFNBQVMsQ0FBQ1UsUUFBVjtBQUFBO0FBQUE7QUFBQTtBQUFBLHdDQUFtQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDakJDLDBCQUFBQSxJQURpQixHQUNWLEVBRFU7O0FBRXJCLDhCQUFJRixHQUFKLEVBQVM7QUFDTEUsNEJBQUFBLElBQUksR0FBR0MsSUFBSSxDQUFDQyxTQUFMLENBQWVKLEdBQUcsQ0FBQ0ssTUFBSixFQUFmLENBQVA7QUFDSDs7QUFKb0I7QUFBQSxpQ0FLZkMsU0FBUyxDQUFDUCxHQUFHLEdBQUcsTUFBUCxFQUFlRyxJQUFmLENBTE07O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsaUJBQW5CLEc7Ozs7Ozs7Ozs7Ozs7Ozs7QUFTVjs7Ozs7Ozs7OztnREFJV0gsRzs7Ozs7O3VCQUNNUixTQUFTLENBQUNVLFFBQVY7QUFBQTtBQUFBO0FBQUE7QUFBQSx3Q0FBbUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxpQ0FDVE0sUUFBUSxDQUFDUixHQUFHLEdBQUcsTUFBUCxDQURDOztBQUFBO0FBQ3RCRywwQkFBQUEsSUFEc0I7QUFBQSw0REFFckJBLElBQUksR0FBR0MsSUFBSSxDQUFDSyxLQUFMLENBQVdOLElBQVgsQ0FBSCxHQUFzQixJQUZMOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGlCQUFuQixHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBekRLZixTO0FBaUUxQjs7Ozs7Ozs7QUFNQTtBQUFTO0FBQVNtQixTQUFsQixDQUE0QkcsSUFBNUIsRUFBa0NQLElBQWxDLEVBQXdDO0FBQ3BDWCxFQUFBQSxTQUFTLE9BQVQsQ0FBYyxZQUFNO0FBQ2hCLFdBQU8sSUFBSW1CLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDcEMxQixNQUFBQSxFQUFFLENBQUNvQixTQUFILENBQWFHLElBQWIsRUFBbUJQLElBQW5CLEVBQXlCLFVBQUNXLEdBQUQsRUFBTVgsSUFBTixFQUFlO0FBQ3BDLFlBQUlXLEdBQUosRUFDSUQsTUFBTSxDQUFDQyxHQUFELENBQU4sQ0FESixLQUdJRixPQUFPLENBQUMsSUFBRCxDQUFQO0FBQ1AsT0FMRDtBQU1ILEtBUE0sQ0FBUDtBQVFILEdBVEQ7QUFVSDtBQUVEOzs7Ozs7O0FBS0E7QUFBUztBQUFXSixRQUFwQixDQUE2QkUsSUFBN0IsRUFBbUM7QUFDL0IsU0FBT2xCLFNBQVMsT0FBVCxDQUFjLFlBQU07QUFDdkIsV0FBTyxJQUFJbUIsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUNwQzFCLE1BQUFBLEVBQUUsQ0FBQ3FCLFFBQUgsQ0FBWUUsSUFBWixFQUFrQixVQUFDSSxHQUFELEVBQU1YLElBQU4sRUFBZTtBQUM3QixZQUFJVyxHQUFKLEVBQVM7QUFDTHpCLFVBQUFBLE1BQU0sQ0FBQzBCLEtBQVAsQ0FBYUQsR0FBYjtBQUNBRixVQUFBQSxPQUFPLENBQUMsSUFBRCxDQUFQO0FBQ0gsU0FIRCxNQUlLO0FBQ0RBLFVBQUFBLE9BQU8sQ0FBQ1QsSUFBSSxDQUFDYSxRQUFMLEVBQUQsQ0FBUDtBQUNIO0FBQ0osT0FSRDtBQVNILEtBVk0sQ0FBUDtBQVdILEdBWk0sQ0FBUDtBQWFIOztBQUVELElBQU1DLFFBQVEsR0FBRyxJQUFJdEIsV0FBSixFQUFqQjtBQUNBdUIsTUFBTSxDQUFDQyxPQUFQLEdBQWlCRixRQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9hY2VyL0Rlc2t0b3AvbWluYWNvaW4vbWFzdGVyL21pbmFjb2luL21pbmFjb2luLXNlcnZlci9zcmMvbGliL2RhdGFiYXNlL2NsYXNzZXMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IExPR19UQUcgPSBcIkxEQlwiO1xuXG5jb25zdCBpb2MgPSByZXF1aXJlKCcuLi8uLi8uLi91dGlsL2lvY0NvbnRhaW5lcicpO1xuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuY29uc3QgSURhdGFiYXNlID0gcmVxdWlyZSgnLi9JRGF0YWJhc2UuanMnKTtcblxuY29uc3QgbG9nZ2VyID0gaW9jLmxvZ2dlckZhY3RvcnkuY3JlYXRlTG9nZ2VyKExPR19UQUcpO1xuY29uc3QgZXhjZXB0aW9uID0gaW9jLmVoRmFjdG9yeS5jcmVhdGVIYW5kbGVyKGxvZ2dlcik7XG5cbi8qKlxuICogbWluYWNvaW46IExvY2FsSnNvbkRiXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqIGltcGxlbWVudGF0aW9uIG9mIElEYXRhYmFzZSB0aGF0IHJlYWRzL3dyaXRlcyBsb2NhbCBmaWxlcy4gXG4gKlxuICogYXV0aG9yOiBKb2huIFIuIEtvc2luc2tpXG4gKi9cbmNsYXNzIExvY2FsRmlsZURiIGV4dGVuZHMgSURhdGFiYXNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBzZXJpYWxpemUgJiBzYXZlIHRoZSBnaXZlbiBibG9ja2NoYWluIHRvIGRhdGEgc291cmNlXG4gICAgICogQHBhcmFtIHtCbG9ja2NoYWlufSBibG9ja2NoYWluXG4gICAgICovXG4gICAgYXN5bmMgc2F2ZUJsb2NrY2hhaW4oYmxvY2tjaGFpbikge1xuICAgICAgICBhd2FpdCB0aGlzLnNhdmUoJ2Jsb2NrY2hhaW4nLCBibG9ja2NoYWluKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiByZWFkIGJsb2NrY2hhaW4gZGF0YSBmcm9tIGRhdGEgc291cmNlIGFuZCByZXR1cm4gYXMganNvblxuICAgICAqIEByZXR1cm5zIHtqc29ufVxuICAgICAqL1xuICAgIC8qanNvbiovIGFzeW5jIGdldEJsb2NrY2hhaW4oKSB7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnJlYWQoJ2Jsb2NrY2hhaW4nKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBzZXJpYWxpemUgJiBzYXZlIHRoZSBnaXZlbiB3YWxsZXQgdG8gZGF0YSBzb3VyY2VcbiAgICAgKiBAcGFyYW0ge1dhbGxldH0gd2FsbGV0XG4gICAgICovXG4gICAgYXN5bmMgc2F2ZVdhbGxldCh3YWxsZXQpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5zYXZlKCd3YWxsZXQnLCB3YWxsZXQpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHJlYWQgd2FsbGV0IGRhdGEgZnJvbSBkYXRhIHNvdXJjZSBhbmQgcmV0dXJuIGFzIFdhbGxldCBpbnN0YW5jZVxuICAgICAqIEByZXR1cm5zIHtqc29ufVxuICAgICAqL1xuICAgIC8qanNvbiovIGFzeW5jIGdldFdhbGxldCgpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucmVhZCgnd2FsbGV0Jyk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogd3JpdGVzIGEgdmFsdWUgKGpzb24gb2JqZWN0KSB0byBhIERCIGZpbGUgXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGtleSBcbiAgICAgKiBAcGFyYW0ge2pzb259IG9iaiBcbiAgICAgKi9cbiAgICBhc3luYyBzYXZlKGtleSwgb2JqKSB7XG4gICAgICAgIGF3YWl0IGV4Y2VwdGlvbi50cnlBc3luYyhhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICBsZXQgZGF0YSA9IHt9O1xuICAgICAgICAgICAgaWYgKG9iaikge1xuICAgICAgICAgICAgICAgIGRhdGEgPSBKU09OLnN0cmluZ2lmeShvYmoudG9Kc29uKCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXdhaXQgd3JpdGVGaWxlKGtleSArICcudHh0JywgZGF0YSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIHJlYWRzIGEgdmFsdWUgKGpzb24gb2JqZWN0KSBmcm9tIHRoZSBEQiBmaWxlIFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgXG4gICAgICovXG4gICAgYXN5bmMgcmVhZChrZXkpIHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IGV4Y2VwdGlvbi50cnlBc3luYyhhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVhZEZpbGUoa2V5ICsgJy50eHQnKTtcbiAgICAgICAgICAgIHJldHVybiBkYXRhID8gSlNPTi5wYXJzZShkYXRhKSA6IG51bGw7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cblxuXG4vKipcbiAqIHdyaXRlIHN0cmluZyBkYXRhIHRvIGEgdGV4dCBmaWxlXG4gKiBAcGFyYW0ge3N0cmluZ30gcGF0aFxuICogQHBhcmFtIHtzdHJpbmd9IGRhdGFcbiAqIEByZXR1cm5zIHtQcm9taXNlKGJvb2wpfVxuICovXG5mdW5jdGlvbiAvKmJvb2wqLyB3cml0ZUZpbGUocGF0aCwgZGF0YSkge1xuICAgIGV4Y2VwdGlvbi50cnkoKCkgPT4ge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgZnMud3JpdGVGaWxlKHBhdGgsIGRhdGEsIChlcnIsIGRhdGEpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKVxuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUodHJ1ZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG5cbi8qKlxuICogcmVhZCBzdHJpbmcgZGF0YSBmcm9tIGEgdGV4dCBmaWxlXG4gKiBAcGFyYW0ge3N0cmluZ30gcGF0aFxuICogQHJldHVybnMge1Byb21pc2Uoc3RyaW5nKX1cbiAqL1xuZnVuY3Rpb24gLypzdHJpbmcqLyByZWFkRmlsZShwYXRoKSB7XG4gICAgcmV0dXJuIGV4Y2VwdGlvbi50cnkoKCkgPT4ge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgZnMucmVhZEZpbGUocGF0aCwgKGVyciwgZGF0YSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLmVycm9yKGVycik7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUobnVsbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGRhdGEudG9TdHJpbmcoKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuXG5jb25zdCBkYXRhYmFzZSA9IG5ldyBMb2NhbEZpbGVEYigpO1xubW9kdWxlLmV4cG9ydHMgPSBkYXRhYmFzZTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "LocalJsonDb.js"
      ],
      "names": [
        "LOG_TAG",
        "ioc",
        "require",
        "fs",
        "IDatabase",
        "logger",
        "loggerFactory",
        "createLogger",
        "exception",
        "ehFactory",
        "createHandler",
        "LocalFileDb",
        "blockchain",
        "save",
        "read",
        "wallet",
        "key",
        "obj",
        "tryAsync",
        "data",
        "JSON",
        "stringify",
        "toJson",
        "writeFile",
        "readFile",
        "parse",
        "path",
        "Promise",
        "resolve",
        "reject",
        "err",
        "error",
        "toString",
        "database",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,KAAhB;;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAAC,4BAAD,CAAnB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,gBAAD,CAAzB;;AAEA,IAAMG,MAAM,GAAGJ,GAAG,CAACK,aAAJ,CAAkBC,YAAlB,CAA+BP,OAA/B,CAAf;AACA,IAAMQ,SAAS,GAAGP,GAAG,CAACQ,SAAJ,CAAcC,aAAd,CAA4BL,MAA5B,CAAlB;AAEA;;;;;;;;IAOMM,W;;;;;AACF,yBAAc;AAAA;;AAAA;AAEb;AAED;;;;;;;;;;;+CAIqBC,U;;;;;;uBACX,KAAKC,IAAL,CAAU,YAAV,EAAwBD,UAAxB,C;;;;;;;;;;;;;;;;AAGV;;;;;AAIA;;;;;;;;;;;;;uBACiB,KAAKE,IAAL,CAAU,YAAV,C;;;;;;;;;;;;;;;;;;;AAGjB;;;;;;;;;;gDAIiBC,M;;;;;;uBACP,KAAKF,IAAL,CAAU,QAAV,EAAoBE,MAApB,C;;;;;;;;;;;;;;;;AAGV;;;;;AAIA;;;;;;;;;;;;;uBACiB,KAAKD,IAAL,CAAU,QAAV,C;;;;;;;;;;;;;;;;;;;AAGjB;;;;;;;;;;;gDAKWE,G,EAAKC,G;;;;;;uBACNT,SAAS,CAACU,QAAV;AAAA;AAAA;AAAA;AAAA,wCAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,0BAAAA,IADiB,GACV,EADU;;AAErB,8BAAIF,GAAJ,EAAS;AACLE,4BAAAA,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeJ,GAAG,CAACK,MAAJ,EAAf,CAAP;AACH;;AAJoB;AAAA,iCAKfC,SAAS,CAACP,GAAG,GAAG,MAAP,EAAeG,IAAf,CALM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAnB,G;;;;;;;;;;;;;;;;AASV;;;;;;;;;;gDAIWH,G;;;;;;uBACMR,SAAS,CAACU,QAAV;AAAA;AAAA;AAAA;AAAA,wCAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACTM,QAAQ,CAACR,GAAG,GAAG,MAAP,CADC;;AAAA;AACtBG,0BAAAA,IADsB;AAAA,4DAErBA,IAAI,GAAGC,IAAI,CAACK,KAAL,CAAWN,IAAX,CAAH,GAAsB,IAFL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAnB,G;;;;;;;;;;;;;;;;;;;;;;EAzDKf,S;AAiE1B;;;;;;;;AAMA;AAAS;AAASmB,SAAlB,CAA4BG,IAA5B,EAAkCP,IAAlC,EAAwC;AACpCX,EAAAA,SAAS,OAAT,CAAc,YAAM;AAChB,WAAO,IAAImB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC1B,MAAAA,EAAE,CAACoB,SAAH,CAAaG,IAAb,EAAmBP,IAAnB,EAAyB,UAACW,GAAD,EAAMX,IAAN,EAAe;AACpC,YAAIW,GAAJ,EACID,MAAM,CAACC,GAAD,CAAN,CADJ,KAGIF,OAAO,CAAC,IAAD,CAAP;AACP,OALD;AAMH,KAPM,CAAP;AAQH,GATD;AAUH;AAED;;;;;;;AAKA;AAAS;AAAWJ,QAApB,CAA6BE,IAA7B,EAAmC;AAC/B,SAAOlB,SAAS,OAAT,CAAc,YAAM;AACvB,WAAO,IAAImB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC1B,MAAAA,EAAE,CAACqB,QAAH,CAAYE,IAAZ,EAAkB,UAACI,GAAD,EAAMX,IAAN,EAAe;AAC7B,YAAIW,GAAJ,EAAS;AACLzB,UAAAA,MAAM,CAAC0B,KAAP,CAAaD,GAAb;AACAF,UAAAA,OAAO,CAAC,IAAD,CAAP;AACH,SAHD,MAIK;AACDA,UAAAA,OAAO,CAACT,IAAI,CAACa,QAAL,EAAD,CAAP;AACH;AACJ,OARD;AASH,KAVM,CAAP;AAWH,GAZM,CAAP;AAaH;;AAED,IAAMC,QAAQ,GAAG,IAAItB,WAAJ,EAAjB;AACAuB,MAAM,CAACC,OAAP,GAAiBF,QAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/database/classes",
      "sourcesContent": [
        "'use strict';\n\nconst LOG_TAG = \"LDB\";\n\nconst ioc = require('../../../util/iocContainer');\nconst fs = require('fs');\nconst IDatabase = require('./IDatabase.js');\n\nconst logger = ioc.loggerFactory.createLogger(LOG_TAG);\nconst exception = ioc.ehFactory.createHandler(logger);\n\n/**\n * minacoin: LocalJsonDb\n * ---------------------\n * implementation of IDatabase that reads/writes local files. \n *\n * author: John R. Kosinski\n */\nclass LocalFileDb extends IDatabase {\n    constructor() {\n        super();\n    }\n\n    /**\n     * serialize & save the given blockchain to data source\n     * @param {Blockchain} blockchain\n     */\n    async saveBlockchain(blockchain) {\n        await this.save('blockchain', blockchain);\n    }\n\n    /**\n     * read blockchain data from data source and return as json\n     * @returns {json}\n     */\n    /*json*/ async getBlockchain() {\n        return await this.read('blockchain');\n    }\n\n    /**\n     * serialize & save the given wallet to data source\n     * @param {Wallet} wallet\n     */\n    async saveWallet(wallet) {\n        await this.save('wallet', wallet);\n    }\n\n    /**\n     * read wallet data from data source and return as Wallet instance\n     * @returns {json}\n     */\n    /*json*/ async getWallet() {\n        return await this.read('wallet');\n    }\n\n    /**\n     * writes a value (json object) to a DB file \n     * @param {string} key \n     * @param {json} obj \n     */\n    async save(key, obj) {\n        await exception.tryAsync(async () => {\n            let data = {};\n            if (obj) {\n                data = JSON.stringify(obj.toJson());\n            }\n            await writeFile(key + '.txt', data);\n        });\n    }\n\n    /**\n     * reads a value (json object) from the DB file \n     * @param {string} key \n     */\n    async read(key) {\n        return await exception.tryAsync(async () => {\n            const data = await readFile(key + '.txt');\n            return data ? JSON.parse(data) : null;\n        });\n    }\n}\n\n\n/**\n * write string data to a text file\n * @param {string} path\n * @param {string} data\n * @returns {Promise(bool)}\n */\nfunction /*bool*/ writeFile(path, data) {\n    exception.try(() => {\n        return new Promise((resolve, reject) => {\n            fs.writeFile(path, data, (err, data) => {\n                if (err)\n                    reject(err);\n                else\n                    resolve(true);\n            });\n        });\n    });\n}\n\n/**\n * read string data from a text file\n * @param {string} path\n * @returns {Promise(string)}\n */\nfunction /*string*/ readFile(path) {\n    return exception.try(() => {\n        return new Promise((resolve, reject) => {\n            fs.readFile(path, (err, data) => {\n                if (err) {\n                    logger.error(err);\n                    resolve(null);\n                }\n                else {\n                    resolve(data.toString());\n                }\n            });\n        });\n    });\n}\n\nconst database = new LocalFileDb();\nmodule.exports = database;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567888638956
  },
  "{\"sourceRoot\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/database/classes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"filename\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/database/classes/IDatabase.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/acer/Desktop/minacoin/master/minacoin/minacoin-server\",\"plugins\":[{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/database/classes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/database/classes/IDatabase.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/database/classes/IDatabase.js",
        "plugins": [
          "classPrivateMethods",
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/database/classes/IDatabase.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/database/classes",
        "sourceFileName": "IDatabase.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n/**\n * minacoin: IDatabase\n * -------------------\n * interface for app database which stores things like the blockchain \n * and wallet info. \n *\n * author: John R. Kosinski\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar IDatabase =\n/*#__PURE__*/\nfunction () {\n  function IDatabase() {\n    _classCallCheck(this, IDatabase);\n  }\n\n  _createClass(IDatabase, [{\n    key: \"saveBlockchain\",\n    value: function saveBlockchain(blockchain) {}\n  }, {\n    key: \"getBlockchain\",\n    value: function getBlockchain() {}\n  }, {\n    key: \"saveWallet\",\n    value: function saveWallet(wallet) {}\n  }, {\n    key: \"getWallet\",\n    value: function getWallet() {}\n  }]);\n\n  return IDatabase;\n}();\n\nmodule.exports = IDatabase;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIklEYXRhYmFzZS5qcyJdLCJuYW1lcyI6WyJJRGF0YWJhc2UiLCJibG9ja2NoYWluIiwid2FsbGV0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTs7Ozs7Ozs7Ozs7Ozs7O0lBUU1BLFM7Ozs7Ozs7OzttQ0FDYUMsVSxFQUFZLENBQUc7OztvQ0FDZCxDQUFHOzs7K0JBQ1JDLE0sRUFBUSxDQUFHOzs7Z0NBQ1YsQ0FBRzs7Ozs7O0FBR25CQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJKLFNBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FjZXIvRGVza3RvcC9taW5hY29pbi9tYXN0ZXIvbWluYWNvaW4vbWluYWNvaW4tc2VydmVyL3NyYy9saWIvZGF0YWJhc2UvY2xhc3NlcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JzsgXG5cbi8qKlxuICogbWluYWNvaW46IElEYXRhYmFzZVxuICogLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogaW50ZXJmYWNlIGZvciBhcHAgZGF0YWJhc2Ugd2hpY2ggc3RvcmVzIHRoaW5ncyBsaWtlIHRoZSBibG9ja2NoYWluIFxuICogYW5kIHdhbGxldCBpbmZvLiBcbiAqXG4gKiBhdXRob3I6IEpvaG4gUi4gS29zaW5za2lcbiAqL1xuY2xhc3MgSURhdGFiYXNlIHtcbiAgICBzYXZlQmxvY2tjaGFpbihibG9ja2NoYWluKSB7IH1cbiAgICBnZXRCbG9ja2NoYWluKCkgeyB9XG4gICAgc2F2ZVdhbGxldCh3YWxsZXQpIHsgfVxuICAgIGdldFdhbGxldCgpIHsgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IElEYXRhYmFzZTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "IDatabase.js"
      ],
      "names": [
        "IDatabase",
        "blockchain",
        "wallet",
        "module",
        "exports"
      ],
      "mappings": "AAAA;AAEA;;;;;;;;;;;;;;;IAQMA,S;;;;;;;;;mCACaC,U,EAAY,CAAG;;;oCACd,CAAG;;;+BACRC,M,EAAQ,CAAG;;;gCACV,CAAG;;;;;;AAGnBC,MAAM,CAACC,OAAP,GAAiBJ,SAAjB",
      "sourceRoot": "/home/acer/Desktop/minacoin/master/minacoin/minacoin-server/src/lib/database/classes",
      "sourcesContent": [
        "'use strict'; \n\n/**\n * minacoin: IDatabase\n * -------------------\n * interface for app database which stores things like the blockchain \n * and wallet info. \n *\n * author: John R. Kosinski\n */\nclass IDatabase {\n    saveBlockchain(blockchain) { }\n    getBlockchain() { }\n    saveWallet(wallet) { }\n    getWallet() { }\n}\n\nmodule.exports = IDatabase;"
      ]
    },
    "sourceType": "script",
    "mtime": 1567888638956
  }
}